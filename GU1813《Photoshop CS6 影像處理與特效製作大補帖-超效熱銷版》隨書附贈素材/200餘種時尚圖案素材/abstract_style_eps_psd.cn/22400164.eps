%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 12.0.0
%%For: (misha) (home)
%%Title: (049.eps)
%%CreationDate: 12/21/2008 11:32 PM
%%BoundingBox: 0 0 596 596
%%HiResBoundingBox: 0 0 595.2754 595.2754
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKCustomColor: 1 1 1 1 ([\721\756\742\754\745\771\745\755\750\745])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 297 297 297 297
%AI3_TileBox: -0.600098 -123.96 594.5999 717.96
%AI3_DocumentPreview: Header
%AI5_ArtSize: 595 595
%AI5_RulerUnits: 2
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -329.5 703.5 1 1270 830 26 0 0 4 96 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\312\340\353\353\350\343\360\340\364\350\367\345\361\352\340\377 \352\350\361\362\374") (\310\355\361\362\360\363\354\345\355\362 \312\340\353\350\343\360\340\364 \352\350\361\362\374.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (\317\356\361\362\360\356\367\355\373\351 \352\356\354\357\356\355\356\342\371\350\352 Adobe) (\310\355\361\362\360\363\354\345\355\362 \312\350\361\362\374 \360\340\361\361\345\350\342\340\355\350\377.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (\317\356\361\362\360\356\367\355\373\351 \352\356\354\357\356\355\356\342\371\350\352 Adobe) (\310\355\361\362\360\363\354\345\355\362 \312\350\361\362\374 \360\340\361\361\345\350\342\340\355\350\377.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\301\356\360\344\376\360\355\340\377 \352\350\361\362\374") (\310\355\361\362\360\363\354\345\355\362 \325\363\344\356\346 \352\350\361\362\374.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\301\356\360\344\376\360\355\340\377 \352\350\361\362\374") (\310\355\361\362\360\363\354\345\355\362 \325\363\344\356\346 \352\350\361\362\374.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\325\363\344\356\346\345\361\362\342\345\355\355\340\377 \352\350\361\362\374") (\310\355\361\362\360\363\354\345\355\362 \325\363\344\356\346 \352\350\361\362\374.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\325\363\344\356\346\345\361\362\342\345\355\355\340\377 \352\350\361\362\374") (\310\355\361\362\360\363\354\345\355\362 \325\363\344\356\346 \352\350\361\362\374.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\317\345\360\345\365\356\344") (\306\350\342\373\345 \355\340\353\356\346\345\355\350\377.aip)
%AI8_PluginGroupInfo
(Adobe Tracing Object) (\322\360\340\361\361\350\360\356\342\352\340) (\317\340\352\345\362 \362\360\340\361\361\350\360\356\342\356\352.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe Envelope) (\316\341\356\353\356\367\352\340 \350 \344\345\364\356\360\354\340\366\350\377.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (\321\356\361\362\340\342\355\373\345 \364\350\343\363\360\373 Adobe) (\316\341\360\340\341\356\362\352\340 \352\356\355\362\363\360\356\342S.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\301\373\361\362\360\340\377 \347\340\353\350\342\352\340") (\306\350\342\373\345 \352\360\340\361\352\350.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (\310\355\361\362\360\363\354\345\355\362\340\360\350\351 Adobe \357\356 \360\340\341\356\362\345 \361 \361\350\354\342\356\353\340\354\350) (\321\350\361\362\345\354\340 \367\340\361\362\350\366.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (\301\353\350\352.aip)
%AI5_End_NonPrinting--
6 Bn
%AI5_BeginGradient: (GradientFill 1)
(GradientFill 1) 1 2 Bd
[
<
00000101010102020203030304040404050505060606070707070808080909090A0A0A0A0B0B0B0C
0C0C0C0D0D0D0E0E0E0F0F0F0F1010101111111212
>
<
00000000000001010101010101010101010102020202020202020202020203030303030303030303
030304040404040404040404040505050505050505
>
<
000102030405060708090A0B0C0D0E0F1011121314151617181A1B1C1D1E1F202122232425262728
292A2B2C2D2E2F303132333435363738393A3B3C3D
>
0
1 %_Br
[
0 0 0 0 1 50 0 %_BS
%_0 0 0 0 1 50 0 Bs
0.07 0.02 0.24 0 1 50 100 %_BS
%_0.07 0.02 0.24 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 2)
(GradientFill 2) 1 2 Bd
[
<
1213141516171818191A1B1C1D1E1F20212223242526272828292A2B2C2D2E2F3031323334353637
3839393A3B3C3D3E3F404142434445464748494A4A4B4C4D4E4F505152535455565758595A5A5B5C
5D5E5F606162636465666768696A6B6B6C6D6E6F707172737475767778797A7B7C7C7D7E7F808182
838485868788898A8B8C8C8D8E8F909192939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7A8
A9AAABACADAEAEAFB0B1B2B3B4B5
>
<
0F1010111112121313141414151516161717181819191A1A1B1B1C1C1D1D1D1E1E1F1F2020212122
222323242425252526262727282829292A2A2B2B2C2C2D2D2D2E2E2F2F3030313132323333343435
353636363737383839393A3A3B3B3C3C3D3D3E3E3E3F3F4040414142424343444445454646464747
484849494A4A4B4B4C4C4D4D4E4E4F4F4F5050515152525353545455555656575757585859595A5A
5B5B5C5C5D5D5E5E5F5F5F606061
>
<
4748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E
6F7071727475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F9091929394959697
98999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF
C0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7
E8E9EAEBECEDEEEFF0F1F2F3F4F5
>
<
00000000000000010101010101010101010101010102020202020202020202020202030303030303
03030303030303030404040404040404040404040404050505050505050505050505050606060606
06060606060606060607070707070707070707070707080808080808080808080808080809090909
0909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C
0C0C0C0C0C0C0C0C0C0C0D0D0D0D
>
1 %_Br
[
0.07 0.06 0.28 0 1 50 0 %_BS
%_0.07 0.06 0.28 0 1 50 0 Bs
0.71 0.38 0.96 0.05 1 50 100 %_BS
%_0.71 0.38 0.96 0.05 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 3)
(GradientFill 3) 1 2 Bd
[
<
5756565555555454535353525251515150504F4F4F4E4E4D4D4D4C4C4B4B4B4A4A49494848484747
4646464545444444434342424241414040403F3F3E3E3E3D3D3C3C3C3B3B3A3A3939393838373737
36363535353434333333323231313130302F2F2F2E2E2D2D2C2C2C2B2B2A2A2A2929282828272726
262625252424242323222222212120201F1F1F1E1E1D1D1D1C1C1B1B1B1A1A191919181817171716
161515151414131312121211111010100F0F0E0E0E0D0D0C0C0C0B0B0A0A0A090908080807070606
0605
>
<
21212121212020202020201F1F1F1F1F1F1F1E1E1E1E1E1E1D1D1D1D1D1D1D1C1C1C1C1C1C1C1B1B
1B1B1B1B1A1A1A1A1A1A1A1919191919191818181818181817171717171716161616161616151515
1515151514141414141413131313131313121212121212111111111111111010101010100F0F0F0F
0F0F0F0E0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A0A0A09090909
09090808080808080807070707070707060606060606050505050505050404040404040303030303
0303
>
<
DBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4
B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C
8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564
636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C
3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514
1312
>
0
1 %_Br
[
0.34 0.13 0.86 0 1 50 0 %_BS
%_0.34 0.13 0.86 0 1 50 0 Bs
0.02 0.01 0.07 0 1 50 100 %_BS
%_0.02 0.01 0.07 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 4)
(GradientFill 4) 0 2 Bd
[
<
5E5F606162636465666768696A6B6C6D6E6F6F707172737475767778797A7B7C7D7E7F8081828384
8485868788898A8B8C8D8E8F90919293949596979898999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AA
ABACACADAEAFB0B1B2B3B4B5
>
<
05060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C
2D2E2F3031323435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455
565758595A5B5C5D5E5F6061
>
<
EDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0
F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4
F4F4F4F4F4F4F4F4F5F5F5F5
>
<
00000000010101010101010202020202020203030303030303040404040404040405050505050505
060606060606060707070707070708080808080808090909090909090A0A0A0A0A0A0A0B0B0B0B0B
0B0B0B0C0C0C0C0C0C0C0D0D
>
1 %_Br
[
0.71 0.38 0.96 0.05 1 50 100 %_BS
%_0.71 0.38 0.96 0.05 1 50 100 Bs
0.37 0.02 0.93 0 1 50 0 %_BS
%_0.37 0.02 0.93 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 5)
(GradientFill 5) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
1
1
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
1 %_Br
[
0 1 1 0 1 50 0 %_BS
%_0 1 1 0 1 50 0 Bs
1 1 1 1 1 50 100 %_BS
%_1 1 1 1 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 6)
(GradientFill 6) 1 2 Bd
[
<
05050505050505050505050505050505050505050504040404040404040404040404040404040404
04040404040404040404040404040404030303030303030303030303030303030303030303030303
03030303030303030303020202020202020202020202020202020202020202020202020202020202
02020202020101010101010101010101010101010101010101010101010101010101010101010100
0000000000000000000000000000000000
>
<
030303040404050506060607070708080909090A0A0A0B0B0C0C0C0D0D0D0E0E0F0F0F1010101111
1212121313141414151515161617171718181819191A1A1A1B1B1B1C1C1D1D1D1E1E1E1F1F202020
2121212222232323242424252526262627272728282929292A2A2A2B2B2C2C2C2D2D2D2E2E2F2F2F
30303131313232323333343434353535363637373738383839393A3A3A3B3B3B3C3C3D3D3D3E3E3E
3F3F404040414141424243434344444445
>
<
12131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343536373839
3A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061
62636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F80818283848586878889
8A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1
B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2
>
0
1 %_Br
[
0.02 0.01 0.07 0 1 50 0 %_BS
%_0.02 0.01 0.07 0 1 50 0 Bs
0 0.27 0.76 0 1 50 100 %_BS
%_0 0.27 0.76 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([\721\756\742\754\745\771\745\755\750\745]) 0 Xs
([\721\756\742\754\745\771\745\755\750\745])
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 -1 31 26 23 0 100 Lb
(Layer 1) Ln
0 A
0 O
0 J 0 j 1 w 4 M []0 d1 XR
0.000488 0 m
595.2754 0 L
595.2754 595.2754 L
0.000488 595.2754 L
0.000488 0 L
Bb
0 0 0 0 Bh
1 (GradientFill 1) 267.8735 202.3936 -40 511.418 1 0 0 1 0 0 Bg
391.7689 -328.7332 -328.7332 -391.7689 267.8735 202.3936 Bm
f
0 BB
*u
0 g
432.7529 490.1084 m
432.7529 490.1084 L
432.7529 490.1084 L
f
393.1602 311.2344 m
390.8809 310.8823 388.5684 310.4683 386.25 310.0815 C
383.3447 315.1064 379.6992 319.6821 375.4375 323.6411 C
366.792 332.8022 355.1475 339.251 341.7432 341.2954 C
301.7891 347.3882 264.0659 319.9307 258.3887 279.835 C
252.418 208.3613 310.1904 175.4531 331.0068 106.4033 C
328.3418 113.5615 325.1543 120.5254 321.4492 127.2178 C
309.1367 149.7939 291.2456 169.3076 269.8975 183.5566 C
268.5791 184.6162 267.2402 185.6504 265.8828 186.6582 C
261.3892 191.3984 257.4209 196.0605 253.9385 200.6553 C
251.3501 207.2373 249.4004 214.2676 243.7334 216.3691 C
243.2803 217.207 242.8433 218.043 242.4214 218.876 C
248.8535 224.1592 248.4946 236.9004 256.4536 245.2041 C
250.6821 242.1133 241.29 244.9424 233.5977 244.6816 C
229.4253 256.8076 217.647 262.9922 219.6699 270.6006 C
212.9482 266.7363 208.9434 260.5137 208.7432 252.5391 C
207.6504 253.043 206.5313 253.5508 205.4043 254.085 C
204.5205 265.3486 207.0234 276.8623 213.0859 286.5068 C
220.4321 298.1504 233.4497 305.6904 247.0239 306.8232 C
232.8833 306.0483 219.1743 298.3369 211.5376 286.2334 C
205.6714 276.9014 203.1074 265.835 203.6924 254.9189 C
200.8481 256.3477 198.0107 258.0205 195.4668 260.3008 C
197.9805 244.4102 185.0107 236.3887 195.9907 227.5654 C
182.8481 233.8418 175.2588 215.708 164.3228 213.8604 C
169.9258 212.3643 174.3384 208 178.6895 204.3047 C
143.8369 200.3916 110.7603 181.6104 90.4839 152.9307 C
77.377 134.541 68.5361 112.3252 68.6616 89.3457 C
68.6577 88.8076 68.6572 88.2695 68.6621 87.7305 C
68.5352 65.1113 76.5977 42.6406 90.8301 25.1895 C
99.2876 14.8623 109.814 6.16406 121.6523 0 C
0 0 L
0 595.2754 L
595.2754 595.2754 L
595.2754 441.0259 L
573.3604 475.7876 535.5029 500.0093 491.4023 503.0454 C
470.2178 504.5034 450.0566 499.6567 432.75 490.1069 C
400.2178 474.2676 376.8232 441.9531 374.1592 403.2671 C
374.042 401.5605 373.9766 399.8633 373.9619 398.1753 C
373.7119 393.4932 374.1973 389.0791 374.8887 384.7866 C
374.9648 384.3159 L
376.4785 375.4482 378.8311 367.0142 381.1592 358.6216 C
385.6123 342.79 390.3115 327.1489 393.1602 311.2344 C
Bb
0 0 0 0 Bh
1 (GradientFill 2) 369.0713 369.0708 -40 521.945 1 0 0 1 0 0 Bg
399.8331 -335.4998 -335.4998 -399.8331 369.0713 369.0708 Bm
f
0 BB
*U
*u
0 g
486.2695 104.4854 m
486.8438 104.3643 L
487.0566 104.4893 487.2666 104.6172 487.4863 104.7432 C
487.0723 104.6465 486.6689 104.5625 486.2695 104.4854 C
486.2695 104.4854 L
f
0 g
57.377 0 m
51.8413 4.70313 46.7324 9.91016 42.1367 15.5225 C
25.1675 36.3291 15.5547 63.1221 15.7065 90.0869 C
15.4683 117.2422 25.8916 143.5049 41.3765 165.2295 C
66.2759 200.4492 107.5889 222.9707 150.5542 226.1602 C
150.2002 226.418 149.8452 226.6855 149.4917 226.958 C
106.9292 223.3369 66.1597 200.8496 41.4678 165.9268 C
26.2158 144.5244 15.856 118.7334 15.7061 92.0146 C
15.5562 119.4121 26.0972 145.9014 41.7246 167.8262 C
65.9009 202.0234 105.3433 224.4082 146.8999 229.0713 C
141.7085 233.4775 136.4453 238.6875 129.7612 240.4717 C
142.8003 242.6748 151.8491 264.2959 167.5195 256.8135 C
154.4277 267.332 169.8906 276.8945 166.8945 295.8418 C
169.9277 293.123 173.312 291.1279 176.7041 289.4258 C
176.0068 302.439 179.061 315.6348 186.0547 326.7612 C
195.1602 341.1914 211.5049 350.3857 228.3657 351.311 C
212.1807 349.959 196.6602 340.9702 187.9014 327.0879 C
180.6724 315.5889 177.6919 301.8599 178.7461 288.4287 C
180.0894 287.792 181.4219 287.1865 182.7256 286.5869 C
182.9639 296.0938 187.7363 303.5151 195.7515 308.1235 C
193.3394 299.0503 207.3828 291.6738 212.3569 277.2168 C
221.5293 277.5283 232.7261 274.1563 239.6079 277.8428 C
230.1196 267.9434 230.5469 252.751 222.8794 246.4531 C
223.3843 245.4561 223.9072 244.457 224.4487 243.4551 C
231.1973 240.9463 233.5244 232.5752 236.6084 224.7324 C
240.7632 219.25 245.498 213.6865 250.8599 208.0303 C
252.4849 206.8252 254.083 205.5889 255.6592 204.3223 C
281.1016 187.3359 302.4248 164.0771 317.1016 137.1689 C
321.5234 129.1807 325.3281 120.8672 328.5068 112.3203 C
303.6953 194.668 234.7949 233.9053 241.915 319.1309 C
248.6836 366.938 293.6611 399.6753 341.2969 392.4111 C
357.2852 389.9736 371.1729 382.2764 381.4824 371.3467 C
386.5586 366.6299 390.8994 361.1792 394.3594 355.1943 C
397.125 355.6558 399.8838 356.1475 402.6025 356.5688 C
399.2051 375.5435 393.6025 394.1924 388.293 413.0693 C
385.5176 423.0747 382.7119 433.1304 380.9072 443.7036 C
380.875 443.8896 380.8467 444.0781 380.8164 444.2656 C
379.9922 449.3838 379.4141 454.6465 379.7109 460.2285 C
379.7139 460.2534 L
379.7305 462.2568 379.8076 464.2734 379.9473 466.2988 C
383.124 512.4238 411.0166 550.9526 449.8037 569.8374 C
449.8076 569.8394 L
470.4385 581.2227 494.4775 587.002 519.7344 585.2642 C
547.5742 583.3472 573.3262 574.3496 595.2754 560.1553 C
595.2754 557.4766 L
572.9922 572.521 546.5625 582.0801 517.8965 584.0547 C
496.8594 585.502 476.6787 581.6787 458.6426 573.7173 C
475.3379 580.2974 493.7207 583.3623 512.8145 582.0474 C
543.7383 579.9189 572.0381 568.8906 595.2754 551.6421 C
595.2754 543.0513 L
594.8896 543.3594 594.5029 543.666 594.1133 543.9702 C
552.7842 577.0889 490.6836 588.6367 443.7158 560.7583 C
420.4375 547.4355 401.7959 526.0239 391.8887 500.895 C
382.0635 475.8433 380.0283 447.0054 390.7158 421.9849 C
400.5479 397.6982 420.8721 377.814 445.5508 368.4229 C
453.9453 375.0562 466.7627 375.0449 473.2266 385.4907 C
473.3604 379.645 481.25 371.728 486.4629 362.5029 C
500.5459 363.8804 514.2109 368.8423 525.6074 377.728 C
527.5537 379.1714 529.4258 380.7163 531.2246 382.3491 C
538.0322 388.751 543.498 396.5679 547.0371 405.2163 C
552.834 419.4111 553.8867 436.0439 548.4365 450.4966 C
547.2881 453.9644 545.7607 457.3115 543.833 460.4653 C
534.6133 475.9756 516.5654 485.7529 498.4258 484.7803 C
494.209 484.6548 490.0469 483.8413 486.0957 482.4268 C
480.5518 480.7271 475.3457 477.9028 470.9336 474.1626 C
467.3711 471.106 464.3574 467.4497 462.001 463.4116 C
464.5332 468.5015 468.0615 473.1025 472.3926 476.8188 C
479.5879 482.9214 488.8682 486.6138 498.3193 486.9878 C
517.2344 488.1904 536.2959 478.1724 546.1855 461.9082 C
556.3398 445.6104 556.29 424.6143 549.1963 407.2393 C
548.3467 405.1665 547.3867 403.1396 546.3271 401.1694 C
554.7998 415.8774 558.5947 433.3232 555.7148 450.2002 C
551.4922 476.9429 527.8594 498.9517 500.7236 501.9019 C
500.7305 501.9019 500.7393 501.9019 500.7461 501.9004 C
534.6816 498.2788 559.9453 468.4209 557.5801 434.0869 C
554.9063 395.2603 524.8662 364.8501 487.5947 360.3872 C
487.7949 359.9839 L
506.1377 361.7598 523.9434 368.7886 538.0684 380.8662 C
555.9688 396.2222 565.498 420.1665 564.0293 443.4541 C
566.2451 419.2954 556.5977 394.1372 537.9922 378.1733 C
525.4287 367.4341 509.9824 360.6489 493.8213 357.9614 C
530.6914 356.9409 565.0645 360.2749 582.6738 332.042 C
562.2441 351.2104 525.1045 335.9253 487.1826 336.0283 C
486.127 334.4458 484.835 332.8481 483.2568 331.2393 C
508.0176 347.0771 518.4053 314.5449 540.4385 308.002 C
521.624 305.3589 507.7627 274.6709 485.5566 286.043 C
503.9375 270.4111 481.3457 257.2949 484.8926 229.9648 C
466.9463 246.9785 439.4863 245.6484 441.0049 272.0078 C
439.9082 268.6865 438.3955 266.1377 436.5547 264.1973 C
432.7988 239.291 417.9365 226.666 398.5723 226.3525 C
405.4902 233.5527 400.4268 245.8604 398.875 260.5469 C
392.249 261.165 386.0234 261.1475 381.1787 258.7246 C
387.126 264.5908 390.5488 271.8936 393.3799 279.0273 C
385.7412 270.1318 375.6846 264.0615 364.7666 261.1777 C
354.4873 257.8438 343.332 257.2725 332.7969 260.0684 C
318.0586 264.0059 305.8682 275.5146 300.5986 289.6582 C
306.0527 276.2041 317.8496 265.3438 332.0273 261.5566 C
334.7627 260.8301 337.542 260.334 340.3359 260.0566 C
333.5596 261.1963 326.875 263.5664 320.6162 267.2441 C
298.6592 280.1523 291.3232 308.415 304.2314 330.3716 C
313.5283 346.1909 332.7949 352.5244 349.3633 346.0835 C
351.1914 345.374 352.9863 344.5083 354.7314 343.4814 C
368.7842 335.2207 373.4785 317.1318 365.2197 303.0815 C
358.7666 292.0986 344.8057 288.2617 333.6836 294.2461 C
333.6826 294.248 333.6797 294.249 333.6777 294.252 C
342.582 289.4805 354.4004 291.2637 361.2803 298.5493 C
368.4248 305.9287 370.5264 317.4316 367.2334 326.9761 C
364.4863 335.5933 357.4219 342.1411 349.0938 345.2495 C
347.9619 345.6709 346.8037 346.0303 345.6289 346.3228 C
335.8857 348.957 325.1182 347.1904 316.7813 341.6567 C
308.2891 336.2485 302.8809 327.0146 300.6445 317.3101 C
298.4199 307.5625 299.6396 297.1245 303.9629 288.1914 C
312.4814 269.8574 333.8633 260.4043 353.4072 261.8799 C
365.1943 262.6328 376.4492 267.4629 385.2549 275.0654 C
390.6035 279.8721 395.041 285.6787 398.3447 292.0762 C
398.6768 292.7715 398.9941 293.4746 399.2959 294.1865 C
401.2227 298.5825 402.6377 303.1411 403.6221 307.8086 C
403.2549 307.979 402.8975 308.1611 402.5479 308.355 C
397.6758 282.0361 374.7813 263.3008 348.666 263.0508 C
345.7197 263.0225 342.7314 263.2285 339.7256 263.6865 C
315.5186 267.3691 298.8799 289.9805 302.5645 314.187 C
305.4453 333.1035 322.7695 346.2427 341.6221 344.0947 C
341.6279 344.0938 341.6299 344.0933 341.6348 344.0923 C
326.5537 345.7813 311.0625 336.7017 305.5313 322.7041 C
299.6816 308.4258 303.1641 291.21 313.083 279.7324 C
321.7197 269.2461 335.2266 264.0557 348.5723 264.3662 C
350.3916 264.4082 352.2061 264.5527 354.0059 264.7988 C
369.0654 266.5605 383.0977 275.0293 391.6387 287.3965 C
396.3975 294.0137 399.2871 301.6792 400.5801 309.6558 C
388.7031 318.813 389.3457 343.8574 375.9316 353.7949 C
380.9785 353.3608 386.2559 353.9258 391.5439 354.7407 C
388.2871 360.0605 384.2979 364.9243 379.6992 369.1182 C
357.5928 389.938 322.499 391.1978 296.061 378.2383 C
290.8647 375.7661 285.9883 372.7227 281.4932 369.2139 C
288.7183 374.3281 296.8589 378.166 305.4336 380.4131 C
321.6719 384.6763 339.7607 383.4683 354.8203 375.9639 C
362.8154 371.9648 369.7813 366.0405 375.168 358.9077 C
369.9795 365.2012 363.5322 370.4438 356.2344 374.0928 C
341.0352 381.6665 322.7822 382.8882 306.3955 378.585 C
289.9185 374.2646 275.0215 364.1348 265.0908 350.3574 C
254.9111 336.6831 250.4502 319.4253 250.249 302.4287 C
250.189 298.4873 250.4111 294.5566 250.8838 290.6621 C
253.8818 266.7559 264.4121 243.6162 277.6548 222.9707 c
317.1406 161.4092 341.6211 139.9902 355.8525 74.5566 C
340.4033 182.2754 248.9883 215.0498 253.5171 310.7925 C
254.1177 323.4927 258.7671 335.146 264.856 345.3945 C
260.4517 335.3823 256.8696 322.1982 260.8726 312.6206 C
259.937 310.9971 257.6216 310.3589 255.8374 310.2627 C
255.209 302.7998 255.7632 294.6729 256.7739 287.2773 C
265.4785 218.0156 325.7793 182.0234 349.5332 107.1865 C
337.1367 153.1104 319.5703 163.5566 328.6875 209.7637 C
324.709 172.1875 376.2021 123.6846 356.4238 77.9609 C
356.7207 76.0908 357.002 74.2061 357.252 72.2871 C
363.3701 80.6973 370.0625 88.2666 376.9209 95.4834 C
377.2715 95.8555 377.626 96.2256 377.9785 96.5938 C
398.1387 117.417 419.7334 135.5605 441.1943 153.6328 C
484.1641 189.5625 527.4785 224.4346 565.5439 264.1973 C
575.8643 275.0244 585.915 286.3125 595.2754 298.0845 C
595.2754 282.4971 L
524.9961 197.1504 415.1387 126.5898 371.0361 68.9521 C
371.0439 68.958 L
414.5986 125.7412 523.1797 194.0996 595.2754 276.9854 C
595.2754 270.1377 L
535.291 201.1143 451.8818 141.7959 400.9531 91.1934 C
406.8135 94.4873 412.9033 97.3379 419.1855 99.6631 C
419.1846 99.6631 L
419.3779 99.7324 L
420.123 100.0068 420.8711 100.2734 421.6201 100.5332 C
428.7324 103.0156 436.0361 105.0391 443.4404 106.5273 C
451.3857 109.624 458.6084 112.9385 465.167 116.459 C
461.9092 122.4893 459.2236 129.5117 454.8496 134.5957 C
467.4463 130.584 483.6592 144.7305 493.7373 136.6875 C
494.5537 137.4629 495.3496 138.2441 496.1299 139.0322 C
497.2451 148.584 508.8545 157.3545 510.8936 170.4922 C
511.499 166.7559 514.0332 163.2207 517.0938 159.7178 C
526.0537 164.8408 535.1035 167.0029 536.3564 173.8701 C
544.0967 162.7646 543.0137 149.1748 530.4307 136.8643 C
530.084 135.0273 529.2588 133.125 527.8232 131.1455 C
542.1455 142.7842 552.6191 126.6719 569.6025 123.4551 C
552.6592 114.292 554.46 96.1201 538.083 100.1494 C
548.6738 94.7344 546.5811 83.5166 546.1465 73.2051 C
559.3506 60.7236 569.8359 45.3418 575.793 28.3047 C
578.9639 19.1963 580.6807 9.62695 580.9941 0 C
580.332 0 L
579.7148 8.31152 578.0518 16.5391 575.3096 24.4229 C
569.4033 41.3115 559.0908 56.5879 546.0996 69.0625 C
546.1445 67.4688 546.2842 65.9238 546.5742 64.4512 C
557.4092 52.0439 565.7441 37.1084 570.5498 20.2139 C
572.4639 13.4795 573.5781 6.70898 573.9463 0 C
554.4961 0 L
554.0176 4.24219 553.1582 8.43066 551.9375 12.5137 C
549.5352 20.666 545.7861 28.7529 541.2471 35.9814 C
536.9902 42.8096 531.8232 48.9609 525.9902 54.3369 C
525.9629 52.4912 525.8545 50.7012 525.6787 48.9854 C
533.8125 40.4102 540.2686 30.2695 544.1436 19.1855 C
546.2969 13 547.5479 6.5293 547.9238 0 C
547.3555 0 L
546.8037 5.54785 545.6182 11.0283 543.7832 16.3027 C
539.8994 27.4092 533.4502 37.5762 525.3262 46.1904 C
524.3242 39.5498 522.3428 34.3945 520.3896 32.2598 C
520.6064 50.8086 501.5029 50.3154 493.4805 68.2236 C
493.4766 68.2256 L
486.6309 67.7207 479.7822 68.6221 476.6611 66.4785 C
477.6055 68.7617 477.8428 70.9902 477.71 73.1807 C
466.1172 75.7246 454.0498 76.0596 442.3828 74.0078 C
421.5313 70.6699 402.6582 59.209 387.79 44.2998 C
383.4023 39.9277 379.4277 35.1846 375.8662 30.1553 C
374.8486 28.6816 373.8633 27.1816 372.918 25.6631 C
367.8398 17.5791 363.8789 8.93555 361.043 0 C
326.5156 0 L
337.543 44.5527 331.4561 93.1094 309.2607 133.1963 C
291.2949 166.1406 263.0186 193.4209 229.3965 209.8906 C
231.1904 210.248 L
264.4868 193.6689 292.4795 166.5088 310.3301 133.7764 C
332.4551 93.8193 337.5303 44.6982 326.4375 0 C
312.6221 0 L
312.5146 7.90039 308.9492 16.8115 302.6387 23.2227 C
309.2021 20.207 313.2344 14.3203 314.7334 7.88184 C
316.2627 17.2793 312.29 28.6543 306.4072 35.8232 C
299.834 43.833 299.126 55.2637 311.6748 55.4473 C
289.4004 63.4727 306.9316 83.8389 300.9521 104.8701 C
299.7158 108.4014 297.7344 111.7041 295.0806 114.4805 C
292.3525 117.3545 288.9697 119.6309 285.229 121.0996 C
281.4712 122.5371 277.3105 123.252 273.541 122.8213 C
265.8027 122.0791 258.5146 116.5254 255.6802 108.8867 C
254.9746 107.001 254.4907 104.9531 254.3232 102.9551 C
254.1494 101.0068 254.3135 99.0322 254.8237 97.126 C
255.8071 93.3086 258.2109 89.792 261.5029 87.4111 C
264.7095 85.043 269.1094 83.7148 272.9849 84.0918 C
276.9434 84.457 280.772 86.6729 283.1465 90.0527 C
284.5771 92.0996 285.5171 94.5898 285.7275 97.0869 C
285.8608 98.6846 285.6943 100.2861 285.166 101.7744 C
283.8667 105.6631 280.2803 108.791 276.0493 109.4678 C
271.9429 110.2939 267.4629 107.9766 265.728 103.9658 C
264.8853 101.9746 264.6196 99.7139 265.3706 97.7119 C
266.0796 95.6953 267.6982 93.9639 269.7495 93.1436 C
271.8052 92.2852 274.2007 92.3398 276.0732 93.6123 C
277.645 94.6367 278.7437 96.4512 278.9224 98.3633 C
278.9536 98.7129 278.9561 99.0654 278.9243 99.418 C
278.7212 101.6904 276.8271 103.7607 274.4448 104.0938 C
272.0957 104.5811 269.522 102.7129 269.3066 100.1748 C
269.499 102.6846 271.6865 104.5635 274.1963 104.375 C
277.3364 104.1406 279.6909 101.4033 279.458 98.2627 C
279.1621 94.3369 275.7417 91.3926 271.8154 91.6865 C
266.9082 92.0537 263.2285 96.3291 263.5952 101.2383 C
264.0557 107.3721 269.3999 111.9727 275.5347 111.5137 C
283.2031 110.9395 288.9526 104.2568 288.3789 96.5898 C
287.6611 87.0039 279.3091 79.8164 269.7241 80.5332 C
257.7422 81.4316 248.7573 91.8711 249.6558 103.8525 C
250.7773 118.8291 263.8262 130.0596 278.8032 128.9375 C
279.2241 128.9072 279.6431 128.8643 280.0586 128.8184 C
273.4551 133.7246 276.7852 141.3213 285.3755 136.2314 C
283.3818 142.6182 259.4067 149.1416 251.6553 157.042 C
242.3018 166.5781 250.1436 176.248 264.5908 165.5635 C
253.8169 183.2939 223.5825 176.2578 204.9351 182.2207 c
196.9165 184.7861 191.3691 190.8232 191.1763 196.8887 C
186.3184 194.7109 181.0347 193.0449 178.0244 187.8643 C
177.8716 190.8984 174.6875 194.6523 171.4995 198.9873 C
159.5649 199.3252 147.855 203.877 134.3442 204.2373 c
122.5845 204.5518 112.3145 200.5918 110.4634 192.1045 C
110.3013 191.2568 110.2036 190.3965 110.168 189.5273 C
110.1147 186.5566 110.9746 183.126 112.9746 179.2275 C
112.978 179.2217 L
113.3047 178.71 113.6553 178.2158 114.0327 177.7393 C
115.6919 175.6777 117.8174 173.8945 120.1035 172.8926 C
124.7446 170.751 130.7236 171.4941 134.8618 174.8955 C
135.8877 175.7324 136.8408 176.7354 137.5972 177.8154 C
138.3398 178.8643 138.9014 180.041 139.2427 181.291 C
139.9468 183.7861 139.7456 186.5801 138.665 189.0215 C
137.6274 191.4297 135.5674 193.6396 133.2397 194.709 C
130.8706 195.8125 127.9634 195.8232 125.4951 194.6865 C
124.0039 193.998 122.646 192.8965 121.6997 191.5469 C
121.0947 190.6826 120.6597 189.7188 120.4668 188.6973 C
119.917 186.0586 120.9189 183.0928 123.0986 181.3086 C
125.1582 179.4785 128.4712 179.3135 130.7827 181.0166 C
131.9204 181.8691 132.8203 183.0635 133.0562 184.4521 C
133.3223 185.833 132.9766 187.3516 132.0811 188.4961 C
131.1997 189.6641 129.8203 190.4268 128.3345 190.3252 C
127.1016 190.2617 125.877 189.5947 125.144 188.5684 C
125.0098 188.3799 124.8916 188.1807 124.7935 187.9697 C
124.1553 186.6113 124.5464 184.8076 125.7881 183.8291 C
126.9624 182.7754 129.043 182.9854 130.0059 184.3535 C
129.0659 182.9941 127.2012 182.6504 125.8379 183.5869 C
124.1309 184.7617 123.6992 187.0947 124.8735 188.8018 C
126.3389 190.9346 129.2573 191.4746 131.3906 190.0088 C
134.0576 188.1748 134.7314 184.5264 132.8979 181.8604 C
130.6064 178.5283 126.0474 177.6846 122.7139 179.9756 C
118.5469 182.8408 117.4937 188.541 120.3589 192.707 C
123.939 197.9121 131.0635 199.2324 136.2715 195.6504 C
142.7813 191.1748 144.4277 182.2686 139.9521 175.7588 C
134.356 167.6221 123.2241 165.5645 115.0869 171.1582 C
113.5181 172.2383 112.1289 173.4844 110.9282 174.8535 C
110.9282 174.8525 L
110.9282 174.8545 L
104.8013 181.8486 103.5776 192.1123 108.2192 200.4355 C
110.1826 204.0693 113.2427 207.3203 116.9956 210.501 C
89.543 201.5469 64.7373 184.2158 47.7095 160.6299 C
34.0854 141.8828 24.5264 119.7012 22.9722 96.6074 C
22.8882 94.9502 22.8418 93.2881 22.8418 91.623 C
22.4404 65.9375 31.355 40.1943 47.4395 20.0664 C
53.4146 12.582 60.4048 5.79883 68.1348 0 C
67.2813 0 L
59.7622 5.68457 52.958 12.3105 47.1289 19.6113 C
31.2017 39.5439 22.3735 65.0352 22.7725 90.4688 C
22.7725 92.3867 22.8335 94.2969 22.9453 96.2041 C
22.8159 94.1572 22.7471 92.1045 22.7471 90.0449 C
22.3501 64.7041 31.146 39.3057 47.0146 19.4453 C
52.79 12.2119 59.5254 5.64355 66.9673 0 C
57.377 0 L
57.377 0 L
f
1 D
0 g
183.0273 0 m
189.9624 0 L
207.6226 17.0371 219.1958 41.2441 217.3667 66.1553 C
215.6821 93.0566 198.3862 118.1689 173.8838 129.1191 C
161.7905 134.877 147.7256 136.3564 134.6855 133.4502 C
121.6348 130.457 109.7476 122.9902 101.3086 112.6572 C
93.1006 102.2676 87.8408 88.9951 89.1035 75.5635 C
90.1265 62.2539 97.0107 49.5215 107.6606 41.5254 C
118.0698 33.3555 132.5112 29.8564 145.2256 34.3262 C
157.8335 38.4814 167.9697 49.623 170.29 62.7295 C
172.5249 75.4648 165.5796 89.0342 154.043 94.6357 C
151.9966 95.8232 149.7466 96.6992 147.3584 97.1982 C
151.0161 95.1348 154.2402 92.3945 156.8657 89.1504 C
157.3442 89.9297 157.7324 90.7832 158.0039 91.7217 C
166.751 85.1914 171.5225 73.6387 169.5137 62.8604 C
167.1328 50.1074 157.1147 39.332 144.8579 35.4395 C
132.4824 31.2441 118.6445 34.751 108.6206 42.7646 C
98.396 50.5957 91.9092 62.9424 91.0571 75.7148 C
89.9688 88.5771 95.1362 101.2344 103.1328 111.1729 C
111.3325 121.0186 122.7949 128.0439 135.2832 130.7773 C
147.7778 133.4131 161.0615 131.8936 172.5625 126.2822 C
195.9419 115.5527 212.124 91.4102 213.4644 65.8984 C
215.1094 40.6816 202.0415 16.0898 183.0273 0 C
183.0273 0 L
f
0 g
190.499 0 m
191.9561 0 L
210.0645 17.2852 221.9688 41.9854 220.1021 67.4092 C
218.394 94.6738 200.8638 120.1279 176.0288 131.2275 C
163.772 137.0625 149.5166 138.5635 136.3013 135.6162 C
123.0713 132.584 111.0225 125.0156 102.4697 114.54 C
100.7441 112.3555 99.1484 110.0439 97.7119 107.6328 C
98.9204 109.5498 100.2275 111.3984 101.6206 113.1621 C
110.0898 123.5342 122.0205 131.0273 135.1206 134.0322 C
148.207 136.9482 162.3218 135.4629 174.4604 129.6855 C
199.0503 118.6953 216.4097 93.4902 218.1006 66.4922 C
219.9399 41.4434 208.2788 17.1035 190.499 0 C
190.499 0 L
f
0 g
420.1504 0 m
431.3486 0 L
436.9365 9.38672 445.6465 17.0771 456.1943 21.0557 C
472.5391 27.9824 493.1104 22.1738 503.7246 7.00098 C
505.2451 4.78906 506.5811 2.44043 507.6738 0 C
514.1104 0 L
506.0039 23.5254 480.8145 36.8721 456.5879 29.9844 C
440.1514 25.3105 427.3379 14.1133 420.1504 0 C
420.1504 0 L
f
0 g
464.2949 0 m
467.1152 0 L
467.2188 0.039063 467.3223 0.076172 467.4268 0.113281 C
471.7598 1.97949 476.7246 1.78125 481.1064 0 C
482.5244 0 L
478.2803 2.2373 473.2012 2.9082 468.2227 1.49316 C
466.8486 1.10254 465.5381 0.600586 464.2949 0 C
464.2949 0 L
f
0 g
595.2754 522.1289 m
595.2754 525.2114 L
584.8574 530.9121 573.416 534.7754 561.6426 536.4634 C
539.2666 539.6816 515.2568 535.2935 496.2568 522.9468 C
486.1738 516.374 477.7617 507.3799 471.6475 497.0142 C
477.625 506.2271 485.4482 514.2271 494.6494 520.2285 C
513.8242 532.688 538.0547 537.1157 560.6357 533.8696 C
572.7813 532.1289 584.5752 528.0938 595.2754 522.1289 C
595.2754 522.1289 L
f
0 g
595.2754 530.4189 m
595.2754 534.6406 L
590.9355 537.5933 586.4092 540.2725 581.7236 542.6475 C
556.4219 555.4858 526.1113 559.9453 498.5527 552.9248 C
483.9189 549.1733 470.2959 541.8711 458.8516 532.0132 C
469.6699 540.5557 482.1914 546.915 495.5488 550.3398 C
523.3613 557.4268 553.9482 552.9258 579.4824 539.9697 C
584.9775 537.1841 590.2578 533.9854 595.2754 530.4189 C
595.2754 530.4189 L
f
0 g
477.3906 75.8193 m
477.2588 76.5732 477.1006 77.3271 476.9268 78.0762 C
469.7236 79.1846 462.4277 79.3955 455.2383 78.625 C
449.3369 78.1045 443.3467 76.8906 437.416 75.1074 C
439.4795 75.6064 441.5625 76.0273 443.667 76.3652 C
454.7988 78.3223 466.2969 78.0879 477.3906 75.8193 C
477.3906 75.8193 L
f
0 g
469.9121 109.4111 m
469.7295 109.6143 469.5479 109.8223 469.3721 110.0352 C
468.1396 109.7764 466.8906 109.5293 465.625 109.2852 C
467.0537 109.3496 468.4844 109.3906 469.9121 109.4111 C
469.9121 109.4111 L
f
0 g
440.2227 102.3701 m
439.7383 102.29 439.2539 102.208 438.7715 102.124 C
423.6279 99.7002 409.2607 94.0938 396.0947 86.2939 C
395.9365 86.1309 395.7725 85.9648 395.6123 85.8037 C
405.6484 91.5791 416.542 96.2344 428.1836 99.5449 C
432.7705 100.8477 437.3701 101.8535 441.9629 102.5742 C
441.3828 102.5098 440.8037 102.4404 440.2227 102.3701 C
440.2227 102.3701 L
f
0 g
461.4629 107.082 m
461.7852 107.0811 462.1104 107.0771 462.4346 107.0742 C
463.874 107.1504 465.3125 107.2109 466.7539 107.2529 C
464.9893 107.2314 463.2256 107.1719 461.4629 107.082 C
461.4629 107.082 L
f
0 g
236.1167 211.1611 m
264.186 196.5605 288.3594 174.4785 305.7148 147.9355 C
294.7549 165.1904 280.9912 180.6621 265.1709 193.5762 C
256.3809 200.5156 246.8711 206.5332 236.7944 211.2686 C
236.1167 211.1611 L
236.1167 211.1611 L
f
0 g
339.8848 60.75 m
334.4512 179.3115 237.7939 216.6191 246.1543 316.4639 C
252.8716 363.8149 297.5098 396.2397 344.7881 389.0449 C
358.1758 387.0078 370.0811 381.2598 379.6211 373.0142 C
369.7305 382.6284 356.918 389.355 342.3369 391.603 C
295.3232 398.8501 250.9385 366.1885 244.2583 318.4922 C
236.7671 227.8594 314.4893 189.335 333.9297 95.3125 C
336.9561 84.0107 338.9473 72.4258 339.8848 60.75 C
339.8848 60.75 L
f
0 g
443.4092 366.4668 m
436.4727 369.1494 429.9287 372.5811 423.8682 376.6543 C
429.8994 372.4688 436.3965 368.9639 443.2061 366.2524 C
443.2725 366.3247 443.3408 366.396 443.4092 366.4668 C
443.4092 366.4668 L
f
0 g
437.5762 344.9932 m
435.9473 346.5029 434.3477 348.042 432.7822 349.6123 C
434.6895 347.3408 436.4023 344.4829 437.8848 340.9077 C
437.7363 342.3398 437.6387 343.6943 437.5762 344.9932 C
437.5762 344.9932 L
f
0 g
430.3027 352.1528 m
419.624 363.3213 410.4873 375.9194 402.8379 389.4268 C
404.9121 385.5469 407.1084 381.7275 409.4297 377.9761 C
414.1914 370.2256 419.3965 362.7046 425.0234 355.5156 C
426.8848 354.6973 428.6514 353.5972 430.3027 352.1528 C
430.3027 352.1528 L
f
0 g
417.7588 357.3916 m
416.5879 359.0649 415.4414 360.7588 414.3223 362.4692 C
415.0967 360.7969 415.8525 359.1396 416.585 357.4985 C
416.9785 357.4707 417.3701 357.4351 417.7588 357.3916 C
417.7588 357.3916 L
f
0 g
399.1738 389.6699 m
398.957 390.5146 L
398.9512 390.5283 L
399.1738 389.6699 L
399.1738 389.6699 L
f
0 g
102.8047 203.002 m
84.3457 194.1338 45.7969 167.4307 53.437 127.2705 C
50.4775 144.9082 57.8091 161.543 75.3643 174.6191 c
92.0161 187.0195 95.96 198.1162 102.8047 203.002 C
102.8047 203.002 L
f
0 g
313.8535 13.75 m
312.1904 30.4502 303.9219 34.4102 296.3604 35.834 C
295.1343 24.375 309.7822 25.0908 313.8535 13.75 C
313.8535 13.75 L
f
0 g
106.7739 205.5332 m
79.3647 193.2861 35.2563 163.4385 53.5254 118.4336 C
53.52 129.0342 77.4204 128.5332 86.8945 143.1299 C
103.5386 168.7666 90.2729 192.127 106.7739 205.5332 C
106.7739 205.5332 L
f
396.5811 400.8687 m
402.3164 387.5068 409.3145 374.7002 417.6221 362.8652 C
415.5654 365.897 413.5771 368.9712 411.6641 372.0859 C
406.1387 381.0151 401.3213 390.3291 397.1963 399.9277 C
396.9883 400.2397 396.7842 400.5527 396.5811 400.8687 C
Bb
0 0 0 0 Bh
1 (GradientFill 3) 149.0068 497.7319 -40 668.5002 1 0 0 1 0 0 Bg
512.1008 -429.7036 -429.7036 -512.1008 149.0068 497.7319 Bm
f
0 BB
*U
0 D
277.6294 301.8613 m
272.5229 293.2656 268.6235 283.4922 268.1196 272.8398 C
263.9531 184.7646 356.6064 160.2344 355.8037 46.6035 C
356.1064 46.8213 356.4043 47.0273 356.7012 47.2275 C
357.0889 151.3662 279.998 180.333 270.8516 253.1172 C
270.0034 259.3203 269.5381 266.1357 270.0654 272.3955 C
271.562 272.4766 273.5044 273.0117 274.2886 274.373 C
270.9316 282.4063 273.9351 293.4639 277.6294 301.8613 C
Bb
1 (GradientFill 4) 329.6211 249.9658 -101 155.2769 1 0 0 1 0 0 Bg
-29.6282 -152.424 -133.0506 25.8624 395.6514 237.1309 Xm
-1577.6362 -8116.2334 -133.0506 25.8624 1973.2881 8353.3643 Bc
-29.6282 -152.424 -133.0506 25.8624 395.6514 237.1309 Bm
-1577.6362 -8116.2334 -133.0506 25.8624 366.0234 84.707 Bc
f
0 BB
*u
0 g
222.835 203.7461 m
234.7646 200.875 246.3096 196.1318 256.9951 190.0957 C
259.2417 188.8359 261.4429 187.5068 263.5996 186.1113 C
252.042 193.1963 239.3584 198.3008 225.9541 200.4814 C
225.1108 200.6318 224.2656 200.7695 223.4189 200.8984 C
223.5752 200.042 223.7188 199.1836 223.8389 198.3213 C
225.041 198.1504 226.2393 197.9609 227.4346 197.7471 C
247.165 194.5381 265.3477 185.0498 280.7119 172.2402 C
281.7734 172.8281 L
281.5874 173.0156 L
265.291 189.4414 244.77 202.2461 222.0581 206.7256 C
222.3413 205.7373 222.603 204.7451 222.835 203.7461 C
222.835 203.7461 L
f
270.0757 181.8545 m
265.0708 185.7842 259.7671 189.3438 254.1885 192.4717 C
252.3306 193.5215 250.4463 194.5293 248.5391 195.4961 C
256.8896 191.4297 264.7646 186.3145 272.0356 180.4512 C
271.3867 180.9248 270.7329 181.3926 270.0757 181.8545 C
Bb
1 (GradientFill 4) 227.6245 205.0176 -36 57.5672 1 0 0 1 0 0 Bg
46.5728 -33.8372 -12.4499 -17.1358 234.4067 214.3525 Xm
6577.8188 -4779.0654 -12.4499 -17.1358 -6343.4121 4993.418 Bc
46.5728 -33.8372 -12.4499 -17.1358 234.4067 214.3525 Bm
6577.8188 -4779.0654 -12.4499 -17.1358 280.9795 180.5156 Bc
f
0 BB
*U
385.4238 309.2822 m
377.2344 325.8579 361.376 338.3013 341.7432 341.2954 C
301.7891 347.3882 264.0659 319.9307 258.3887 279.835 C
250.896 190.1484 343.7734 161.1855 338.0547 45.3408 C
338.373 45.5488 338.6855 45.7471 338.9961 45.9385 C
344.291 161.0156 252.9717 189.9727 260.354 279.2979 C
265.9561 319.3018 303.1836 346.6963 342.6143 340.6172 C
361.7539 337.667 377.2578 325.5176 385.4238 309.2822 C
Bb
1 (GradientFill 4) 322.1465 283.7979 -101 176.9777 1 0 0 1 0 0 Bg
-33.7689 -173.7261 -127.4483 24.7734 384.8975 271.6006 Xm
-1580.0197 -8128.4946 -127.4483 24.7734 1964.917 8400.0957 Bc
-33.7689 -173.7261 -127.4483 24.7734 384.8975 271.6006 Bm
-1580.0197 -8128.4946 -127.4483 24.7734 351.1289 97.874 Bc
f
0 BB
288.3638 199.1816 m
274.6528 220.5576 264.4063 245.123 265.2354 270.1504 C
265.6929 295.0039 281.1538 318.6318 303.8018 329.4077 C
325.9756 340.2783 355.4102 339.2207 373.9512 321.7593 C
383.1914 313.3296 389.498 301.6904 391.4521 289.248 C
393.377 276.8486 391.3721 263.5176 383.9648 253.2168 C
376.8018 242.8447 365.0322 235.7412 352.4023 234.2646 C
350.8926 234.0576 349.3701 233.9365 347.8447 233.9014 C
336.6514 233.6416 325.3223 237.9941 318.0781 246.7881 C
309.7607 256.416 306.8379 270.8545 311.7441 282.8301 C
316.3838 294.5713 329.377 302.1855 342.0254 300.77 C
342.0225 300.77 342.0186 300.7705 342.0146 300.771 C
326.2031 302.5728 311.6719 291.5527 309.2568 275.6875 C
306.167 255.3838 320.1211 236.4199 340.4248 233.3301 C
342.9463 232.9463 345.4521 232.7734 347.9229 232.7969 C
370.3184 233.0137 389.8916 249.4326 393.3701 272.29 C
398.1982 304.0137 376.3945 333.644 344.6709 338.4717 C
305.0166 344.5063 267.5771 317.3105 261.9434 277.5977 C
254.5063 188.7666 346.1924 158.9688 340.5176 44.2295 C
357.7549 55.4658 363.5254 43.3008 355.4629 67.3232 C
343.7803 128.0898 322.9248 145.2998 288.3638 199.1816 c
Bb
1 (GradientFill 4) 438.3125 74.2939 126 320.0179 1 0 0 1 0 0 Bg
-188.1018 258.8999 164.5233 119.5331 358.3906 16.2275 Xm
-4888.5669 6728.5356 164.5233 119.5331 5246.958 -6712.3086 Bc
-188.1018 258.8999 164.5233 119.5331 358.3906 16.2275 Bm
-4888.5669 6728.5356 164.5233 119.5331 170.2891 275.127 Bc
f
0 BB
392.2295 342.5977 m
435.8066 253.7998 513.0859 319.8462 544.1914 290.6621 C
516.6016 334.8975 439.9473 286.7324 392.2295 342.5977 C
Bb
1 (GradientFill 4) 514.126 284.5508 152 111.2115 1 0 0 1 0 0 Bg
-98.1939 52.2106 53.3019 100.2462 483.1787 226.3467 Xm
-7447.9307 3960.1353 53.3019 100.2462 7931.1094 -3733.7881 Bc
-98.1939 52.2106 53.3019 100.2462 483.1787 226.3467 Bm
-7447.9307 3960.1353 53.3019 100.2462 384.9844 278.5576 Bc
f
0 BB
*u
0 g
432.3271 288.2578 m
419.3291 300.1685 408.1182 314.1646 398.8867 329.1875 C
396.9404 332.3345 395.0977 335.5371 393.3584 338.7915 C
402.9561 321.8433 415.3457 306.6001 430.6777 294.5313 C
431.6328 293.7549 432.5996 292.9932 433.5742 292.2422 C
433.9736 293.4277 434.3906 294.6074 434.8398 295.7754 C
433.4482 296.8252 432.0732 297.8984 430.7197 298.998 C
408.1523 316.7627 391.8994 341.3423 381.5 368.1357 C
379.7578 368.1357 L
379.8613 367.771 L
388.9141 335.7832 405.7979 305.4072 431.2295 283.9707 C
431.5615 285.4102 431.9229 286.8398 432.3271 288.2578 C
432.3271 288.2578 L
f
388.1797 348.6489 m
391.7363 340.2271 395.9268 332.0625 400.7617 324.2476 C
402.3662 321.6362 404.0332 319.0576 405.7578 316.5142 C
398.0918 327.4375 391.752 339.3472 386.6924 351.7773 C
387.1787 350.73 387.6748 349.687 388.1797 348.6489 C
Bb
1 (GradientFill 4) 375.8018 348.2588 -36 77.0689 1 0 0 1 0 0 Bg
62.3501 -45.3 -25.1929 -34.675 388.3984 365.5962 Xm
6700.1045 -4867.9106 -25.1929 -34.675 -6311.7061 5233.5068 Bc
62.3501 -45.3 -25.1929 -34.675 388.3984 365.5962 Bm
6700.1045 -4867.9106 -25.1929 -34.675 450.748 320.2964 Bc
f
0 BB
*U
*u
0 g
440.3389 458.3828 m
449.4111 465.5483 459.9141 470.8813 471.1162 473.7539 C
494.4434 479.6973 520.0986 475.9233 541.5137 465.0557 C
563.0508 454.1382 580.6572 435.6426 590.292 413.5806 C
592.3115 409.1455 593.9629 404.5781 595.2754 399.9185 C
595.2754 407.2661 L
594.251 410.3271 593.0713 413.3413 591.7266 416.2959 C
582.1807 438.1572 564.7344 456.4829 543.3936 467.3013 C
522.1719 478.0703 496.752 481.8101 473.6367 475.9219 C
461.3633 472.7754 449.9375 466.6509 440.3389 458.3828 C
440.3389 458.3828 L
f
1 D
595.2754 337.2607 m
594.0088 332.1846 592.418 327.2031 590.5352 322.3379 C
592.3574 326.6523 593.9443 331.0688 595.2754 335.5688 C
595.2754 337.2607 L
Bb
1 (GradientFill 4) 447.584 482.3574 -36 209.835 1 0 0 1 0 0 Bg
169.7601 -123.3379 -57.2269 -78.7661 476.9297 522.7485 Xm
6744.6563 -4900.2793 -57.2269 -78.7661 -6267.7266 5423.0283 Bc
169.7601 -123.3379 -57.2269 -78.7661 476.9297 522.7485 Bm
6744.6563 -4900.2793 -57.2269 -78.7661 646.6895 399.4106 Bc
f
0 BB
*U
0 D
396.334 277.0273 m
395.749 262.2031 388.2051 247.9063 376.3994 239.043 C
364.6787 230.125 348.9609 226.4893 334.6133 230.2959 C
322.252 233.5986 312.0273 243.251 307.6084 255.1143 C
312.1826 243.8301 322.0771 234.7217 333.9678 231.5449 C
348.1855 227.7725 363.7598 231.375 375.374 240.2119 C
386.8672 248.8408 394.2832 262.665 395.0898 277.0781 C
396.334 277.0273 L
Bb
1 (GradientFill 4) 314.6133 227.1699 36 90.7443 1 0 0 1 0 0 Bg
73.4137 53.3382 33.9515 -46.7303 297.7295 250.4082 Xm
6637.7847 4822.6328 33.9515 -46.7303 -6340.0557 -4572.2246 Bc
73.4137 53.3382 33.9515 -46.7303 297.7295 250.4082 Bm
6637.7847 4822.6328 33.9515 -46.7303 371.1436 303.7466 Bc
f
0 BB
451.0703 429.0278 m
456.084 436.7549 462.6445 443.4658 470.3633 448.498 C
486.4453 458.9492 506.7686 462.6631 525.707 459.9399 C
544.751 457.21 562.7656 447.7573 575.6787 433.5742 C
585.1406 423.4976 591.5313 410.9697 595.2754 397.6558 C
595.2754 401.1323 L
591.5391 414.0513 585.2686 426.1899 576.0664 435.9902 C
563.2725 450.0444 545.4209 459.4097 526.5508 462.1152 C
507.7842 464.8135 487.6465 461.1338 471.7109 450.7788 C
463.2539 445.2651 456.1992 437.7222 451.0703 429.0278 C
Bb
1 (GradientFill 4) 463.5664 469.8643 -36 142.9471 1 0 0 1 0 0 Bg
115.6466 -84.0222 -51.11 -70.3469 489.7646 505.9233 Xm
6753.7822 -4906.9102 -51.11 -70.3469 -6264.0176 5412.8335 Bc
115.6466 -84.0222 -51.11 -70.3469 489.7646 505.9233 Bm
6753.7822 -4906.9102 -51.11 -70.3469 605.4111 421.9014 Bc
f
0 BB
384.7734 354.0752 m
395.9424 333.0088 416.8232 317.5518 440.0957 312.9316 C
463.2832 308.1738 488.5811 313.8496 506.7148 329.354 C
522.3203 342.7437 530.4121 363.8438 528.5537 384.106 C
529.7842 364.5742 521.792 344.4917 506.7793 331.6123 C
488.8105 316.2485 463.7432 310.6245 440.7676 315.3389 C
418.1113 319.8369 397.7432 334.6992 386.54 355.0146 C
384.7734 354.0752 L
Bb
1 (GradientFill 4) 405.3301 401.4136 -36 146.4161 1 0 0 1 0 0 Bg
118.4531 -86.0612 -72.6015 -99.9274 440.8477 450.2998 Xm
6708.0747 -4873.7012 -72.6015 -99.9274 -6267.2271 5324.001 Bc
118.4531 -86.0612 -72.6015 -99.9274 440.8477 450.2998 Bm
6708.0747 -4873.7012 -72.6015 -99.9274 559.3008 364.2388 Bc
f
0 BB
389.2656 342.8701 m
441.7158 249.5869 424.2344 202.5752 389.7803 202.0186 C
398.3105 210.8945 385.1201 229.0273 391.499 249.1436 c
399.4199 274.124 399.6875 304.4028 389.2656 342.8701 C
Bb
1 (GradientFill 4) 372.792 261.999 27 68.3593 1 0 0 1 0 0 Bg
60.9086 31.0345 65.7738 -129.0883 342.5664 321.3208 Xm
7379.6597 3760.1245 65.7738 -129.0883 -7037.0933 -3438.8037 Bc
60.9086 31.0345 65.7738 -129.0883 342.5664 321.3208 Bm
7379.6597 3760.1245 65.7738 -129.0883 403.4746 352.3555 Bc
f
0 BB
*u
0 g
329.5537 0 m
343.1748 40.9658 339.0088 88.1406 318.2129 125.6992 C
296.2998 165.8809 256.3433 196.1572 210.8135 203.5879 C
165.2407 210.9434 116.9546 190.3721 90.4839 152.9307 C
77.377 134.541 68.5361 112.3252 68.6616 89.3457 C
68.7876 111.7549 77.4766 133.3867 90.2695 151.3379 C
116.4814 188.4121 164.2954 208.7813 209.4219 201.498 C
254.5059 194.1406 294.0713 164.1602 315.7695 124.373 C
336.3584 87.1885 339.3477 40.542 325.7373 0 C
314.6807 0 L
315.5 2.14941 316.2627 4.31836 316.9717 6.50391 C
319.1924 14.1133 316.2031 24.6553 309.3184 31.6475 C
314.8242 29.1191 318.2061 24.1826 319.4619 18.7822 C
320.7451 26.6641 317.4141 36.2041 312.4795 42.2168 C
306.9658 48.9336 306.373 58.5215 316.8975 58.6768 C
291.2236 67.9268 328.6113 96.7236 291.209 119.6553 C
284.5898 123.7129 287.2998 130.8994 294.8398 126.4307 C
293.1685 131.7881 273.0591 137.2588 266.5581 143.8857 C
258.7129 151.8838 265.29 159.9941 277.4067 151.0322 C
268.3711 165.9043 243.0132 160.002 227.373 165.0039 c
216.6719 168.4268 211.2114 179.2246 220.752 185.7539 C
202.0845 172.4521 187.2744 182.959 168.166 183.4697 c
158.3027 183.7334 149.6899 180.4121 148.1367 173.293 C
148.002 172.583 147.9189 171.8604 147.8892 171.1328 C
147.8442 168.6406 148.5654 165.7637 150.2437 162.4932 C
150.2461 162.4883 L
150.5195 162.0605 150.814 161.6455 151.1304 161.2451 C
152.5225 159.5166 154.3057 158.0205 156.2217 157.1807 C
160.1143 155.3848 165.1294 156.0068 168.6006 158.8594 C
169.4609 159.5625 170.2598 160.4033 170.895 161.3086 C
171.5181 162.1885 171.9888 163.1748 172.2749 164.2246 C
172.8662 166.3174 172.6973 168.6602 171.7905 170.708 C
170.9199 172.7275 169.1924 174.5811 167.2407 175.4785 C
165.2534 176.4033 162.814 176.4111 160.7446 175.46 C
159.4941 174.8818 158.3545 173.957 157.5615 172.8252 C
157.0542 172.1006 156.6885 171.292 156.5269 170.4355 C
156.0664 168.2217 156.9063 165.7354 158.7344 164.2383 C
160.4614 162.7051 163.2397 162.5645 165.1797 163.9941 C
166.1343 164.709 166.8882 165.7119 167.0869 166.875 C
167.3091 168.0322 167.019 169.3066 166.2686 170.2666 C
165.5288 171.2461 164.3716 171.8867 163.126 171.7998 C
162.0923 171.748 161.0649 171.1885 160.4492 170.3271 C
160.3369 170.1699 160.2378 170.002 160.1553 169.8252 C
159.6211 168.6865 159.9482 167.1738 160.9907 166.3535 C
161.9751 165.4688 163.7202 165.6445 164.5273 166.7939 C
163.7393 165.6523 162.1753 165.3643 161.0317 166.1504 C
159.6006 167.1348 159.2383 169.0928 160.2222 170.5234 C
161.4526 172.3125 163.9004 172.7656 165.6895 171.5352 C
167.9253 169.9971 168.4912 166.9375 166.9536 164.7021 C
165.0313 161.9063 161.207 161.1992 158.4116 163.1211 C
154.9175 165.5244 154.0332 170.3047 156.436 173.7988 C
159.4399 178.166 165.4155 179.2715 169.7827 176.2676 C
175.2422 172.5137 176.624 165.0439 172.8696 159.585 C
168.1763 152.7607 158.8394 151.0332 152.0151 155.7266 C
150.6982 156.6318 149.5342 157.6758 148.5273 158.8252 C
148.5273 158.8242 L
148.5264 158.8262 L
143.3882 164.6914 142.3623 173.2998 146.2554 180.2822 C
147.9009 183.3291 150.4673 186.0557 153.6162 188.7236 C
130.5908 181.2129 109.7856 166.6768 95.5034 146.8955 C
84.0771 131.1709 76.0596 112.5674 74.7559 93.1982 C
74.6855 91.8076 74.6475 90.4141 74.6475 89.0166 C
74.3101 67.4746 81.7871 45.8828 95.2773 29 C
105.4697 16.2354 119.1777 5.89941 134.4795 0 C
133.5864 0 L
118.5347 5.85742 105.0542 16.0488 95.0166 28.6201 C
81.6592 45.3369 74.2549 66.7178 74.5884 88.0498 C
74.5889 89.6582 74.6396 91.2607 74.7339 92.8604 C
74.625 91.1426 74.5674 89.4209 74.5669 87.6943 C
74.2344 66.4395 81.6118 45.1367 94.9214 28.4805 C
104.9014 15.9805 118.2988 5.8418 133.2588 0 C
121.6523 0 L
109.814 6.16406 99.2876 14.8623 90.8301 25.1895 C
76.5977 42.6406 68.5352 65.1113 68.6621 87.7305 C
68.4624 110.5049 77.2056 132.5322 90.1919 150.752 C
116.3081 187.6924 163.9482 207.9883 208.9111 200.7305 C
253.8311 193.4004 293.2534 163.5293 314.873 123.8857 C
335.5322 86.5742 339.5557 40.5107 325.7813 0 C
329.5537 0 L
329.5537 0 L
f
1 D
0 g
188.6226 0 m
198.291 0 L
202.7119 2.4248 206.8984 5.27344 210.7637 8.51855 C
227.8198 22.8662 239.4692 44.9131 237.7993 67.6572 C
236.3862 90.2197 221.8794 111.2822 201.3286 120.4668 C
191.1855 125.2949 179.3896 126.5361 168.4541 124.0986 C
157.5059 121.5889 147.5366 115.3262 140.459 106.6582 C
133.5747 97.9443 129.1631 86.8125 130.2227 75.5479 C
131.0801 64.3848 136.8545 53.7051 145.7866 46.999 C
154.5161 40.1465 166.6289 37.2129 177.2925 40.96 C
187.8672 44.4463 196.3682 53.792 198.3149 64.7842 C
200.1899 75.4658 194.3643 86.8457 184.688 91.5449 C
182.9717 92.541 181.085 93.2754 179.082 93.6934 C
182.1494 91.9629 184.854 89.665 187.0547 86.9424 C
187.4575 87.5977 187.7822 88.3125 188.0098 89.1006 C
195.3467 83.623 199.3491 73.9326 197.6636 64.8936 C
195.6665 54.1982 187.2646 45.1592 176.9844 41.8945 C
166.604 38.377 154.998 41.3174 146.5913 48.0381 C
138.0171 54.6064 132.5752 64.9619 131.8604 75.6748 C
130.9478 86.4619 135.2822 97.0791 141.9883 105.415 C
148.8662 113.6719 158.48 119.5645 168.9541 121.8564 C
179.4336 124.0674 190.5742 122.793 200.2207 118.0869 C
219.8301 109.0869 233.4028 88.8389 234.5259 67.4414 C
235.9272 45.9678 224.6064 25.0322 208.2607 11.5537 C
202.3574 6.69922 195.6997 2.81543 188.6226 0 C
188.6226 0 L
f
0 g
198.6982 0 m
199.8052 0 L
204.3765 2.48633 208.7021 5.41797 212.6914 8.76758 C
229.979 23.3105 241.7866 45.6553 240.0938 68.708 C
238.6611 91.5762 223.9575 112.9248 203.1284 122.2344 C
192.8481 127.1289 180.8916 128.3867 169.8076 125.916 C
158.7114 123.3711 148.606 117.0244 141.4331 108.2393 C
139.9858 106.4063 138.647 104.4678 137.4419 102.4453 C
138.4551 104.0527 139.5518 105.6035 140.7207 107.083 C
147.8237 115.7822 157.8296 122.0674 168.8174 124.5869 C
179.793 127.0332 191.6318 125.7871 201.812 120.9414 C
222.437 111.7227 236.9971 90.584 238.415 67.9385 C
240.0913 45.1133 228.3989 22.9863 211.2808 8.58496 C
207.3823 5.3125 203.1587 2.44141 198.6982 0 C
198.6982 0 L
f
0 g
141.7139 182.4336 m
126.2319 174.9961 93.9004 152.5996 100.3071 118.915 C
97.8257 133.709 103.9746 147.6611 118.6987 158.627 c
132.6641 169.0283 135.9727 178.3359 141.7139 182.4336 C
141.7139 182.4336 L
f
0 g
318.7266 23.7041 m
317.3301 37.71 310.3945 41.0322 304.0537 42.2256 C
303.0244 32.6143 315.3105 33.2148 318.7266 23.7041 C
318.7266 23.7041 L
f
145.042 184.5557 m
122.0537 174.2852 85.0591 149.25 100.3823 111.5039 C
100.377 120.3955 120.4229 119.9746 128.3701 132.2168 C
142.3291 153.7197 131.2021 173.3125 145.042 184.5557 C
Bb
1 (GradientFill 4) 303.3027 -31.1943 132 332.9294 1 0 0 1 0 0 Bg
-222.7733 247.4147 186.871 168.2594 212.0483 -113.3604 Xm
-5483.6509 6090.2109 186.871 168.2594 5695.6992 -6203.5713 Bc
-222.7733 247.4147 186.871 168.2594 212.0483 -113.3604 Bm
-5483.6509 6090.2109 186.871 168.2594 -10.7251 134.0547 Bc
f
0 BB
*U
0 D
289.3276 120.3145 m
305.0293 119.1387 316.8037 105.457 315.6279 89.7559 C
308.999 90.2529 L
309.0293 90.4961 309.0547 90.7402 309.0762 90.9854 C
309.6182 97.1367 307.4189 103.5469 302.9795 108.1885 C
300.6924 110.5996 297.8545 112.5088 294.7163 113.7402 C
291.5645 114.9463 288.0752 115.5469 284.9141 115.1836 C
278.4238 114.5615 272.311 109.9033 269.9341 103.4971 C
269.3418 101.915 268.936 100.1973 268.7949 98.5215 C
268.6499 96.8887 268.7871 95.2314 269.2144 93.6328 C
270.0405 90.4307 272.0566 87.4814 274.8174 85.4844 C
277.5068 83.498 281.1968 82.3857 284.4482 82.7012 C
287.7676 83.0068 290.98 84.8652 292.9692 87.7012 C
294.1704 89.417 294.9595 91.5059 295.1343 93.5996 C
295.2466 94.9404 295.1074 96.2832 294.6641 97.5322 C
293.5742 100.7939 290.5664 103.417 287.0176 103.9844 C
283.5732 104.6768 279.8159 102.7334 278.3613 99.3691 C
277.6543 97.6992 277.4316 95.8047 278.0615 94.124 C
278.6563 92.4326 280.0127 90.9805 281.7344 90.293 C
283.457 89.5732 285.4678 89.6182 287.0381 90.6855 C
288.3564 91.5449 289.2773 93.0674 289.4268 94.6699 C
289.4541 94.9639 289.4561 95.2598 289.4292 95.5547 C
289.2593 97.4609 287.6704 99.1982 285.6724 99.4775 C
283.7017 99.8857 281.5435 98.3184 281.3623 96.1904 C
281.5239 98.2949 283.3584 99.8711 285.4634 99.7129 C
288.0977 99.5156 290.0732 97.2207 289.8755 94.5859 C
289.6289 91.293 286.7598 88.8242 283.4673 89.0703 C
279.3511 89.3789 276.2642 92.9648 276.5728 97.0811 C
276.958 102.2266 281.4414 106.085 286.5859 105.6992 C
293.0171 105.2178 297.8408 99.6143 297.3589 93.1826 C
296.7568 85.1436 289.752 79.1143 281.7129 79.7168 C
271.6641 80.4697 264.1279 89.2256 264.8804 99.2744 C
265.8213 111.8359 276.7666 121.2559 289.3276 120.3145 C
Bb
1 (GradientFill 4) 292.9839 120.5381 -96 41.3679 1 0 0 1 0 0 Bg
-4.32412 -41.1413 -55.5359 5.83706 320.5703 117.6387 Xm
-856.1252 -8145.4839 -55.5359 5.83706 1176.6953 8263.123 Bc
-4.32412 -41.1413 -55.5359 5.83706 320.5703 117.6387 Bm
-856.1252 -8145.4839 -55.5359 5.83706 316.2461 76.4971 Bc
f
0 BB
381.1592 358.6216 m
385.8672 341.8833 390.8506 325.3574 393.6318 308.4966 C
396.3457 291.8096 397.085 274.1787 390.3867 258.9131 C
383.96 243.6641 368.5635 232.8789 351.8994 231.8164 C
335.5068 230.5781 317.5742 238.5068 310.4297 253.8838 C
306.8027 261.377 305.7803 270.1318 307.6465 278.3066 C
309.5225 286.4463 314.0576 294.1904 321.1816 298.7261 C
328.1729 303.3672 337.2041 304.8491 345.377 302.6396 C
346.3604 302.3945 347.332 302.0938 348.2813 301.7393 C
355.2676 299.1323 361.1924 293.6416 363.4961 286.4131 C
366.2588 278.4082 364.4951 268.7598 358.5029 262.5713 C
352.7334 256.4609 342.8203 254.9648 335.3525 258.9658 C
335.3535 258.9648 335.3555 258.9639 335.3574 258.9629 C
344.6855 253.9424 356.3926 257.1611 361.8066 266.3721 C
368.7344 278.1563 364.7969 293.3281 353.0107 300.2568 C
351.5469 301.1187 350.041 301.8442 348.5078 302.4395 C
334.6104 307.8418 318.4531 302.5293 310.6543 289.2607 C
299.8281 270.8457 305.9814 247.1406 324.3965 236.3154 C
347.417 222.7852 377.2813 230.3398 390.5791 253.4951 C
407.7324 283.3604 393.2354 327.6636 384.0693 362.0522 C
378.7568 370.2871 375.4746 381.6143 375.4746 394.1172 c
375.4746 399.4551 376.0752 404.5767 377.1738 409.3374 C
374.9365 405.7705 374.1611 401.6812 373.9619 398.1753 C
373.7119 393.4932 374.1973 389.0791 374.8887 384.7866 C
374.9141 384.6294 374.9385 384.4722 374.9648 384.3159 C
376.4785 375.4482 378.8311 367.0142 381.1592 358.6216 C
Bb
1 (GradientFill 4) 299.2324 283.9658 27 126.1718 1 0 0 1 0 0 Bg
112.4199 57.2808 74.2441 -145.7123 263.6753 353.751 Xm
7312.8804 3726.0986 74.2441 -145.7123 -7049.2051 -3372.3477 Bc
112.4199 57.2808 74.2441 -145.7123 263.6753 353.751 Bm
7312.8804 3726.0986 74.2441 -145.7123 376.0947 411.0317 Bc
f
0 BB
*u
0 g
425.5293 141.0273 m
461.5684 171.1621 497.8965 200.4082 529.8242 233.7598 C
558.2949 263.6289 584.3467 297.6797 595.2754 336.6104 C
595.2754 313.9585 L
552.5029 210.3438 408.4932 128.9307 363.8271 66.1572 C
407.2676 127.209 546.2422 204.4541 595.2754 303.2969 C
595.2754 296.4336 L
544.1445 198.8193 410.4287 121.29 367.3652 60.7686 C
361.4629 52.4727 357.2646 44.4971 355.2158 36.832 C
354.9336 36.708 352.1357 36.9805 350.7881 37.0156 C
350.6621 36.0078 350.5771 35.0059 350.5361 34.0107 C
346.9482 31.1611 344.3701 27.21 343.3799 22.707 C
342.9043 22.5889 L
342.9736 22.1699 343.0488 21.75 343.1309 21.3301 C
343.002 20.4336 342.9326 19.5166 342.9326 18.5859 C
342.9346 18.4453 L
342.7061 19.7979 342.543 21.1406 342.4375 22.4717 C
340.374 21.958 L
336.6406 38.0459 342.5283 52.8994 349.124 63.8135 C
355.71 74.6387 363.5283 83.7393 371.6201 92.2549 C
371.915 92.5674 372.2119 92.8779 372.5078 93.1875 C
389.418 110.6514 407.5293 125.8691 425.5293 141.0273 C
425.5293 141.0273 L
f
1 D
0 g
595.2754 407.1968 m
595.2754 425.3784 L
575.7998 466.9258 534.6289 496.9727 485.5986 500.3477 C
469.583 501.4507 454.165 498.8799 440.1631 493.3613 C
455.291 500.0391 472.2168 503.2451 489.8604 502.0303 C
535.3115 498.9009 574.0674 473.0381 595.2754 436.3306 C
595.2754 441.0259 L
573.3604 475.7876 535.5029 500.0093 491.4023 503.0454 C
470.2178 504.5034 450.0566 499.6567 432.7529 490.1084 C
432.75 490.1069 L
400.2178 474.2676 376.8232 441.9531 374.1592 403.2671 C
371.3047 361.7793 399.2246 325.2813 438.4541 316.1216 C
442.7822 315.1099 447.248 314.4326 451.8242 314.1177 C
488.6768 311.5806 520.6064 339.3979 523.1445 376.2495 C
525.1279 405.0474 503.9395 430.0889 475.4766 433.1255 C
475.4697 433.1274 475.4629 433.1279 475.457 433.1274 C
498.2168 430.6533 518.0381 412.1934 521.5791 389.7646 C
525.4961 366.8193 514.7051 342.6187 496.3281 328.98 C
480.165 316.3809 458.5713 313.1841 439.0234 318.0278 C
436.3604 318.6875 433.7344 319.4976 431.165 320.4521 C
409.5742 327.9971 391.6992 345.083 383.1914 366.0991 C
374.2275 387.0845 375.9346 411.2715 384.1758 432.2832 C
392.4844 453.3589 408.1201 471.3184 427.6436 482.4912 C
467.0371 505.8745 519.1211 496.1895 553.7852 468.4126 C
573.7012 452.8325 588.0674 431.0483 595.2754 407.1968 C
595.2754 407.1968 L
f
0 D
363.8271 66.1572 m
363.6455 65.9014 363.4648 65.6455 363.2852 65.3887 C
363.4639 65.6445 363.6445 65.9004 363.8271 66.1572 C
Bb
1 (GradientFill 4) 629.3408 514.7339 -133 592.4709 1 0 0 1 0 0 Bg
-404.0641 -433.3058 -217.2973 202.633 742.8066 408.9253 Xm
-5769.8276 -6187.3833 -217.2973 202.633 6512.6348 6596.3086 Bc
-404.0641 -433.3058 -217.2973 202.633 742.8066 408.9253 Bm
-5769.8276 -6187.3833 -217.2973 202.633 338.7422 -24.3809 Bc
f
0 BB
*U
452.3955 335.4902 m
443.334 320.8491 419.3848 330.7129 422.7529 298.0977 C
412.6533 322.4644 389.7686 307.2769 370.792 308.9072 C
385.0029 298.3789 380.3975 267.6318 401.9121 269.0645 C
386.6318 265.2842 388.8877 242.6816 375.1934 229.1699 C
389.501 236.3271 418.1631 218.4697 425.3701 240.3105 C
424.0957 218.2021 447.127 219.3174 462.1787 205.0479 C
459.2051 227.9697 478.1533 238.9717 462.7363 252.082 C
481.3604 242.5439 492.9863 268.2832 508.7666 270.5 C
490.2881 275.9873 481.5752 303.2725 460.8066 289.9893 C
479.1943 308.7222 452.6201 325.623 452.3955 335.4902 C
Bb
1 (GradientFill 4) 367.498 304.9102 -26 160.3251 1 0 0 1 0 0 Bg
144.0992 -70.2819 -58.4801 -119.9021 396.7383 364.8613 Xm
7427.4458 -3622.6074 -58.4801 -119.9021 -7030.7075 3987.4688 Bc
144.0992 -70.2819 -58.4801 -119.9021 396.7383 364.8613 Bm
7427.4458 -3622.6074 -58.4801 -119.9021 540.8379 294.5791 Bc
f
0 BB
451.3457 331.7949 m
442.8486 318.0659 422.0625 330.9766 423.9932 293.5352 C
412.0654 319.7842 392.1406 306.1963 374.3467 307.7251 C
387.6719 297.8525 381.917 268.71 407.1377 270.0615 C
387.5996 264.0332 392.46 244.5771 379.6191 231.9063 C
393.0361 238.6182 416.2793 218.5918 427.2373 246.8887 C
424.6025 219.1797 445.7627 222.498 459.877 209.1172 C
457.0889 230.6123 477.8115 239.2822 456.5156 256.041 C
482.1514 243.5156 489.4092 268.7734 504.207 270.8525 C
486.8789 275.998 476.9287 302.6157 454.5107 284.8701 C
477.4834 306.7544 451.5566 322.542 451.3457 331.7949 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 439.2773 270.4561 179 73.2432 1 0 0 1 0 0 Bg
-73.2321 1.27826 1.27826 73.2321 439.2773 270.4561 Bm
f
0 BB
*u
0 g
434.9922 317.1792 m
422.6465 306.5859 428.4277 288.9092 435.4277 276.3506 C
430.0508 289.708 424.7119 305.2891 434.9922 317.1792 C
434.9922 317.1792 L
f
0 g
449.5117 324.5356 m
448.083 311.6665 440.8848 288.4961 436.499 276.9473 C
429.8857 289.6719 431.4648 312.2715 443.2041 322.2827 C
434.0674 310.665 432.1553 289.9424 436.499 276.9473 C
437.583 288.3496 445.7139 313.1611 449.5117 324.5356 C
449.5117 324.5356 L
f
1 D
0 g
453.5742 319.5801 m
455.1299 305.8804 446.3096 285 436.6094 276.9131 C
448.0957 283.6719 458.0469 305.6885 453.5742 319.5801 C
453.5742 319.5801 L
f
458.6465 310.4624 m
461.125 295.0645 448.585 284.377 437.0566 275.8877 C
449.5537 282.8613 463.5459 295.0811 458.6465 310.4624 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 444.0283 300.2119 -164 29.2511 1 0 0 1 0 0 Bg
-28.118 -8.0627 -8.0627 28.118 444.0283 300.2119 Bm
f
0 BB
*U
*u
0 D
0 g
390.5693 283.3086 m
397.5859 268.6318 414.7383 270.6865 428.6855 274.1787 C
414.3896 272.4609 399.375 270.2891 390.5693 283.3086 C
390.5693 283.3086 L
f
0 g
387.2441 299.2432 m
399.2979 294.5156 418.3779 282.6074 428.3877 275.3682 C
414.3809 272.293 394.3906 278.627 387.7783 292.5654 C
396.6182 280.7217 414.71 274.5547 428.3877 275.3682 C
417.6602 279.3809 397.2383 292.6162 387.2441 299.2432 C
387.2441 299.2432 L
f
0 g
393.085 301.876 m
407.6621 302.5806 424.9121 288.3145 428.4492 275.4658 C
423.165 286.9355 406.7188 299.814 393.085 301.876 C
393.085 301.876 L
f
403.209 304.4019 m
419.335 305.1299 426.0742 289.5107 429.5566 275.6309 C
424.3584 288.9707 418.7207 302.7886 403.209 304.4019 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 409.2461 287.3867 120 27.8269 1 0 0 1 0 0 Bg
-13.9135 24.0988 24.0988 13.9135 409.2461 287.3867 Bm
f
0 BB
*U
*u
0 g
479.332 282.7979 m
465.9541 292.0537 450.6699 282.6025 440.2969 272.6455 C
451.8535 281.2354 465.2236 289.7266 479.332 282.7979 C
479.332 282.7979 L
f
0 g
490.1309 270.6182 m
477.3203 268.7363 453.4297 270.4482 441.1455 271.7617 C
451.7773 281.3857 473.6904 284.9648 486.3516 276.1494 C
472.7969 282.04 452.6143 279.2588 441.1455 271.7617 C
452.4502 273.6055 478.165 271.4072 490.1309 270.6182 C
490.1309 270.6182 L
f
1 D
0 g
486.3672 265.4326 m
473.5107 260.4521 451.4229 264.3145 441.1406 271.6455 C
450.5918 262.249 474.0645 257.583 486.3672 265.4326 C
486.3672 265.4326 L
f
478.835 258.2129 m
464.5693 251.9111 451.3984 261.9551 440.2617 270.9531 C
450.1768 260.6338 465.1982 249.5732 478.835 258.2129 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 465.1963 270.8418 -88 29.4834 1 0 0 1 0 0 Bg
1.02896 -29.4655 -29.4655 -1.02896 465.1963 270.8418 Bm
f
0 BB
*U
*u
0 D
0 g
461.4082 233.7686 m
465.3301 249.5557 451.9443 260.0811 438.9609 266.2588 C
451.085 258.4902 462.8955 249.416 461.4082 233.7686 C
461.4082 233.7686 L
f
0 g
453.8389 219.3574 m
447.5449 230.6729 441.5527 253.1982 438.4346 265.1514 C
451.1982 258.6143 461.4385 239.8115 457.6738 224.8496 C
458.3867 239.6123 449.5049 257.0781 438.4346 265.1514 C
444.1592 255.2314 450.3418 230.8291 453.8389 219.3574 C
453.8389 219.3574 L
f
0 g
447.6563 221.042 m
435.9609 229.7715 432.8809 252.9502 438.3242 265.1152 C
435.1055 252.9033 438.4492 231.3047 447.6563 221.042 C
447.6563 221.042 L
f
1 D
438.2383 225.5322 m
427.2949 236.6445 432.8906 252.0928 437.3652 265.6924 C
431.2227 252.7666 425.332 235.2285 438.2383 225.5322 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 444.1104 242.8086 -19 29.5572 1 0 0 1 0 0 Bg
27.9469 -9.62288 -9.62288 -27.9469 444.1104 242.8086 Bm
f
0 BB
*U
*u
0 D
0 g
408.7451 233.4971 m
424.9209 235.2188 430.4023 252.4258 431.7607 266.7393 C
428.6133 252.6885 423.9551 237.458 408.7451 233.4971 C
408.7451 233.4971 L
f
0 g
392.6133 235.6748 m
401.0898 245.4629 420.377 259.832 430.54 266.8555 C
428.7686 252.624 414.4326 235.5381 399.0869 233.9521 C
413.2012 238.3369 426.7461 253.6895 430.54 266.8555 C
423.1797 258.0791 402.1934 242.8877 392.6133 235.6748 C
392.6133 235.6748 L
f
0 g
392.0791 242.0596 m
396.2754 256.0371 417.1748 267.8945 430.4678 266.9463 C
417.8926 265.7881 398.5684 254.2246 392.0791 242.0596 C
392.0791 242.0596 L
f
393.0732 252.4463 m
397.7627 267.8926 416.4346 269.3896 430.6816 268.0439 C
416.3721 267.5918 399.7656 266.5322 393.0732 252.4463 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 411.127 251.6611 50 27.4898 1 0 0 1 0 0 Bg
17.6701 21.0584 21.0584 -17.6701 411.127 251.6611 Bm
f
0 BB
*U
0.78 0.81 0.81 0.64 k
444.2236 276.0029 m
443.4434 276.2246 442.6533 276.2559 441.9043 276.124 C
441.9229 276.1855 L
442.708 278.9512 441.1016 281.8311 438.3369 282.6152 c
435.5713 283.4004 432.6914 281.7949 431.9063 279.0293 c
431.8965 278.9932 431.8867 278.957 431.8779 278.9209 C
431.2295 279.7012 430.3467 280.3008 429.2979 280.5986 c
426.5322 281.3838 423.6533 279.7783 422.8682 277.0127 c
422.083 274.248 423.6885 271.3682 426.4541 270.583 c
426.6123 270.5381 426.7705 270.502 426.9297 270.4727 C
425.9102 269.8105 425.1172 268.79 424.7588 267.5303 c
423.9736 264.7646 425.5801 261.8857 428.3457 261.0996 c
430.4082 260.5137 432.5352 261.2598 433.8086 262.8242 C
434.4268 261.5068 435.5898 260.4551 437.0986 260.0264 c
439.8643 259.2412 442.7441 260.8467 443.5293 263.6123 c
443.7441 264.3682 443.7793 265.1328 443.6611 265.8604 C
445.582 266.1836 447.2422 267.5752 447.8096 269.5732 c
448.5947 272.3379 446.9893 275.2178 444.2236 276.0029 c
f
436.2822 276.1836 m
433.5605 276.9561 430.7275 275.376 429.9551 272.6553 c
429.1826 269.9336 430.7627 267.1006 433.4834 266.3281 c
436.2051 265.5557 439.0381 267.1357 439.8105 269.8564 c
440.583 272.5781 439.0029 275.4111 436.2822 276.1836 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 434.8828 271.2559 179 6.3746 1 0 0 1 0 0 Bg
-6.37363 0.111251 0.111251 6.37363 434.8828 271.2559 Bm
f
0 BB
442.7314 275.2793 m
440.4043 275.9404 437.9814 274.5889 437.3213 272.2617 c
436.6602 269.9355 438.0117 267.5127 440.3379 266.8516 c
442.665 266.1914 445.0879 267.542 445.748 269.8691 c
446.4092 272.1963 445.0576 274.6191 442.7314 275.2793 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 441.5352 271.0664 -179 5.4507 1 0 0 1 0 0 Bg
-5.44987 -0.095127 -0.095127 5.44987 441.5352 271.0664 Bm
f
0 BB
439.1289 270.2637 m
436.8027 270.9248 434.3799 269.5732 433.7188 267.2471 c
433.0586 264.9199 434.4102 262.4971 436.7363 261.8369 c
439.0635 261.1758 441.4863 262.5273 442.1465 264.8535 c
442.8066 267.1807 441.4561 269.6035 439.1289 270.2637 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 437.9326 266.0508 -179 5.45131 1 0 0 1 0 0 Bg
-5.45048 -0.095137 -0.095137 5.45048 437.9326 266.0508 Bm
f
0 BB
430.1729 279.1465 m
427.8457 279.8066 425.4229 278.4561 424.7627 276.1289 c
424.1016 273.8027 425.4531 271.3799 427.7793 270.7188 c
430.1064 270.0586 432.5293 271.4092 433.1895 273.7363 c
433.8506 276.0625 432.499 278.4854 430.1729 279.1465 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 428.9766 274.9326 -179 5.45009 1 0 0 1 0 0 Bg
-5.44926 -0.095116 -0.095116 5.44926 428.9766 274.9326 Bm
f
0 BB
437.7783 280.8428 m
435.4512 281.5039 433.0283 280.1523 432.3672 277.8262 c
431.707 275.499 433.0586 273.0762 435.3848 272.416 c
437.7119 271.7549 440.1348 273.1064 440.7949 275.4336 c
441.4561 277.7598 440.1045 280.1826 437.7783 280.8428 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 436.582 276.6289 179 5.44948 1 0 0 1 0 0 Bg
-5.44866 0.095106 0.095106 5.44866 436.582 276.6289 Bm
f
0 BB
431.7637 271.167 m
429.4375 271.8281 427.0146 270.4766 426.3535 268.1504 c
425.6934 265.8232 427.0449 263.4004 429.3711 262.7402 c
431.6982 262.0791 434.1201 263.4307 434.7813 265.7568 c
435.4414 268.084 434.0908 270.5068 431.7637 271.167 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 430.5674 266.9531 -179 5.45009 1 0 0 1 0 0 Bg
-5.44926 -0.095116 -0.095116 5.44926 430.5674 266.9531 Bm
f
0 BB
436.0693 275.4961 m
433.7422 276.1572 431.3193 274.8057 430.6592 272.4785 c
429.998 270.1523 431.3496 267.7295 433.6758 267.0693 c
436.0029 266.4082 438.4258 267.7598 439.0859 270.0859 c
439.7471 272.4131 438.3955 274.8359 436.0693 275.4961 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 434.873 271.2832 179 5.45131 1 0 0 1 0 0 Bg
-5.45048 0.095137 0.095137 5.45048 434.873 271.2832 Bm
f
0 BB
500.9824 332.8027 m
507.5576 338.4932 512.8174 345.6875 516.1113 353.7324 C
522.0615 368.3052 522.1035 385.9146 513.5879 399.5845 C
505.293 413.2256 489.3047 421.6279 473.4404 420.6191 C
465.5137 420.3062 457.7314 417.2075 451.6953 412.0908 C
448.0625 408.9727 445.1035 405.1143 442.9795 400.8452 C
444.957 404.2319 447.4844 407.2988 450.4717 409.8623 C
454.1729 412.9995 458.5381 415.3677 463.1885 416.7939 C
466.502 417.98 469.9932 418.6616 473.5293 418.7671 C
488.7451 419.583 503.8818 411.3833 511.6133 398.3745 C
513.2305 395.7285 514.5127 392.9209 515.4746 390.0127 C
520.0459 377.8906 519.1631 363.9414 514.3018 352.0347 C
511.3232 344.7583 506.7188 338.1821 500.9824 332.8027 C
Bb
1 (GradientFill 4) 444.1426 414.1113 -36 104.6037 1 0 0 1 0 0 Bg
84.6262 -61.4845 -42.0837 -57.9233 466.0234 444.2285 Xm
6743.623 -4899.5293 -42.0837 -57.9233 -6277.5996 5343.7578 Bc
84.6262 -61.4845 -42.0837 -57.9233 466.0234 444.2285 Bm
6743.623 -4899.5293 -42.0837 -57.9233 550.6494 382.7441 Bc
f
0 BB
370.1514 313.1958 m
365.7998 318.4736 360.3916 322.8706 354.2715 325.9316 C
341.5225 332.2842 326.2139 333.3076 312.4697 329.6987 C
298.6494 326.0757 286.1558 317.5796 277.8267 306.0239 C
269.2886 294.5547 265.5469 280.0801 265.3779 265.8252 C
265.3154 261.6152 265.6309 257.4209 266.2837 253.2842 C
265.3726 258.1016 264.9272 263.0107 265.001 267.9404 C
265.1685 282.0664 268.876 296.4092 277.3359 307.7734 C
285.5889 319.2241 297.9697 327.6426 311.6641 331.2324 C
325.2822 334.8086 340.4521 333.7949 353.085 327.5005 C
359.79 324.147 365.6328 319.1772 370.1514 313.1958 C
Bb
1 (GradientFill 4) 261.4746 267.1045 36 121.5446 1 0 0 1 0 0 Bg
98.3316 71.4421 34.4334 -47.3935 243.8462 291.3682 Xm
6604.1733 4798.2124 34.4334 -47.3935 -6360.3271 -4506.8447 Bc
98.3316 71.4421 34.4334 -47.3935 243.8462 291.3682 Bm
6604.1733 4798.2124 34.4334 -47.3935 342.1777 362.8101 Bc
f
0 BB
333.0684 0 m
346.9258 41.6826 342.6602 88.9082 321.4492 127.2178 C
299.0752 168.2432 258.2793 199.1553 211.7935 206.7412 C
205.0029 207.8379 198.1553 208.3213 191.3242 208.2373 C
196.7446 208.1143 202.1665 207.6328 207.5513 206.7637 C
254.042 199.1768 294.8418 168.2607 317.2178 127.2314 C
338.4316 88.917 342.6934 41.6875 328.835 0 C
333.0684 0 L
Bb
1 (GradientFill 4) 185.7241 174.4209 -36 212.8561 1 0 0 1 0 0 Bg
172.2042 -125.1137 -72.6787 -100.0337 223.7285 226.7295 Xm
6551.8809 -4760.2202 -72.6787 -100.0337 -6328.1523 4986.9492 Bc
172.2042 -125.1137 -72.6787 -100.0337 223.7285 226.7295 Bm
6551.8809 -4760.2202 -72.6787 -100.0337 395.9326 101.6162 Bc
f
0 BB
353.9336 76.4287 m
371.8818 115.1084 327.7969 156.2783 331.167 188.1045 C
322.0645 141.9707 344.6738 138.3496 353.9336 76.4287 C
Bb
1 (GradientFill 4) 348.4434 187.9072 -95 111.701 1 0 0 1 0 0 Bg
-9.73539 -111.2759 -55.756 4.87802 380.0166 185.1445 Xm
-718.5674 -8213.2607 -55.756 4.87802 1098.584 8398.4053 Bc
-9.73539 -111.2759 -55.756 4.87802 380.0166 185.1445 Bm
-718.5674 -8213.2607 -55.756 4.87802 370.2813 73.8682 Bc
f
0 BB
*u
0 g
414.6162 95.6611 m
368.4688 82.5391 336.2529 44.3076 328.5742 0 C
355.3018 0 L
357.4033 11.7969 361.7324 23.2979 368.2637 33.6953 C
375.7051 45.6504 385.8643 55.9932 397.8418 63.7803 C
409.9014 71.4678 423.876 76.9307 437.3076 78.1152 C
464.7813 81.0586 494.124 66.9219 509.4463 42.3496 C
513.252 36.2871 516.3975 29.5039 518.4111 22.666 C
520.4023 16.0098 521.2441 9.01367 520.8301 2.01563 C
520.7969 1.34375 520.75 0.671875 520.6934 0 C
536.5732 0 L
537.5625 9.51074 536.7969 19.3652 534.0215 29.125 C
519.4219 80.4707 465.9629 110.2607 414.6162 95.6611 C
414.6162 95.6611 L
f
0 g
412.4424 0 m
403.5605 0 L
407.2598 17.3496 420.1885 32.1299 438.4404 37.3193 C
459.4717 43.2988 481.3682 31.0977 487.3486 10.0664 C
488.3047 6.70215 488.6777 3.31152 488.5313 0 C
483.9727 0 L
484.043 6.36719 481.6602 12.6855 477.9736 18.043 C
469.0723 30.7686 451.8184 35.6406 438.1094 29.8311 C
425.0039 24.8877 415.2803 13.1123 412.4424 0 C
412.4424 0 L
f
435.9922 0 m
434.4014 0 L
436.3828 6.28613 441.3848 11.4854 448.1982 13.4229 C
456.8008 15.8682 465.7568 10.8877 468.2207 2.29395 C
465.6553 10.9727 455.3633 15.6406 447.5303 12.2656 C
441.8877 10.2617 437.6885 5.46387 435.9922 0 C
Bb
1 (GradientFill 4) 372.2949 -31.9395 40 197.585 1 0 0 1 0 0 Bg
151.3589 127.0052 112.6704 -134.2754 313.0586 38.6553 Xm
6344.9595 5324.0532 112.6704 -134.2754 -6031.9014 -5285.3975 Bc
151.3589 127.0052 112.6704 -134.2754 313.0586 38.6553 Bm
6344.9595 5324.0532 112.6704 -134.2754 464.418 165.6602 Bc
f
0 BB
*U
514.6582 0.818359 m
515.3574 9.2627 514.3584 17.8389 511.5723 25.8447 C
505.748 42.5 493.0469 56.6387 477.7305 65.3135 C
462.335 74.042 443.9043 77.2998 426.5254 74.2432 C
409.0361 71.4434 393.207 61.832 380.7373 49.3262 C
377.043 45.6445 373.6982 41.6504 370.7021 37.4141 C
374.0576 42.4766 377.9043 47.2188 382.2314 51.5303 C
394.5869 63.9219 410.2725 73.4453 427.6025 76.2197 C
444.8223 79.249 463.085 76.0205 478.3408 67.3721 C
493.5176 58.7754 506.1035 44.7656 511.875 28.2627 C
514.9277 19.4912 515.8174 10.0313 514.6582 0.818359 C
Bb
1 (GradientFill 4) 461.2002 88.2314 -105 104.4377 1 0 0 1 0 0 Bg
-27.0305 -100.8791 -147.3255 39.4758 534.8623 68.4941 Xm
-2160.4653 -8062.9619 -147.3255 39.4758 2695.3271 8131.4561 Bc
-27.0305 -100.8791 -147.3255 39.4758 534.8623 68.4941 Bm
-2160.4653 -8062.9619 -147.3255 39.4758 507.832 -32.3848 Bc
f
0 BB
240.9258 204.7744 m
225.2876 210.3291 212.5264 223.1396 206.9849 238.6963 C
201.3574 254.1797 202.7002 272.1748 211.5376 286.2334 C
219.1743 298.3369 232.8833 306.0483 247.0239 306.8232 C
233.4497 305.6904 220.4321 298.1504 213.0859 286.5068 C
204.3291 272.5762 202.998 254.7451 208.5747 239.4023 C
213.9692 224.2578 226.2686 211.7402 241.3936 206.0859 C
240.9258 204.7744 L
Bb
1 (GradientFill 4) 193.5303 223.6182 36 89.2675 1 0 0 1 0 0 Bg
72.2189 52.4701 54.3577 -74.817 165.6836 261.9463 Xm
6533.5752 4746.9204 54.3577 -74.817 -6367.8916 -4484.9736 Bc
72.2189 52.4701 54.3577 -74.817 165.6836 261.9463 Bm
6533.5752 4746.9204 54.3577 -74.817 237.9023 314.4165 Bc
f
0 BB
267.4663 185.0078 m
204.082 224.1279 198.8779 258.6475 219.6699 270.6006 C
217.4688 262.3203 231.6128 255.7266 234.5103 241.3262 c
238.1084 223.4453 248.1523 204.917 267.4663 185.0078 C
Bb
1 (GradientFill 4) 216.7266 252.4443 -60 64.0695 1 0 0 1 0 0 Bg
32.0347 -55.4858 -37.7948 -21.8208 231.0444 260.7109 Xm
4064.261 -7039.5078 -37.7948 -21.8208 -3833.2166 7300.2188 Bc
32.0347 -55.4858 -37.7948 -21.8208 231.0444 260.7109 Bm
4064.261 -7039.5078 -37.7948 -21.8208 263.0791 205.2256 Bc
f
0 BB
204.8018 169.7363 m
210.8228 180.0986 227.6758 173.7002 224.7007 196.3262 C
232.1992 179.5693 247.8267 190.5791 261.061 189.8125 C
250.9702 196.8623 253.5781 218.3438 238.6377 216.9307 C
249.1953 219.8564 247.188 235.5381 256.4536 245.2041 C
246.6372 239.9463 226.3506 251.8154 221.7598 236.4805 C
222.2173 251.8867 206.2158 250.6641 195.4668 260.3008 C
197.9805 244.4102 185.0107 236.3887 195.9907 227.5654 C
182.8481 233.8418 175.2588 215.708 164.3228 213.8604 C
177.2852 210.4004 183.876 191.5859 198.0679 201.2305 C
185.6382 187.8408 204.4546 176.5977 204.8018 169.7363 C
Bb
1 (GradientFill 4) 161.7554 241.0615 -26 114.4082 1 0 0 1 0 0 Bg
102.8294 -50.1533 -41.4141 -84.9115 182.4624 283.5176 Xm
7230.8193 -3526.7065 -41.4141 -84.9115 -7048.3569 3810.2241 Bc
102.8294 -50.1533 -41.4141 -84.9115 182.4624 283.5176 Bm
7230.8193 -3526.7065 -41.4141 -84.9115 285.292 233.3643 Bc
f
0 BB
205.46 172.3281 m
211.1064 182.0449 225.8184 173.4648 223.749 199.4766 C
232.5562 181.4453 246.1553 191.2852 258.5649 190.5664 C
249.1025 197.1768 252.542 217.5635 235.021 216.1348 C
248.4971 220.708 244.7388 234.1504 253.4277 243.2139 C
244.2227 238.2842 227.6636 251.7666 220.5879 231.8672 C
221.8843 251.1963 207.2261 248.4775 197.147 257.5137 C
199.5039 242.6133 185.2539 236.1797 200.3955 224.9326 C
182.3169 233.1504 177.7573 215.4365 167.502 213.7031 C
179.6572 210.459 187.0957 192.1328 202.3491 204.9141 C
186.7905 189.2432 205.1343 178.7617 205.46 172.3281 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 213.0332 214.9209 179 51.1254 1 0 0 1 0 0 Bg
-51.1176 0.892251 0.892251 51.1176 213.0332 214.9209 Bm
f
0 BB
*u
0 g
216.5552 182.8135 m
224.9395 190.4229 220.5742 202.6094 215.4604 211.2109 C
219.4604 202.0225 223.4771 191.2852 216.5552 182.8135 C
216.5552 182.8135 L
f
0 g
206.5957 177.4141 m
207.3403 186.3945 211.8989 202.6553 214.7271 210.7744 C
219.5747 202.0508 218.9136 186.2959 210.9409 179.1035 C
217.0723 187.3633 218.0005 201.8184 214.7271 210.7744 C
214.1938 202.8213 209.0176 185.4014 206.5957 177.4141 C
206.5957 177.4141 L
f
1 D
0 g
203.6733 180.7832 m
202.3252 190.2842 208.0571 204.9824 214.6494 210.7969 C
206.7886 205.8711 200.2925 190.3613 203.6733 180.7832 C
203.6733 180.7832 L
f
199.9673 187.0283 m
197.9448 197.6924 206.4624 205.3711 214.3184 211.501 C
205.7588 206.4072 196.2612 197.6348 199.9673 187.0283 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 211.0894 194.457 -164 20.8122 1 0 0 1 0 0 Bg
-20.006 -5.73663 -5.73663 20.006 211.0894 194.457 Bm
f
0 BB
*U
*u
0 D
0 g
246.8047 207.2393 m
241.6387 217.3145 229.7456 215.5527 220.1089 212.8535 C
230.0225 214.3242 240.4258 216.127 246.8047 207.2393 C
246.8047 207.2393 L
f
0 g
249.4277 196.2178 m
240.9492 199.2734 227.4438 207.1885 220.3398 212.0313 C
230.0249 214.4424 244.0557 210.4229 248.9263 200.8535 C
242.5464 208.9219 229.8398 212.8613 220.3398 212.0313 C
227.8809 209.4473 242.3457 200.6348 249.4277 196.2178 C
249.4277 196.2178 L
f
0 g
245.4141 194.2734 m
235.2866 193.5 223.0088 203.0908 220.2983 211.9619 C
224.1973 204.084 235.8892 195.4434 245.4141 194.2734 C
245.4141 194.2734 L
f
238.4199 192.3193 m
227.2144 191.5 222.2231 202.2363 219.5317 211.8262 C
223.4067 202.6455 227.5962 193.1406 238.4199 192.3193 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 235.0771 204.7451 120 19.9287 1 0 0 1 0 0 Bg
-9.96435 17.2588 17.2588 9.96435 235.0771 204.7451 Bm
f
0 BB
*U
*u
0 g
185.04 205.874 m
194.5269 199.6943 204.9775 206.5654 212.0015 213.6943 C
204.1274 207.4941 194.9897 201.3271 185.04 205.874 C
185.04 205.874 L
f
0 g
177.2905 214.1387 m
186.167 215.6963 202.8218 214.9688 211.3936 214.293 C
204.1836 207.3916 189.0068 204.4766 180.0273 210.3643 C
189.5718 206.5283 203.5596 208.8545 211.3936 214.293 C
203.564 212.791 185.6313 213.8223 177.2905 214.1387 C
177.2905 214.1387 L
f
1 D
0 g
179.8086 217.8193 m
188.6572 221.5342 204.0986 219.2754 211.3945 214.374 C
204.6372 220.7275 188.2158 223.5195 179.8086 217.8193 C
179.8086 217.8193 L
f
184.9092 222.9893 m
194.7124 227.6504 204.0703 220.917 211.9922 214.8721 C
204.8945 221.8604 194.229 229.2637 184.9092 222.9893 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 194.646 214.4141 -88 20.5162 1 0 0 1 0 0 Bg
0.716006 -20.5037 -20.5037 -0.716006 194.646 214.4141 Bm
f
0 BB
*U
*u
0 D
0 g
196.5596 240.333 m
194.1367 229.2734 203.6543 222.21 212.8066 218.1641 C
204.2217 223.334 195.8286 229.418 196.5596 240.333 C
196.5596 240.333 L
f
0 g
201.5469 250.5059 m
206.145 242.7559 210.7505 227.2002 213.1519 218.9443 C
204.145 223.2451 196.6558 236.1289 198.9849 246.6104 C
198.7754 236.3262 205.2935 224.3467 213.1519 218.9443 C
208.9761 225.7354 204.2017 242.5928 201.5469 250.5059 C
201.5469 250.5059 L
f
0 g
205.8804 249.4541 m
214.187 243.6074 216.7793 227.541 213.2275 218.9717 C
215.23 227.5303 212.4854 242.4922 205.8804 249.4541 C
205.8804 249.4541 L
f
212.52 246.5127 m
221.6875 240.0166 217.9292 227.7002 213.9058 218.5889 C
216.7554 228.1377 220.3491 238.9932 212.52 246.5127 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 207.1875 234.335 -19 19.5621 1 0 0 1 0 0 Bg
18.4964 -6.3688 -6.3688 -18.4964 207.1875 234.335 Bm
f
0 BB
*U
*u
0 g
233.1943 241.543 m
221.9731 240.0322 218.4932 227.9541 217.8257 217.9688 C
219.7432 227.8057 222.6885 238.4922 233.1943 241.543 C
233.1943 241.543 L
f
0 g
244.4595 240.3408 m
238.7524 233.3662 225.6118 222.9951 218.6772 217.9121 C
219.6338 227.8467 229.2764 240.0127 239.9224 241.4141 C
230.1875 238.0889 221.0615 227.1455 218.6772 217.9121 C
223.6279 224.1611 237.9341 235.1367 244.4595 240.3408 C
244.4595 240.3408 L
f
0 g
244.9551 235.9082 m
242.3071 226.1025 227.9961 217.4482 218.729 217.8506 C
227.4556 218.8994 240.6763 227.3193 244.9551 235.9082 C
244.9551 235.9082 L
f
244.4648 228.6631 m
241.5015 217.8262 228.54 216.4229 218.6016 217.082 C
228.5488 217.6748 240.0815 218.7324 244.4648 228.6631 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 230.8477 229.2441 50 18.7155 1 0 0 1 0 0 Bg
12.0301 14.3369 14.3369 -12.0301 230.8477 229.2441 Bm
f
0 BB
*U
0.78 0.81 0.81 0.64 k
209.334 211.2822 m
209.8818 211.1436 210.4312 211.1367 210.9502 211.2432 C
210.9385 211.2002 L
210.4458 209.2607 211.6191 207.2891 213.5581 206.7959 c
215.4971 206.3027 217.4697 207.4766 217.9619 209.415 c
217.9688 209.4404 217.9746 209.4658 217.9805 209.4912 C
218.4463 208.9609 219.0718 208.5605 219.8076 208.374 c
221.7471 207.8809 223.7188 209.0547 224.2119 210.9941 c
224.7046 212.9326 223.5313 214.9053 221.5923 215.3975 c
221.4814 215.4258 221.3701 215.4482 221.2593 215.4658 C
221.9551 215.9463 222.4878 216.6709 222.7124 217.5547 c
223.2046 219.4941 222.0317 221.4658 220.0928 221.959 c
218.646 222.3262 217.1807 221.7666 216.3252 220.6533 C
215.8696 221.5576 215.0396 222.2676 213.9814 222.5361 c
212.0425 223.0283 210.0703 221.8555 209.5771 219.917 c
209.4424 219.3867 209.4331 218.8535 209.5288 218.3496 C
208.1987 218.0879 207.0708 217.0869 206.7148 215.6865 c
206.2217 213.7471 207.395 211.7754 209.334 211.2822 c
f
214.8628 211.3105 m
216.771 210.8262 218.7119 211.9805 219.1968 213.8887 c
219.6816 215.7959 218.5273 217.7373 216.6191 218.2217 c
214.7109 218.7061 212.77 217.5527 212.2856 215.6445 c
211.8003 213.7363 212.9551 211.7949 214.8628 211.3105 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 215.7412 214.7656 179 4.43729 1 0 0 1 0 0 Bg
-4.43662 0.077441 0.077441 4.43662 215.7412 214.7656 Bm
f
0 BB
210.3584 211.8145 m
211.9902 211.4004 213.6494 212.3867 214.064 214.0186 c
214.4785 215.6504 213.4917 217.3096 211.8599 217.7246 c
210.2285 218.1387 208.5688 217.1523 208.1548 215.5205 c
207.7402 213.8887 208.7271 212.2295 210.3584 211.8145 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 211.1094 214.7695 179 3.7947 1 0 0 1 0 0 Bg
-3.79412 0.066226 0.066226 3.79412 211.1094 214.7695 Bm
f
0 BB
212.7676 215.374 m
214.3989 214.959 216.0586 215.9463 216.4727 217.5781 c
216.8872 219.21 215.9004 220.8691 214.269 221.2842 c
212.6372 221.6982 210.978 220.7109 210.563 219.0801 c
210.1489 217.4482 211.1357 215.7881 212.7676 215.374 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 213.5181 218.3291 179 3.7947 1 0 0 1 0 0 Bg
-3.79412 0.066226 0.066226 3.79412 213.5181 218.3291 Bm
f
0 BB
219.1709 209.3682 m
220.8027 208.9531 222.4619 209.9404 222.8765 211.5723 c
223.291 213.2031 222.3042 214.8623 220.6724 215.2773 c
219.041 215.6914 217.3818 214.7051 216.9668 213.0732 c
216.5527 211.4414 217.5396 209.7822 219.1709 209.3682 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 219.9219 212.3223 -179 3.7947 1 0 0 1 0 0 Bg
-3.79412 -0.066226 -0.066226 3.79412 219.9219 212.3223 Bm
f
0 BB
213.9126 208.04 m
215.5439 207.625 217.2036 208.6123 217.6182 210.2441 c
218.0327 211.876 217.0459 213.5352 215.4141 213.9492 c
213.7827 214.3643 212.123 213.377 211.7085 211.7451 c
211.2939 210.1143 212.2808 208.4541 213.9126 208.04 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 214.6631 210.9941 -179 3.795 1 0 0 1 0 0 Bg
-3.79443 -0.066231 -0.066231 3.79443 214.6631 210.9941 Bm
f
0 BB
217.9092 214.8887 m
219.541 214.4736 221.2002 215.4609 221.6147 217.0918 c
222.0293 218.7236 221.0425 220.3828 219.4106 220.7979 c
217.7788 221.2119 216.1196 220.2256 215.7051 218.5938 c
215.2905 216.9619 216.2773 215.3027 217.9092 214.8887 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 218.6602 217.8438 179 3.79531 1 0 0 1 0 0 Bg
-3.79473 0.066237 0.066237 3.79473 218.6602 217.8438 Bm
f
0 BB
214.998 211.793 m
216.6294 211.3779 218.2886 212.3652 218.7036 213.9971 c
219.1177 215.6289 218.1309 217.2881 216.499 217.7021 c
214.8677 218.1172 213.2085 217.1299 212.7939 215.499 c
212.3794 213.8672 213.3662 212.207 214.998 211.793 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 215.7485 214.748 179 3.7947 1 0 0 1 0 0 Bg
-3.79412 0.066226 0.066226 3.79412 215.7485 214.748 Bm
f
0 BB
426.6475 99.1318 m
508.0674 112.9922 499.7168 47.7227 491.9521 39.2266 C
492.1338 54.7861 476.1113 54.3721 469.3818 69.3926 c
462.459 84.8477 452.2373 97.0264 426.6475 99.1318 C
Bb
1 (GradientFill 4) 500.2344 42.8926 131 91.7633 1 0 0 1 0 0 Bg
-60.2022 69.2546 56.2572 48.9037 484.6572 29.3516 Xm
-5507.6611 6335.8369 56.2572 48.9037 5992.3184 -6306.4854 Bc
-60.2022 69.2546 56.2572 48.9037 484.6572 29.3516 Bm
-5507.6611 6335.8369 56.2572 48.9037 424.4551 98.6064 Bc
f
0 BB
*u
0 g
473.8486 98.6172 m
461.7813 101.1162 449.2627 101.749 436.9717 100.8398 C
434.3916 100.6572 431.8223 100.3926 429.2656 100.0479 C
442.7988 101.5361 456.5068 100.7451 469.6172 96.9873 C
470.4482 96.7637 471.2754 96.5264 472.0996 96.2813 C
471.5908 95.5703 471.0918 94.8516 470.6143 94.1191 C
469.4492 94.4785 468.2793 94.8193 467.1025 95.1367 C
447.8037 100.668 427.2236 99.832 407.7813 94.7725 C
407.0693 95.7607 L
407.3184 95.8506 L
429.1553 103.7979 453.2783 106.6455 475.8301 100.9922 C
475.1494 100.2158 474.4863 99.4258 473.8486 98.6172 C
473.8486 98.6172 L
f
1 D
421.5605 98.9531 m
427.7891 100.3809 434.1318 101.3428 440.5381 101.7969 C
442.6748 101.9551 444.8184 102.0645 446.9658 102.127 C
437.6387 102.0068 428.2949 100.7314 419.1787 98.5166 C
419.9717 98.6699 420.7656 98.8154 421.5605 98.9531 C
Bb
1 (GradientFill 4) 422.6494 83.1758 36 49.0622 1 0 0 1 0 0 Bg
39.6922 28.838 25.086 -34.5279 410.1064 100.4395 Xm
6735.3594 4893.5244 25.086 -34.5279 -6325.2529 -4793.085 Bc
39.6922 28.838 25.086 -34.5279 410.1064 100.4395 Bm
6735.3594 4893.5244 25.086 -34.5279 449.7988 129.2773 Bc
f
0 BB
*U
0 D
425.2803 100.7002 m
499.6104 109.1064 519.1152 138.2383 505.3438 157.999 C
503.7988 149.5342 488.126 149.5977 479.3291 137.7568 c
468.4063 123.0527 451.3496 110.5195 425.2803 100.7002 C
Bb
1 (GradientFill 4) 451.7676 152.9023 -60 56.394 1 0 0 1 0 0 Bg
28.197 -48.8386 -90.0948 -52.0163 497.6611 179.3984 Xm
4164.1133 -7212.457 -90.0948 -52.0163 -3666.4521 7391.8555 Bc
28.197 -48.8386 -90.0948 -52.0163 497.6611 179.3984 Bm
4164.1133 -7212.457 -90.0948 -52.0163 525.8584 130.5596 Bc
f
0 BB
542.2471 0 m
543.0244 11.0332 541.6494 22.2051 538.0137 32.6553 C
530.1709 55.082 513.0684 74.1201 492.4453 85.8008 C
471.7139 97.5547 446.8965 101.9404 423.4961 97.8252 C
399.9473 94.0557 378.6318 81.1123 361.8418 64.2744 C
356.8672 59.3174 352.3633 53.9385 348.3291 48.2344 C
352.8467 55.0508 358.0273 61.4355 363.8525 67.2422 C
380.4912 83.9268 401.6113 96.751 424.9463 100.4863 C
448.1338 104.5654 472.7246 100.2178 493.2656 88.5723 C
513.7021 76.9971 530.6494 58.1328 538.4199 35.9111 C
542.416 24.4316 543.6582 12.0752 542.291 0 C
542.2471 0 L
Bb
1 (GradientFill 4) 484.2383 120.4668 -112 157.8111 1 0 0 1 0 0 Bg
-59.1171 -146.3199 -187.2052 75.6358 577.8408 82.6494 Xm
-3131.2058 -7750.0059 -187.2052 75.6358 3709.0469 7832.6553 Bc
-59.1171 -146.3199 -187.2052 75.6358 577.8408 82.6494 Bm
-3131.2058 -7750.0059 -187.2052 75.6358 518.7236 -63.6709 Bc
f
0 BB
455.2764 67.9287 m
459.8721 79.0518 444.4873 88.5957 464.3545 100.0215 C
446.4121 95.7852 445.665 114.9688 436.9814 125.0605 C
448.7607 121.3086 464.3096 136.4912 472.2939 123.709 C
468.1885 133.917 481.9248 141.8789 483.9863 155.168 C
485.7783 144.1289 507.6221 135.1816 498.1855 122.166 C
510.1992 131.9277 518.9834 118.415 533.2275 115.7158 C
519.0166 108.0303 520.5264 92.79 506.791 96.1689 C
519.8135 89.5107 509.9746 72.3955 515.1699 62.543 C
504.5029 70.7744 485.4727 64.5586 484.5107 81.7637 C
481.4092 63.6797 460.9629 71.835 455.2764 67.9287 C
Bb
1 (GradientFill 4) 437.1514 78.4072 26 112.9097 1 0 0 1 0 0 Bg
101.4826 49.4964 44.2408 -90.707 415.0313 123.7607 Xm
7481.1953 3648.8228 44.2408 -90.707 -7066.1641 -3525.0625 Bc
101.4826 49.4964 44.2408 -90.707 415.0313 123.7607 Bm
7481.1953 3648.8228 44.2408 -90.707 516.5137 173.2568 Bc
f
0 BB
456.9424 70.0342 m
461.252 80.4648 445.4326 86.9707 467.4492 101.1846 C
447.6914 97.2139 447.248 114.0654 439.1055 123.5283 C
450.1504 120.0107 464.3193 135.1895 473.8652 120.3379 C
469.2939 133.8789 482.3115 139.0791 484.2441 151.54 C
485.9248 141.1885 506.7822 136.2002 495.2207 118.418 C
509.8525 131.2412 516.623 117.8877 529.9795 115.3574 C
516.6533 108.1494 520.2109 92.8555 502.0029 98.0771 C
519.5859 88.665 508.2344 74.2236 513.1055 64.9834 C
503.1035 72.7031 483.9453 67.4609 484.8398 87.4258 C
481.8252 65.4541 462.2744 73.6982 456.9424 70.0342 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 484.543 108.2617 -179 51.4539 1 0 0 1 0 0 Bg
-51.4461 -0.897985 -0.897985 51.4461 484.543 108.2617 Bm
f
0 BB
*u
0 g
458.542 85.2813 m
459.499 96.6123 471.8848 100.5615 481.8672 101.7285 C
472.0957 99.3154 461.0791 95.9717 458.542 85.2813 C
458.542 85.2813 L
f
1 D
0 g
460.3086 74.042 m
467.0195 80.1133 477.2119 93.668 481.9658 100.877 C
472.0488 99.4229 459.8818 89.2871 459.0059 78.5391 C
461.8564 88.4688 472.8232 98.0254 481.9658 100.877 C
475.9453 95.6006 465.2031 80.8457 460.3086 74.042 C
460.3086 74.042 L
f
0 g
464.7783 73.7646 m
474.4824 76.9092 482.8955 91.5527 482.0313 100.8281 C
481.4121 92.0225 473.1816 78.4844 464.7783 73.7646 C
464.7783 73.7646 L
f
472.0215 74.6172 m
482.7441 78.1289 483.9512 91.0576 482.7949 100.9941 C
482.6953 90.9873 481.7637 79.5078 472.0215 74.6172 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 471.8291 87.7461 164 19.2878 1 0 0 1 0 0 Bg
-18.5406 5.31643 5.31643 18.5406 471.8291 87.7461 Bm
f
0 BB
*U
*u
0 D
0 g
459.5801 124.3145 m
470.7695 126.3379 476.6182 115.7734 480.3418 106.4385 C
475.4697 115.2451 470.5615 124.6455 459.5801 124.3145 C
459.5801 124.3145 L
f
1 D
0 g
449.1865 119.6846 m
456.7959 114.7842 471.3486 108.8359 479.5459 106.1211 C
475.5615 115.3193 463.7969 124.0625 453.1914 122.1123 C
463.5205 121.9424 474.4141 114.208 479.5459 106.1211 C
472.8838 110.5625 457.0303 116.7275 449.1865 119.6846 C
449.1865 119.6846 L
f
0 g
450.083 115.2969 m
455.6436 106.7441 470.7842 102.7979 479.5146 106.0459 C
470.8516 104.3525 456.8262 108.4102 450.083 115.2969 C
450.083 115.2969 L
f
452.79 108.5244 m
458.9707 99.084 470.5811 101.6494 479.874 105.3516 C
470.1865 102.8438 460.0479 100.3896 452.79 108.5244 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 465.3877 113.0615 -120 19.868 1 0 0 1 0 0 Bg
-9.934 -17.2062 -17.2062 9.934 465.3877 113.0615 Bm
f
0 BB
*U
*u
0 D
0 g
496.1621 74.2012 m
485.4453 78.002 484.5537 90.5313 485.957 100.4824 C
485.8135 90.4189 486.4658 79.3672 496.1621 74.2012 C
496.1621 74.2012 L
f
1 D
0 g
507.4824 73.0596 m
503.3115 81.0918 492.5732 93.9365 486.8066 100.3633 C
485.6973 90.4004 492.6279 76.5137 502.8018 72.9404 C
493.9199 78.2168 487.2451 90.7959 486.8066 100.3633 C
490.3828 93.2002 502.1426 79.5205 507.4824 73.0596 C
507.4824 73.0596 L
f
0 g
508.8848 77.3135 m
508.3037 87.498 496.0615 98.8965 486.8701 100.4131 C
495.2305 97.5811 506.4502 86.6387 508.8848 77.3135 C
508.8848 77.3135 L
f
509.8975 84.5361 m
509.2197 95.7988 496.8076 99.793 486.9033 101.1943 C
496.5576 98.5605 507.6377 95.2002 509.8975 84.5361 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 497.1816 87.0674 88 19.0063 1 0 0 1 0 0 Bg
0.66331 18.9947 18.9947 -0.66331 497.1816 87.0674 Bm
f
0 BB
*U
*u
0 D
0 g
516.6299 104.4092 m
509.2832 95.7314 497.8438 99.0166 489.0322 103.8516 C
498.3936 100.1553 508.3672 97.1689 516.6299 104.4092 C
516.6299 104.4092 L
f
1 D
0 g
521.7051 114.5938 m
512.7168 113.5342 497.4961 107.7227 489.4443 104.6025 C
498.3691 100.0391 513.2168 101.9219 520.1592 110.1729 C
512.082 103.7334 498.5479 101.627 489.4443 104.6025 C
497.4102 105.4131 513.7725 111.8857 521.7051 114.5938 C
521.7051 114.5938 L
f
0 D
0 g
518.2227 117.4092 m
508.6396 118.4336 495.0273 111.4971 489.4209 104.6797 C
494.0908 112.7402 508.4922 120.4717 518.2227 117.4092 C
518.2227 117.4092 L
f
511.8252 120.9131 m
501.0518 122.5732 494.582 113.085 488.7012 104.9873 C
493.5176 113.7549 501.0518 124.2656 511.8252 120.9131 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 504.2129 110.0586 19 20.9288 1 0 0 1 0 0 Bg
19.7886 6.81375 6.81375 -19.7886 504.2129 110.0586 Bm
f
0 BB
*U
*u
0 g
495.251 134.377 m
500.8896 124.5029 493.375 114.3594 485.8164 107.7373 C
492.4951 115.2666 499.2246 124.1338 495.251 134.377 C
495.251 134.377 L
f
1 D
0 g
487.4209 142.6318 m
485.3379 133.8242 485.0771 117.0146 485.251 108.3818 C
492.5947 115.2041 496.4199 130.3184 491.0449 139.666 C
494.3291 129.8721 491.1641 115.916 485.251 108.3818 C
487.2178 116.1426 487.249 134.252 487.4209 142.6318 C
487.4209 142.6318 L
f
0 D
0 g
483.583 140.3242 m
479.3389 131.6709 480.6846 115.9873 485.1699 108.3848 C
479.1973 115.5332 477.374 132.2305 483.583 140.3242 C
483.583 140.3242 L
f
1 D
478.1006 135.5137 m
471.2617 126.5391 478.0469 115.3428 484.6348 107.8154 C
479.041 116.1133 472.8516 125.96 478.1006 135.5137 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 485.5771 125.5332 -50 21.2654 1 0 0 1 0 0 Bg
13.6692 -16.2903 -16.2903 -13.6692 485.5771 125.5332 Bm
f
0 BB
*U
0 D
0.78 0.81 0.81 0.64 k
485.6602 96.8838 m
485.2148 97.2354 484.875 97.6699 484.6436 98.1484 C
484.6152 98.1133 L
483.3691 96.5371 481.0801 96.2705 479.5039 97.5176 c
477.9287 98.7637 477.6611 101.0527 478.9082 102.6289 c
478.9248 102.6494 478.9404 102.6699 478.958 102.6895 C
478.25 102.7383 477.5498 102.9932 476.9521 103.4658 c
475.376 104.7129 475.1094 107.002 476.3555 108.5781 c
477.6025 110.1533 479.8916 110.4209 481.4668 109.1738 c
481.5576 109.1025 481.6426 109.0273 481.7246 108.9492 C
481.6836 109.7979 481.9365 110.665 482.5049 111.3828 c
483.752 112.959 486.041 113.2256 487.6162 111.9785 c
488.792 111.0488 489.2393 109.5381 488.873 108.1768 C
489.8721 108.3652 490.9443 108.1357 491.8047 107.4551 c
493.3809 106.209 493.6475 103.9199 492.4004 102.3438 c
492.0596 101.9131 491.6406 101.5801 491.1807 101.3496 C
491.7822 100.1289 491.6719 98.6182 490.7715 97.4795 c
489.5254 95.9033 487.2363 95.6367 485.6602 96.8838 c
f
482.3105 101.3115 m
480.7598 102.5391 480.4971 104.791 481.7236 106.3418 c
482.9512 107.8926 485.2031 108.1553 486.7539 106.9277 c
488.3047 105.7021 488.5674 103.4492 487.3398 101.8984 c
486.1133 100.3477 483.8613 100.085 482.3105 101.3115 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 484.5322 104.1201 179 4.4552 1 0 0 1 0 0 Bg
-4.45452 0.077753 0.077753 4.45452 484.5322 104.1201 Bm
f
0 BB
485.46 98.0254 m
484.1338 99.0742 483.9102 101.001 484.959 102.3262 c
486.0078 103.6523 487.9336 103.877 489.2598 102.8281 c
490.585 101.7793 490.8096 99.8525 489.7607 98.5273 c
488.7119 97.2012 486.7861 96.9766 485.46 98.0254 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 487.3594 100.4268 -179 3.8092 1 0 0 1 0 0 Bg
-3.80862 -0.066479 -0.066479 3.80862 487.3594 100.4268 Bm
f
0 BB
486.8311 102.1182 m
485.5049 103.167 485.2803 105.0938 486.3291 106.4189 c
487.3779 107.7451 489.3047 107.9697 490.6299 106.9209 c
491.9561 105.8721 492.1807 103.9453 491.1318 102.6201 c
490.083 101.2939 488.1563 101.0693 486.8311 102.1182 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 488.7305 104.5195 -179 3.8092 1 0 0 1 0 0 Bg
-3.80862 -0.066479 -0.066479 3.80862 488.7305 104.5195 Bm
f
0 BB
478.1328 103.5645 m
476.8066 104.6133 476.582 106.5391 477.6309 107.8652 c
478.6807 109.1914 480.6064 109.416 481.9326 108.3672 c
483.2578 107.3174 483.4824 105.3916 482.4336 104.0654 c
481.3848 102.7402 479.459 102.5156 478.1328 103.5645 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 480.0322 105.9658 179 3.8095 1 0 0 1 0 0 Bg
-3.80892 0.066484 0.066484 3.80892 480.0322 105.9658 Bm
f
0 BB
480.2803 98.5586 m
478.9551 99.6074 478.7305 101.5342 479.7793 102.8594 c
480.8281 104.1855 482.7539 104.4102 484.0801 103.3613 c
485.4053 102.3125 485.6309 100.3857 484.5811 99.0605 c
483.5322 97.7344 481.6064 97.5098 480.2803 98.5586 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 482.1807 100.96 -179 3.80859 1 0 0 1 0 0 Bg
-3.80801 -0.066468 -0.066468 3.80801 482.1807 100.96 Bm
f
0 BB
483.3066 105.9248 m
481.9814 106.9736 481.7568 108.8994 482.8057 110.2256 c
483.8545 111.5508 485.7803 111.7754 487.1064 110.7266 c
488.4316 109.6777 488.6572 107.752 487.6074 106.4258 c
486.5586 105.1006 484.6328 104.876 483.3066 105.9248 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 485.207 108.3262 179 3.8092 1 0 0 1 0 0 Bg
-3.80862 0.066479 0.066479 3.80862 485.207 108.3262 Bm
f
0 BB
482.6133 101.7139 m
481.2871 102.7627 481.0625 104.6885 482.1113 106.0146 c
483.1602 107.3408 485.0869 107.5654 486.4121 106.5156 c
487.7383 105.4668 487.9629 103.541 486.9141 102.2148 c
485.8652 100.8896 483.9385 100.665 482.6133 101.7139 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 484.5127 104.1152 -179 3.8092 1 0 0 1 0 0 Bg
-3.80862 -0.066479 -0.066479 3.80862 484.5127 104.1152 Bm
f
0 BB
0.02 0.01 0.07 0 k
0 XR
104.0708 506.2144 m
103.96 507.481 103.5068 508.4287 102.7026 509.0664 c
101.8979 509.7041 100.7471 510.0186 99.2495 510.0186 c
97.8955 510.0186 96.7954 509.769 95.9448 509.2607 c
95.0942 508.7568 94.6738 508.022 94.6738 507.0557 c
94.6738 506.1958 94.9971 505.5581 95.6538 505.1377 c
96.3101 504.7168 97.5625 504.3008 99.4116 503.8848 c
101.0522 503.5244 102.3926 503.1548 103.4326 502.7754 c
104.4727 502.3965 105.3604 501.8096 106.1001 501.0098 c
106.8394 500.2104 107.209 499.1377 107.209 497.7925 c
107.209 496.0869 106.5298 494.668 105.1709 493.5405 c
103.8164 492.4126 102.0415 491.8486 99.8599 491.8486 c
97.0679 491.8486 94.979 492.4727 93.5967 493.7158 c
92.21 494.9639 91.4751 496.5771 91.3965 498.5649 C
93.8882 498.7822 L
94.0034 497.1919 94.6182 496.0361 95.7275 495.3062 c
96.8369 494.5806 98.1772 494.2148 99.749 494.2148 c
101.2236 494.2148 102.4111 494.5205 103.3174 495.126 c
104.2231 495.7314 104.6807 496.5493 104.6807 497.5894 c
104.6807 498.6709 104.2046 499.4614 103.2573 499.9604 c
102.3096 500.4551 100.7197 500.9453 98.4824 501.4302 c
96.25 501.9111 94.6416 502.5908 93.6567 503.4644 c
92.6724 504.3423 92.1777 505.4795 92.1777 506.8799 c
92.1777 508.4653 92.8018 509.7832 94.0498 510.8184 c
95.293 511.8584 96.9893 512.376 99.1387 512.376 c
101.3438 512.376 103.1138 511.8584 104.4546 510.8276 c
105.7944 509.792 106.5068 508.3223 106.5898 506.418 C
104.0708 506.2144 L
f
*u
122.9614 492.186 m
120.4009 492.186 L
120.165 492.6392 119.999 493.2305 119.9019 493.9609 C
118.2656 492.5513 116.4995 491.8486 114.6045 491.8486 c
113.0884 491.8486 111.8916 492.2275 111.0176 492.9858 c
110.1396 493.7437 109.7051 494.7471 109.7051 495.9902 c
109.7051 497.1826 110.1255 498.1626 110.9668 498.9346 c
111.813 499.7065 113.2783 500.2192 115.3628 500.4736 c
117.6367 500.811 l
118.4873 500.9497 119.1851 501.1162 119.7349 501.3149 C
119.7349 502.0454 119.7168 502.563 119.6704 502.8633 c
119.6245 503.1636 119.4902 503.478 119.2686 503.8066 c
119.0464 504.1299 118.6953 504.3936 118.2051 504.5923 c
117.7202 504.791 117.064 504.8877 116.2456 504.8877 c
115.1963 504.8877 114.3691 504.6934 113.7588 504.3057 c
113.1484 503.917 112.7329 503.1963 112.5063 502.1377 C
110.1211 502.4521 L
110.3843 503.9219 111.0547 505.0269 112.1411 505.7661 c
113.2227 506.5103 114.7158 506.8799 116.6108 506.8799 c
118.335 506.8799 119.6016 506.6255 120.4053 506.1128 c
121.2144 505.6045 121.7139 504.9897 121.8984 504.2637 c
122.0835 503.543 122.1758 502.6138 122.1758 501.4766 c
122.1758 498.1997 l
122.1758 496.2026 122.2129 494.8672 122.2915 494.1826 c
122.3652 493.5034 122.5918 492.8379 122.9614 492.186 C
122.9614 492.186 L
f
1 D
119.7349 498.5093 m
119.7349 499.3921 L
118.4639 498.9668 116.9063 498.6294 115.0669 498.3799 c
113.2227 498.1348 112.3027 497.3535 112.3027 496.0459 c
112.3027 495.3848 112.5522 494.8438 113.0469 494.4141 c
113.5464 493.9839 114.2578 493.7715 115.187 493.7715 c
116.3887 493.7715 117.4473 494.1274 118.3628 494.8481 c
119.2778 495.5649 119.7349 496.7852 119.7349 498.5093 c
f
*U
0 D
145.3979 492.186 m
142.9619 492.186 L
142.9619 501.2593 l
142.9619 501.9248 142.9155 502.498 142.8281 502.9746 c
142.7354 503.4458 142.5044 503.8667 142.1299 504.2314 c
141.7554 504.5967 141.1689 504.7813 140.3735 504.7813 c
139.4165 504.7813 138.5938 504.4443 137.896 503.7788 c
137.2026 503.1084 136.856 502.0269 136.856 500.5293 c
136.856 492.186 L
134.4155 492.186 L
134.4155 501.5273 l
134.4155 502.7754 134.1982 503.6304 133.7593 504.0884 c
133.3203 504.5503 132.7007 504.7813 131.8965 504.7813 c
130.8516 504.7813 129.9922 504.4165 129.3169 503.6953 c
128.647 502.9746 128.3096 501.6245 128.3096 499.6465 c
128.3096 492.186 L
125.8735 492.186 L
125.8735 506.5518 L
128.0649 506.5518 L
128.0649 504.5503 L
128.1201 504.5503 L
129.0952 506.1035 130.5234 506.8799 132.4141 506.8799 c
133.4678 506.8799 134.3369 506.6675 135.021 506.2466 c
135.7002 505.8311 136.1953 505.1978 136.5 504.3608 C
137.5679 506.0391 139.0425 506.8799 140.9282 506.8799 c
142.4209 506.8799 143.5352 506.478 144.2842 505.6738 c
145.0283 504.8691 145.3979 503.6631 145.3979 502.0591 c
145.3979 492.186 L
f
*u
151.3281 504.6982 m
152.2432 506.1499 153.6113 506.8799 155.4326 506.8799 c
157.3184 506.8799 158.8115 506.1958 159.9023 504.8276 c
160.9932 503.4595 161.5386 501.6802 161.5386 499.4844 c
161.5386 497.146 160.938 495.2876 159.7271 493.915 c
158.5156 492.5371 157.0322 491.8486 155.271 491.8486 c
153.7271 491.8486 152.4883 492.4634 151.5596 493.6885 C
151.4946 493.6885 L
151.4946 486.6626 L
149.0542 486.6626 L
149.0542 506.5518 L
151.2773 506.5518 L
151.2773 504.6982 L
151.3281 504.6982 L
151.3281 504.6982 L
f
1 D
155.1094 493.8501 m
156.2461 493.8501 157.189 494.3213 157.9336 495.269 c
158.6777 496.2119 159.0474 497.6172 159.0474 499.4844 c
159.0474 501.2456 158.6914 502.6001 157.9702 503.5474 c
157.2539 504.4951 156.334 504.9712 155.2158 504.9712 c
154.0601 504.9712 153.1123 504.4395 152.3682 503.3857 c
151.6196 502.3271 151.2495 500.959 151.2495 499.2813 c
151.2495 497.5015 151.6055 496.1519 152.3174 495.2324 c
153.0337 494.3125 153.9629 493.8501 155.1094 493.8501 c
f
*U
0 D
166.8911 492.186 m
164.4507 492.186 L
164.4507 512.0386 L
166.8911 512.0386 L
166.8911 492.186 L
f
*u
183.1016 498.7544 m
172.3315 498.7544 L
172.4331 497.1641 172.8862 495.9482 173.6953 495.1118 c
174.5044 494.2705 175.5117 493.8501 176.7227 493.8501 c
177.6519 493.8501 178.4331 494.0996 179.0664 494.5894 c
179.6948 495.0796 180.1802 495.8237 180.5132 496.8174 C
183.0181 496.5078 L
182.6118 495.0059 181.8672 493.855 180.7856 493.0552 c
179.6997 492.2505 178.3452 491.8486 176.7227 491.8486 c
174.5645 491.8486 172.877 492.5093 171.6611 493.8315 c
170.4502 495.1538 169.8403 496.9609 169.8403 499.2534 c
169.8403 501.5229 170.4321 503.3579 171.6104 504.7676 c
172.7891 506.1729 174.4443 506.8799 176.584 506.8799 c
177.6333 506.8799 178.6411 506.6489 179.6118 506.1865 c
180.582 505.729 181.4053 504.9434 182.0845 503.8389 c
182.7593 502.7339 183.1016 501.0376 183.1016 498.7544 C
183.1016 498.7544 L
f
1 D
180.5962 500.7603 m
180.4946 502.2212 180.0415 503.2744 179.2329 503.9219 c
178.4238 504.5645 177.541 504.8877 176.584 504.8877 c
175.4375 504.8877 174.4946 504.5044 173.7554 503.7368 c
173.0156 502.9697 172.5859 501.9756 172.4702 500.7603 C
180.5962 500.7603 L
f
*U
0 D
199.3486 492.2139 m
198.6274 492.0703 198.0171 491.9966 197.5225 491.9966 c
196.4546 491.9966 195.6782 492.186 195.1929 492.5605 c
194.7031 492.9351 194.4072 493.4111 194.2964 493.9888 c
194.1899 494.5664 194.1348 495.3662 194.1348 496.397 c
194.1348 504.6709 L
192.3643 504.6709 L
192.3643 506.5518 L
194.1348 506.5518 L
194.1348 510.1294 L
196.5752 511.604 L
196.5752 506.5518 L
199.0112 506.5518 L
199.0112 504.6709 L
196.5752 504.6709 L
196.5752 496.2627 l
196.5752 495.5415 196.6489 495.0288 196.7969 494.7236 c
196.9448 494.4229 197.3237 494.2705 197.9292 494.2705 c
198.2808 494.2705 198.6411 494.3076 199.0112 494.3813 C
199.3486 492.2139 L
f
*u
213.936 498.7544 m
203.1665 498.7544 L
203.2681 497.1641 203.7207 495.9482 204.5298 495.1118 c
205.3389 494.2705 206.3462 493.8501 207.5576 493.8501 c
208.4863 493.8501 209.2676 494.0996 209.9009 494.5894 c
210.5293 495.0796 211.0151 495.8237 211.3477 496.8174 C
213.853 496.5078 L
213.4463 495.0059 212.7017 493.855 211.6206 493.0552 c
210.5342 492.2505 209.1797 491.8486 207.5576 491.8486 c
205.3989 491.8486 203.7119 492.5093 202.4961 493.8315 c
201.2852 495.1538 200.6753 496.9609 200.6753 499.2534 c
200.6753 501.5229 201.2666 503.3579 202.4453 504.7676 c
203.624 506.1729 205.2788 506.8799 207.4189 506.8799 c
208.4683 506.8799 209.4756 506.6489 210.4463 506.1865 c
211.417 505.729 212.2397 504.9434 212.9194 503.8389 c
213.5938 502.7339 213.936 501.0376 213.936 498.7544 C
213.936 498.7544 L
f
1 D
211.4307 500.7603 m
211.3291 502.2212 210.876 503.2744 210.0674 503.9219 c
209.2583 504.5645 208.3755 504.8877 207.4189 504.8877 c
206.2725 504.8877 205.3296 504.5044 204.5898 503.7368 c
203.8506 502.9697 203.4209 501.9756 203.3052 500.7603 C
211.4307 500.7603 L
f
*U
0 D
228.6948 492.186 m
225.6904 492.186 L
221.9512 497.8716 L
218.1748 492.186 L
215.2075 492.186 L
220.4766 499.6738 L
215.6279 506.5518 L
218.646 506.5518 L
220.6152 503.5845 221.6875 501.9248 221.8682 501.583 C
225.3901 506.5518 L
228.3022 506.5518 L
223.333 499.8081 L
228.6948 492.186 L
f
236.3447 492.2139 m
235.6235 492.0703 235.0132 491.9966 234.5186 491.9966 c
233.4507 491.9966 232.6743 492.186 232.189 492.5605 c
231.6992 492.9351 231.4033 493.4111 231.2925 493.9888 c
231.186 494.5664 231.1309 495.3662 231.1309 496.397 c
231.1309 504.6709 L
229.3604 504.6709 L
229.3604 506.5518 L
231.1309 506.5518 L
231.1309 510.1294 L
233.5713 511.604 L
233.5713 506.5518 L
236.0073 506.5518 L
236.0073 504.6709 L
233.5713 504.6709 L
233.5713 496.2627 l
233.5713 495.5415 233.645 495.0288 233.793 494.7236 c
233.9409 494.4229 234.3198 494.2705 234.9253 494.2705 c
235.2769 494.2705 235.6372 494.3076 236.0073 494.3813 C
236.3447 492.2139 L
f
257.8882 492.186 m
255.4385 492.186 L
255.4385 501.2593 l
255.4385 502.4336 255.1846 503.3115 254.6807 503.8989 c
254.1768 504.4858 253.4238 504.7813 252.4204 504.7813 c
251.4268 504.7813 250.5391 504.4346 249.7583 503.7417 c
248.9771 503.0527 248.5884 501.8188 248.5884 500.0391 c
248.5884 492.186 L
246.1484 492.186 L
246.1484 512.0386 L
248.5884 512.0386 L
248.5884 504.9155 L
249.7441 506.2236 251.186 506.8799 252.9194 506.8799 c
253.8486 506.8799 254.7407 506.6904 255.5869 506.3115 c
256.437 505.9326 257.0337 505.3501 257.3755 504.5645 c
257.7173 503.7788 257.8882 502.6831 257.8882 501.2871 c
257.8882 492.186 L
f
*u
274.062 498.7544 m
263.292 498.7544 L
263.3936 497.1641 263.8467 495.9482 264.6558 495.1118 c
265.4648 494.2705 266.4722 493.8501 267.6831 493.8501 c
268.6123 493.8501 269.3936 494.0996 270.0264 494.5894 c
270.6553 495.0796 271.1406 495.8237 271.4736 496.8174 C
273.9785 496.5078 L
273.5718 495.0059 272.8276 493.855 271.7461 493.0552 c
270.6597 492.2505 269.3057 491.8486 267.6831 491.8486 c
265.5249 491.8486 263.8374 492.5093 262.6216 493.8315 c
261.4106 495.1538 260.8008 496.9609 260.8008 499.2534 c
260.8008 501.5229 261.3921 503.3579 262.5708 504.7676 c
263.7495 506.1729 265.4043 506.8799 267.5444 506.8799 c
268.5938 506.8799 269.6016 506.6489 270.5718 506.1865 c
271.5425 505.729 272.3652 504.9434 273.0449 503.8389 c
273.7197 502.7339 274.062 501.0376 274.062 498.7544 C
274.062 498.7544 L
f
1 D
271.5566 500.7603 m
271.4546 502.2212 271.002 503.2744 270.1929 503.9219 c
269.3838 504.5645 268.5015 504.8877 267.5444 504.8877 c
266.3979 504.8877 265.4551 504.5044 264.7158 503.7368 c
263.9761 502.9697 263.5464 501.9756 263.4307 500.7603 C
271.5566 500.7603 L
f
*U
0 D
284.7437 506.1079 m
283.9072 503.8569 L
283.3018 504.2134 282.71 504.3887 282.1323 504.3887 c
281.2168 504.3887 280.5283 503.9775 280.0566 503.1636 c
279.5903 502.3457 279.3545 501.1992 279.3545 499.7295 c
279.3545 492.186 L
276.9185 492.186 L
276.9185 506.5518 L
279.1372 506.5518 L
279.1372 504.3887 L
279.1924 504.3887 L
279.9692 506.0479 280.9858 506.8799 282.2388 506.8799 c
283.0708 506.8799 283.9072 506.6211 284.7437 506.1079 C
f
*u
298.7217 498.7544 m
287.9517 498.7544 L
288.0532 497.1641 288.5063 495.9482 289.3154 495.1118 c
290.1245 494.2705 291.1318 493.8501 292.3428 493.8501 c
293.272 493.8501 294.0532 494.0996 294.6865 494.5894 c
295.3149 495.0796 295.8003 495.8237 296.1333 496.8174 C
298.6387 496.5078 L
298.2314 495.0059 297.4873 493.855 296.4058 493.0552 c
295.3193 492.2505 293.9653 491.8486 292.3428 491.8486 c
290.1846 491.8486 288.4971 492.5093 287.2813 493.8315 c
286.0703 495.1538 285.4604 496.9609 285.4604 499.2534 c
285.4604 501.5229 286.0518 503.3579 287.2305 504.7676 c
288.4092 506.1729 290.064 506.8799 292.2041 506.8799 c
293.2534 506.8799 294.2612 506.6489 295.2314 506.1865 c
296.2021 505.729 297.0254 504.9434 297.7051 503.8389 c
298.3789 502.7339 298.7217 501.0376 298.7217 498.7544 C
298.7217 498.7544 L
f
1 D
296.2163 500.7603 m
296.1143 502.2212 295.6616 503.2744 294.8525 503.9219 c
294.0439 504.5645 293.1611 504.8877 292.2041 504.8877 c
291.0576 504.8877 290.1147 504.5044 289.3755 503.7368 c
288.6357 502.9697 288.2061 501.9756 288.0903 500.7603 C
296.2163 500.7603 L
f
*U
0 D
94.2622 476.6294 m
94.2158 476.957 94.083 477.2036 93.8638 477.3672 c
93.644 477.5308 93.3379 477.6118 92.9468 477.6118 c
92.5596 477.6118 92.2461 477.5464 92.0068 477.415 c
91.7681 477.2827 91.6489 477.0918 91.6489 476.8398 c
91.6489 476.6025 91.7451 476.4331 91.9336 476.3311 c
92.1245 476.229 92.5 476.1055 93.0605 475.9595 c
93.6919 475.7974 94.1641 475.6533 94.48 475.5298 c
94.7939 475.4067 95.0381 475.2314 95.2119 475.0083 c
95.3872 474.7847 95.4756 474.4727 95.4756 474.0737 c
95.4756 473.5405 95.2559 473.0898 94.8208 472.7261 c
94.3833 472.3599 93.8003 472.1787 93.0723 472.1787 c
92.3115 472.1787 91.7183 472.3389 91.2905 472.6602 c
90.8647 472.9819 90.6011 473.4653 90.5049 474.1089 C
91.5142 474.2607 L
91.5659 473.8428 91.7222 473.5308 91.98 473.3228 c
92.2363 473.1167 92.5962 473.0127 93.0605 473.0127 c
93.5034 473.0127 93.8442 473.1074 94.0811 473.292 c
94.3179 473.479 94.4375 473.7061 94.4375 473.9717 c
94.4375 474.1528 94.3818 474.2974 94.2739 474.4072 c
94.1641 474.5171 94.0273 474.5977 93.8638 474.6519 c
93.6997 474.7075 93.332 474.8037 92.7603 474.9424 c
91.9106 475.1465 91.3506 475.3931 91.0767 475.6821 c
90.8032 475.9712 90.6685 476.3179 90.6685 476.7202 c
90.6685 477.2207 90.8667 477.6328 91.2656 477.9565 c
91.6641 478.2803 92.1997 478.4419 92.874 478.4419 c
93.5879 478.4419 94.145 478.3013 94.5415 478.02 c
94.938 477.7412 95.1753 477.3228 95.2539 476.7666 C
94.2622 476.6294 L
f
*u
101.8906 472.3193 m
100.8237 472.3193 L
100.7256 472.5083 100.6558 472.7544 100.6157 473.0591 C
99.9341 472.4717 99.1982 472.1787 98.4087 472.1787 c
97.7769 472.1787 97.2783 472.3369 96.9141 472.6523 c
96.5483 472.9688 96.3672 473.3862 96.3672 473.9048 c
96.3672 474.4014 96.5425 474.8096 96.8931 475.1309 c
97.2456 475.4531 97.856 475.6665 98.7246 475.7725 c
99.6719 475.9131 l
100.0264 475.9712 100.3174 476.04 100.5464 476.123 C
100.5464 476.4272 100.5386 476.6431 100.5195 476.7686 c
100.5 476.8936 100.4443 477.0244 100.3516 477.1611 c
100.2593 477.2959 100.1133 477.4058 99.9087 477.4888 c
99.7065 477.5713 99.4331 477.6118 99.0923 477.6118 c
98.6548 477.6118 98.3101 477.5308 98.0562 477.3691 c
97.8022 477.2075 97.6284 476.9072 97.5342 476.4658 C
96.5405 476.5967 L
96.6504 477.209 96.9297 477.6694 97.3818 477.9775 c
97.8325 478.2876 98.4551 478.4419 99.2441 478.4419 c
99.9629 478.4419 100.4907 478.3359 100.8257 478.1221 c
101.1626 477.9102 101.3706 477.6543 101.4478 477.3516 c
101.5249 477.0513 101.5635 476.6646 101.5635 476.1904 c
101.5635 474.8252 l
101.5635 473.9932 101.5786 473.4365 101.6113 473.1514 c
101.6421 472.8682 101.7368 472.5908 101.8906 472.3193 C
101.8906 472.3193 L
f
1 D
100.5464 474.9541 m
100.5464 475.3218 L
100.0166 475.1445 99.3677 475.0039 98.6011 474.8999 c
97.8325 474.7979 97.4492 474.4727 97.4492 473.9277 c
97.4492 473.6523 97.5537 473.4268 97.7598 473.248 c
97.9678 473.0684 98.2642 472.98 98.6514 472.98 c
99.1519 472.98 99.5928 473.1284 99.9741 473.4287 c
100.356 473.7275 100.5464 474.2358 100.5464 474.9541 c
f
*U
0 D
111.2388 472.3193 m
110.2241 472.3193 L
110.2241 476.1001 l
110.2241 476.377 110.2046 476.6162 110.168 476.8145 c
110.1299 477.0112 110.0332 477.186 109.8774 477.3384 c
109.7212 477.4902 109.4771 477.5674 109.1455 477.5674 c
108.7471 477.5674 108.4038 477.4268 108.1133 477.1499 c
107.8242 476.8706 107.6802 476.4199 107.6802 475.7954 c
107.6802 472.3193 L
106.6631 472.3193 L
106.6631 476.2119 l
106.6631 476.7314 106.5723 477.0879 106.3896 477.2788 c
106.2065 477.4712 105.9487 477.5674 105.6133 477.5674 c
105.1782 477.5674 104.8198 477.415 104.5386 477.1147 c
104.2593 476.8145 104.1187 476.252 104.1187 475.4277 c
104.1187 472.3193 L
103.104 472.3193 L
103.104 478.3052 L
104.0166 478.3052 L
104.0166 477.4712 L
104.04 477.4712 L
104.4463 478.1182 105.0415 478.4419 105.8291 478.4419 c
106.2681 478.4419 106.6304 478.3535 106.915 478.1782 c
107.1982 478.0044 107.4043 477.7412 107.5317 477.3921 C
107.9766 478.0913 108.5908 478.4419 109.3765 478.4419 c
109.9985 478.4419 110.4629 478.2744 110.7749 477.939 c
111.085 477.604 111.2388 477.1016 111.2388 476.4331 c
111.2388 472.3193 L
f
*u
113.71 477.5327 m
114.0913 478.1377 114.6611 478.4419 115.4199 478.4419 c
116.2056 478.4419 116.8281 478.1567 117.2822 477.5869 c
117.7368 477.0166 117.9639 476.2754 117.9639 475.3604 c
117.9639 474.3857 117.7139 473.6118 117.209 473.0396 c
116.7046 472.4658 116.0864 472.1787 115.3525 472.1787 c
114.7095 472.1787 114.1929 472.4351 113.8062 472.9453 C
113.7793 472.9453 L
113.7793 470.0181 L
112.7622 470.0181 L
112.7622 478.3052 L
113.6885 478.3052 L
113.6885 477.5327 L
113.71 477.5327 L
113.71 477.5327 L
f
1 D
115.2852 473.0127 m
115.7588 473.0127 116.1519 473.209 116.4619 473.604 c
116.772 473.9971 116.9258 474.582 116.9258 475.3604 c
116.9258 476.0942 116.7778 476.6582 116.4775 477.0532 c
116.1787 477.4482 115.7954 477.6465 115.3296 477.6465 c
114.8477 477.6465 114.4536 477.4248 114.1431 476.9858 c
113.8311 476.5449 113.6768 475.9746 113.6768 475.2759 c
113.6768 474.5342 113.8257 473.9717 114.1221 473.5884 c
114.4204 473.2051 114.8076 473.0127 115.2852 473.0127 c
f
*U
0 D
120.1943 472.3193 m
119.1772 472.3193 L
119.1772 480.5913 L
120.1943 480.5913 L
120.1943 472.3193 L
f
*u
126.9487 475.0562 m
122.4614 475.0562 L
122.5034 474.3936 122.6924 473.8872 123.0293 473.5386 c
123.3662 473.188 123.7861 473.0127 124.2905 473.0127 c
124.6777 473.0127 125.0034 473.1167 125.2671 473.3208 c
125.5293 473.5249 125.7314 473.835 125.8701 474.2495 C
126.9141 474.1201 L
126.7446 473.4941 126.4341 473.0146 125.9834 472.6816 c
125.5313 472.3462 124.9668 472.1787 124.2905 472.1787 c
123.3911 472.1787 122.6885 472.4546 122.1821 473.0049 c
121.6772 473.5557 121.4233 474.3086 121.4233 475.2642 c
121.4233 476.2095 121.6694 476.9746 122.1606 477.562 c
122.6519 478.147 123.3413 478.4419 124.2334 478.4419 c
124.6704 478.4419 125.0903 478.3457 125.4946 478.1533 c
125.8989 477.9624 126.2417 477.6348 126.5249 477.1748 c
126.8062 476.7144 126.9487 476.0078 126.9487 475.0562 C
126.9487 475.0562 L
f
1 D
125.9048 475.8921 m
125.8623 476.5005 125.6738 476.9395 125.3369 477.209 c
124.9995 477.4771 124.6318 477.6118 124.2334 477.6118 c
123.7554 477.6118 123.3628 477.4517 123.0542 477.1323 c
122.7461 476.8125 122.5674 476.3984 122.519 475.8921 C
125.9048 475.8921 L
f
*U
0 D
133.7183 472.3311 m
133.4175 472.271 133.1636 472.2402 132.9575 472.2402 c
132.5127 472.2402 132.189 472.3193 131.9868 472.4751 c
131.7827 472.6313 131.6592 472.8296 131.6133 473.0708 c
131.5688 473.3115 131.5459 473.6445 131.5459 474.0737 c
131.5459 477.5215 L
130.8081 477.5215 L
130.8081 478.3052 L
131.5459 478.3052 L
131.5459 479.7959 L
132.5625 480.4102 L
132.5625 478.3052 L
133.5776 478.3052 L
133.5776 477.5215 L
132.5625 477.5215 L
132.5625 474.0181 l
132.5625 473.7178 132.5933 473.5039 132.6548 473.377 c
132.7168 473.2515 132.8745 473.188 133.127 473.188 c
133.2729 473.188 133.4233 473.2036 133.5776 473.2344 C
133.7183 472.3311 L
f
*u
139.7964 475.0562 m
135.3091 475.0562 L
135.3511 474.3936 135.54 473.8872 135.877 473.5386 c
136.2139 473.188 136.6338 473.0127 137.1387 473.0127 c
137.5259 473.0127 137.8511 473.1167 138.1152 473.3208 c
138.377 473.5249 138.5791 473.835 138.7178 474.2495 C
139.7617 474.1201 L
139.5923 473.4941 139.2822 473.0146 138.8311 472.6816 c
138.3789 472.3462 137.8145 472.1787 137.1387 472.1787 c
136.2388 472.1787 135.5361 472.4546 135.0298 473.0049 c
134.5254 473.5557 134.271 474.3086 134.271 475.2642 c
134.271 476.2095 134.5171 476.9746 135.0083 477.562 c
135.4995 478.147 136.189 478.4419 137.0811 478.4419 c
137.5181 478.4419 137.938 478.3457 138.3423 478.1533 c
138.7466 477.9624 139.0894 477.6348 139.3726 477.1748 c
139.6538 476.7144 139.7964 476.0078 139.7964 475.0562 C
139.7964 475.0562 L
f
1 D
138.7524 475.8921 m
138.71 476.5005 138.5215 476.9395 138.1846 477.209 c
137.8472 477.4771 137.4795 477.6118 137.0811 477.6118 c
136.6035 477.6118 136.2104 477.4517 135.9019 477.1323 c
135.5938 476.8125 135.415 476.3984 135.3667 475.8921 C
138.7524 475.8921 L
f
*U
0 D
145.9458 472.3193 m
144.6938 472.3193 L
143.1357 474.6885 L
141.562 472.3193 L
140.3262 472.3193 L
142.5215 475.4395 L
140.501 478.3052 L
141.7588 478.3052 L
142.5791 477.0684 143.0259 476.377 143.1011 476.2349 C
144.5684 478.3052 L
145.7817 478.3052 L
143.7119 475.4956 L
145.9458 472.3193 L
f
149.1328 472.3311 m
148.8325 472.271 148.5781 472.2402 148.3721 472.2402 c
147.9272 472.2402 147.6035 472.3193 147.4014 472.4751 c
147.1973 472.6313 147.0742 472.8296 147.0278 473.0708 c
146.9834 473.3115 146.9604 473.6445 146.9604 474.0737 c
146.9604 477.5215 L
146.2227 477.5215 L
146.2227 478.3052 L
146.9604 478.3052 L
146.9604 479.7959 L
147.9775 480.4102 L
147.9775 478.3052 L
148.9922 478.3052 L
148.9922 477.5215 L
147.9775 477.5215 L
147.9775 474.0181 l
147.9775 473.7178 148.0083 473.5039 148.0698 473.377 c
148.1313 473.2515 148.2896 473.188 148.5415 473.188 c
148.688 473.188 148.8384 473.2036 148.9922 473.2344 C
149.1328 472.3311 L
f
158.1099 472.3193 m
157.0889 472.3193 L
157.0889 476.1001 l
157.0889 476.5894 156.9829 476.9551 156.7729 477.1997 c
156.563 477.4443 156.249 477.5674 155.8311 477.5674 c
155.417 477.5674 155.0474 477.4233 154.7222 477.1343 c
154.3965 476.8472 154.2349 476.333 154.2349 475.5913 c
154.2349 472.3193 L
153.2178 472.3193 L
153.2178 480.5913 L
154.2349 480.5913 L
154.2349 477.623 L
154.7163 478.1685 155.3169 478.4419 156.0391 478.4419 c
156.4263 478.4419 156.7979 478.3628 157.1504 478.2051 c
157.5049 478.0469 157.7534 477.8047 157.8955 477.4771 c
158.0381 477.1499 158.1099 476.6934 158.1099 476.1118 c
158.1099 472.3193 L
f
*u
164.8481 475.0562 m
160.3608 475.0562 L
160.4033 474.3936 160.5918 473.8872 160.9292 473.5386 c
161.2661 473.188 161.686 473.0127 162.1904 473.0127 c
162.5776 473.0127 162.9033 473.1167 163.167 473.3208 c
163.4287 473.5249 163.6309 473.835 163.77 474.2495 C
164.8135 474.1201 L
164.644 473.4941 164.334 473.0146 163.8833 472.6816 c
163.4307 472.3462 162.8667 472.1787 162.1904 472.1787 c
161.291 472.1787 160.5884 472.4546 160.082 473.0049 c
159.5771 473.5557 159.3232 474.3086 159.3232 475.2642 c
159.3232 476.2095 159.5693 476.9746 160.0605 477.562 c
160.5518 478.147 161.2412 478.4419 162.1328 478.4419 c
162.5698 478.4419 162.9897 478.3457 163.3945 478.1533 c
163.7988 477.9624 164.1416 477.6348 164.4248 477.1748 c
164.7061 476.7144 164.8481 476.0078 164.8481 475.0562 C
164.8481 475.0562 L
f
1 D
163.8047 475.8921 m
163.7622 476.5005 163.5737 476.9395 163.2363 477.209 c
162.8994 477.4771 162.5313 477.6118 162.1328 477.6118 c
161.6553 477.6118 161.2622 477.4517 160.9541 477.1323 c
160.646 476.8125 160.4668 476.3984 160.4189 475.8921 C
163.8047 475.8921 L
f
*U
0 D
169.2988 478.1201 m
168.9507 477.1821 L
168.6982 477.3306 168.4517 477.4038 168.2109 477.4038 c
167.8296 477.4038 167.5425 477.2324 167.3462 476.8936 c
167.1519 476.5527 167.0532 476.0752 167.0532 475.4624 c
167.0532 472.3193 L
166.0386 472.3193 L
166.0386 478.3052 L
166.9629 478.3052 L
166.9629 477.4038 L
166.9863 477.4038 L
167.3096 478.0952 167.7334 478.4419 168.2554 478.4419 c
168.6021 478.4419 168.9507 478.334 169.2988 478.1201 C
f
*u
175.123 475.0562 m
170.6357 475.0562 L
170.6782 474.3936 170.8667 473.8872 171.2036 473.5386 c
171.541 473.188 171.9609 473.0127 172.4653 473.0127 c
172.8525 473.0127 173.1777 473.1167 173.4419 473.3208 c
173.7036 473.5249 173.9058 473.835 174.0449 474.2495 C
175.0884 474.1201 L
174.9189 473.4941 174.6089 473.0146 174.1582 472.6816 c
173.7056 472.3462 173.1411 472.1787 172.4653 472.1787 c
171.5659 472.1787 170.8633 472.4546 170.3564 473.0049 c
169.8521 473.5557 169.5977 474.3086 169.5977 475.2642 c
169.5977 476.2095 169.8438 476.9746 170.3354 477.562 c
170.8267 478.147 171.5161 478.4419 172.4077 478.4419 c
172.8447 478.4419 173.2646 478.3457 173.6689 478.1533 c
174.0732 477.9624 174.4165 477.6348 174.6997 477.1748 c
174.9805 476.7144 175.123 476.0078 175.123 475.0562 C
175.123 475.0562 L
f
1 D
174.0791 475.8921 m
174.0366 476.5005 173.8481 476.9395 173.5112 477.209 c
173.1743 477.4771 172.8062 477.6118 172.4077 477.6118 c
171.9302 477.6118 171.5371 477.4517 171.229 477.1323 c
170.9204 476.8125 170.7417 476.3984 170.6934 475.8921 C
174.0791 475.8921 L
f
*U
0 D
177.769 472.3193 m
177.769 471.8418 177.6768 471.4756 177.4961 471.2256 c
177.313 470.9731 177.0874 470.7939 176.8198 470.688 C
176.5444 471.1177 L
176.9663 471.2988 177.1782 471.6992 177.1816 472.3193 C
176.6118 472.3193 L
176.6118 473.4766 L
177.769 473.4766 L
177.769 472.3193 l
f
186.1084 476.6294 m
186.062 476.957 185.9292 477.2036 185.71 477.3672 c
185.4902 477.5308 185.1841 477.6118 184.793 477.6118 c
184.4058 477.6118 184.0923 477.5464 183.853 477.415 c
183.6143 477.2827 183.4951 477.0918 183.4951 476.8398 c
183.4951 476.6025 183.5913 476.4331 183.7798 476.3311 c
183.9707 476.229 184.3462 476.1055 184.9067 475.9595 c
185.5381 475.7974 186.0103 475.6533 186.3262 475.5298 c
186.6401 475.4067 186.8843 475.2314 187.0581 475.0083 c
187.2334 474.7847 187.3218 474.4727 187.3218 474.0737 c
187.3218 473.5405 187.1021 473.0898 186.667 472.7261 c
186.2295 472.3599 185.6465 472.1787 184.9185 472.1787 c
184.1577 472.1787 183.5645 472.3389 183.1367 472.6602 c
182.7109 472.9819 182.4473 473.4653 182.3511 474.1089 C
183.3604 474.2607 L
183.4121 473.8428 183.5684 473.5308 183.8262 473.3228 c
184.0825 473.1167 184.4424 473.0127 184.9067 473.0127 c
185.3496 473.0127 185.6904 473.1074 185.9277 473.292 c
186.1641 473.479 186.2837 473.7061 186.2837 473.9717 c
186.2837 474.1528 186.228 474.2974 186.1201 474.4072 c
186.0103 474.5171 185.8735 474.5977 185.71 474.6519 c
185.5459 474.7075 185.1782 474.8037 184.6064 474.9424 c
183.7568 475.1465 183.1968 475.3931 182.9229 475.6821 c
182.6494 475.9712 182.5146 476.3179 182.5146 476.7202 c
182.5146 477.2207 182.7129 477.6328 183.1118 477.9565 c
183.5103 478.2803 184.0459 478.4419 184.7202 478.4419 c
185.4341 478.4419 185.9912 478.3013 186.3877 478.02 c
186.7842 477.7412 187.0215 477.3228 187.1001 476.7666 C
186.1084 476.6294 L
f
*u
193.7368 472.3193 m
192.6699 472.3193 L
192.5718 472.5083 192.502 472.7544 192.4619 473.0591 C
191.7803 472.4717 191.0444 472.1787 190.2549 472.1787 c
189.623 472.1787 189.1245 472.3369 188.7603 472.6523 c
188.3945 472.9688 188.2134 473.3862 188.2134 473.9048 c
188.2134 474.4014 188.3887 474.8096 188.7393 475.1309 c
189.0918 475.4531 189.7021 475.6665 190.5708 475.7725 c
191.5181 475.9131 l
191.8726 475.9712 192.1636 476.04 192.3926 476.123 C
192.3926 476.4272 192.3848 476.6431 192.3657 476.7686 c
192.3462 476.8936 192.2905 477.0244 192.1982 477.1611 c
192.1055 477.2959 191.9595 477.4058 191.7549 477.4888 c
191.5527 477.5713 191.2793 477.6118 190.9385 477.6118 c
190.501 477.6118 190.1563 477.5308 189.9023 477.3691 c
189.6484 477.2075 189.4746 476.9072 189.3804 476.4658 C
188.3867 476.5967 L
188.4966 477.209 188.7759 477.6694 189.228 477.9775 c
189.6787 478.2876 190.3013 478.4419 191.0908 478.4419 c
191.8091 478.4419 192.3369 478.3359 192.6719 478.1221 c
193.0088 477.9102 193.2168 477.6543 193.2939 477.3516 c
193.3711 477.0513 193.4097 476.6646 193.4097 476.1904 c
193.4097 474.8252 l
193.4097 473.9932 193.4248 473.4365 193.4575 473.1514 c
193.4883 472.8682 193.583 472.5908 193.7368 472.3193 C
193.7368 472.3193 L
f
1 D
192.3926 474.9541 m
192.3926 475.3218 L
191.8628 475.1445 191.2139 475.0039 190.4473 474.8999 c
189.6787 474.7979 189.2959 474.4727 189.2959 473.9277 c
189.2959 473.6523 189.3999 473.4268 189.606 473.248 c
189.814 473.0684 190.1104 472.98 190.4976 472.98 c
190.998 472.98 191.439 473.1284 191.8203 473.4287 c
192.2021 473.7275 192.3926 474.2358 192.3926 474.9541 c
f
*U
0 D
203.085 472.3193 m
202.0703 472.3193 L
202.0703 476.1001 l
202.0703 476.377 202.0508 476.6162 202.0142 476.8145 c
201.9761 477.0112 201.8794 477.186 201.7236 477.3384 c
201.5674 477.4902 201.3232 477.5674 200.9917 477.5674 c
200.5933 477.5674 200.25 477.4268 199.9595 477.1499 c
199.6704 476.8706 199.5264 476.4199 199.5264 475.7954 c
199.5264 472.3193 L
198.5093 472.3193 L
198.5093 476.2119 l
198.5093 476.7314 198.4189 477.0879 198.2358 477.2788 c
198.0527 477.4712 197.7949 477.5674 197.4595 477.5674 c
197.0244 477.5674 196.666 477.415 196.3848 477.1147 c
196.1055 476.8145 195.9648 476.252 195.9648 475.4277 c
195.9648 472.3193 L
194.9502 472.3193 L
194.9502 478.3052 L
195.8628 478.3052 L
195.8628 477.4712 L
195.8862 477.4712 L
196.2925 478.1182 196.8877 478.4419 197.6753 478.4419 c
198.1143 478.4419 198.4766 478.3535 198.7612 478.1782 c
199.0444 478.0044 199.2505 477.7412 199.3779 477.3921 C
199.8228 478.0913 200.437 478.4419 201.2227 478.4419 c
201.8447 478.4419 202.3091 478.2744 202.6211 477.939 c
202.9312 477.604 203.085 477.1016 203.085 476.4331 c
203.085 472.3193 L
f
*u
205.5562 477.5327 m
205.9375 478.1377 206.5073 478.4419 207.2661 478.4419 c
208.0518 478.4419 208.6743 478.1567 209.1284 477.5869 c
209.583 477.0166 209.8101 476.2754 209.8101 475.3604 c
209.8101 474.3857 209.5601 473.6118 209.0552 473.0396 c
208.5508 472.4658 207.9326 472.1787 207.1987 472.1787 c
206.5557 472.1787 206.0391 472.4351 205.6523 472.9453 C
205.6255 472.9453 L
205.6255 470.0181 L
204.6084 470.0181 L
204.6084 478.3052 L
205.5347 478.3052 L
205.5347 477.5327 L
205.5562 477.5327 L
205.5562 477.5327 L
f
1 D
207.1313 473.0127 m
207.605 473.0127 207.998 473.209 208.3081 473.604 c
208.6182 473.9971 208.772 474.582 208.772 475.3604 c
208.772 476.0942 208.624 476.6582 208.3237 477.0532 c
208.0249 477.4482 207.6416 477.6465 207.1758 477.6465 c
206.6943 477.6465 206.2998 477.4248 205.9893 476.9858 c
205.6772 476.5449 205.5229 475.9746 205.5229 475.2759 c
205.5229 474.5342 205.6719 473.9717 205.9683 473.5884 c
206.2666 473.2051 206.6538 473.0127 207.1313 473.0127 c
f
*U
0 D
212.0405 472.3193 m
211.0234 472.3193 L
211.0234 480.5913 L
212.0405 480.5913 L
212.0405 472.3193 L
f
*u
218.7949 475.0562 m
214.3076 475.0562 L
214.3496 474.3936 214.5386 473.8872 214.8755 473.5386 c
215.2124 473.188 215.6323 473.0127 216.1367 473.0127 c
216.5239 473.0127 216.8496 473.1167 217.1133 473.3208 c
217.3755 473.5249 217.5776 473.835 217.7163 474.2495 C
218.7603 474.1201 L
218.5908 473.4941 218.2803 473.0146 217.8296 472.6816 c
217.3774 472.3462 216.813 472.1787 216.1367 472.1787 c
215.2373 472.1787 214.5347 472.4546 214.0283 473.0049 c
213.5239 473.5557 213.2695 474.3086 213.2695 475.2642 c
213.2695 476.2095 213.5156 476.9746 214.0068 477.562 c
214.498 478.147 215.1875 478.4419 216.0796 478.4419 c
216.5166 478.4419 216.9365 478.3457 217.3408 478.1533 c
217.7451 477.9624 218.0879 477.6348 218.3711 477.1748 c
218.6523 476.7144 218.7949 476.0078 218.7949 475.0562 C
218.7949 475.0562 L
f
1 D
217.751 475.8921 m
217.7085 476.5005 217.52 476.9395 217.1831 477.209 c
216.8457 477.4771 216.478 477.6118 216.0796 477.6118 c
215.6016 477.6118 215.209 477.4517 214.9004 477.1323 c
214.5923 476.8125 214.4136 476.3984 214.3652 475.8921 C
217.751 475.8921 L
f
*U
0 D
225.5645 472.3311 m
225.2637 472.271 225.0098 472.2402 224.8037 472.2402 c
224.3589 472.2402 224.0352 472.3193 223.833 472.4751 c
223.6289 472.6313 223.5054 472.8296 223.4595 473.0708 c
223.415 473.3115 223.3921 473.6445 223.3921 474.0737 c
223.3921 477.5215 L
222.6543 477.5215 L
222.6543 478.3052 L
223.3921 478.3052 L
223.3921 479.7959 L
224.4087 480.4102 L
224.4087 478.3052 L
225.4238 478.3052 L
225.4238 477.5215 L
224.4087 477.5215 L
224.4087 474.0181 l
224.4087 473.7178 224.4395 473.5039 224.501 473.377 c
224.563 473.2515 224.7207 473.188 224.9731 473.188 c
225.1191 473.188 225.2695 473.2036 225.4238 473.2344 C
225.5645 472.3311 L
f
*u
231.6426 475.0562 m
227.1553 475.0562 L
227.1973 474.3936 227.3862 473.8872 227.7231 473.5386 c
228.0601 473.188 228.48 473.0127 228.9849 473.0127 c
229.3721 473.0127 229.6973 473.1167 229.9614 473.3208 c
230.2231 473.5249 230.4253 473.835 230.564 474.2495 C
231.6079 474.1201 L
231.4385 473.4941 231.1284 473.0146 230.6777 472.6816 c
230.2251 472.3462 229.6606 472.1787 228.9849 472.1787 c
228.085 472.1787 227.3823 472.4546 226.876 473.0049 c
226.3716 473.5557 226.1172 474.3086 226.1172 475.2642 c
226.1172 476.2095 226.3633 476.9746 226.8545 477.562 c
227.3462 478.147 228.0352 478.4419 228.9272 478.4419 c
229.3643 478.4419 229.7842 478.3457 230.1885 478.1533 c
230.5928 477.9624 230.9355 477.6348 231.2188 477.1748 c
231.5 476.7144 231.6426 476.0078 231.6426 475.0562 C
231.6426 475.0562 L
f
1 D
230.5986 475.8921 m
230.5562 476.5005 230.3677 476.9395 230.0308 477.209 c
229.6934 477.4771 229.3257 477.6118 228.9272 477.6118 c
228.4497 477.6118 228.0566 477.4517 227.748 477.1323 c
227.4399 476.8125 227.2612 476.3984 227.2129 475.8921 C
230.5986 475.8921 L
f
*U
0 D
237.792 472.3193 m
236.54 472.3193 L
234.9819 474.6885 L
233.4082 472.3193 L
232.1724 472.3193 L
234.3677 475.4395 L
232.3472 478.3052 L
233.605 478.3052 L
234.4253 477.0684 234.8721 476.377 234.9473 476.2349 C
236.415 478.3052 L
237.6279 478.3052 L
235.5581 475.4956 L
237.792 472.3193 L
f
240.979 472.3311 m
240.6787 472.271 240.4243 472.2402 240.2183 472.2402 c
239.7734 472.2402 239.4497 472.3193 239.2476 472.4751 c
239.0439 472.6313 238.9204 472.8296 238.874 473.0708 c
238.8296 473.3115 238.8066 473.6445 238.8066 474.0737 c
238.8066 477.5215 L
238.0693 477.5215 L
238.0693 478.3052 L
238.8066 478.3052 L
238.8066 479.7959 L
239.8232 480.4102 L
239.8232 478.3052 L
240.8384 478.3052 L
240.8384 477.5215 L
239.8232 477.5215 L
239.8232 474.0181 l
239.8232 473.7178 239.8545 473.5039 239.916 473.377 c
239.9775 473.2515 240.1357 473.188 240.3877 473.188 c
240.5342 473.188 240.6846 473.2036 240.8384 473.2344 C
240.979 472.3311 L
f
249.9561 472.3193 m
248.9351 472.3193 L
248.9351 476.1001 l
248.9351 476.5894 248.8291 476.9551 248.6191 477.1997 c
248.4092 477.4443 248.0952 477.5674 247.6772 477.5674 c
247.2632 477.5674 246.8936 477.4233 246.5684 477.1343 c
246.2427 476.8472 246.0811 476.333 246.0811 475.5913 c
246.0811 472.3193 L
245.064 472.3193 L
245.064 480.5913 L
246.0811 480.5913 L
246.0811 477.623 L
246.5625 478.1685 247.1631 478.4419 247.8857 478.4419 c
248.2725 478.4419 248.6445 478.3628 248.9966 478.2051 c
249.3511 478.0469 249.5996 477.8047 249.7417 477.4771 c
249.8843 477.1499 249.9561 476.6934 249.9561 476.1118 c
249.9561 472.3193 L
f
*u
256.6943 475.0562 m
252.207 475.0562 L
252.2495 474.3936 252.438 473.8872 252.7754 473.5386 c
253.1123 473.188 253.5322 473.0127 254.0366 473.0127 c
254.4238 473.0127 254.7495 473.1167 255.0132 473.3208 c
255.2749 473.5249 255.4775 473.835 255.6162 474.2495 C
256.6597 474.1201 L
256.4902 473.4941 256.1802 473.0146 255.7295 472.6816 c
255.2773 472.3462 254.7129 472.1787 254.0366 472.1787 c
253.1372 472.1787 252.4346 472.4546 251.9282 473.0049 c
251.4233 473.5557 251.1689 474.3086 251.1689 475.2642 c
251.1689 476.2095 251.4155 476.9746 251.9067 477.562 c
252.3979 478.147 253.0874 478.4419 253.979 478.4419 c
254.4165 478.4419 254.8359 478.3457 255.2407 478.1533 c
255.645 477.9624 255.9878 477.6348 256.271 477.1748 c
256.5522 476.7144 256.6943 476.0078 256.6943 475.0562 C
256.6943 475.0562 L
f
1 D
255.6509 475.8921 m
255.6084 476.5005 255.4199 476.9395 255.0825 477.209 c
254.7456 477.4771 254.3779 477.6118 253.979 477.6118 c
253.5015 477.6118 253.1084 477.4517 252.8003 477.1323 c
252.4922 476.8125 252.313 476.3984 252.2651 475.8921 C
255.6509 475.8921 L
f
*U
0 D
261.145 478.1201 m
260.7969 477.1821 L
260.5444 477.3306 260.2979 477.4038 260.0571 477.4038 c
259.6758 477.4038 259.3887 477.2324 259.1924 476.8936 c
258.998 476.5527 258.8994 476.0752 258.8994 475.4624 c
258.8994 472.3193 L
257.8848 472.3193 L
257.8848 478.3052 L
258.8091 478.3052 L
258.8091 477.4038 L
258.8325 477.4038 L
259.1558 478.0952 259.5796 478.4419 260.1016 478.4419 c
260.4482 478.4419 260.7969 478.334 261.145 478.1201 C
f
*u
266.9692 475.0562 m
262.4819 475.0562 L
262.5244 474.3936 262.7129 473.8872 263.0498 473.5386 c
263.3872 473.188 263.8066 473.0127 264.3115 473.0127 c
264.6987 473.0127 265.0239 473.1167 265.2881 473.3208 c
265.5498 473.5249 265.752 473.835 265.8911 474.2495 C
266.9346 474.1201 L
266.7651 473.4941 266.4551 473.0146 266.0044 472.6816 c
265.5518 472.3462 264.9873 472.1787 264.3115 472.1787 c
263.4121 472.1787 262.7095 472.4546 262.2026 473.0049 c
261.6982 473.5557 261.4438 474.3086 261.4438 475.2642 c
261.4438 476.2095 261.6904 476.9746 262.1816 477.562 c
262.6729 478.147 263.3623 478.4419 264.2539 478.4419 c
264.6909 478.4419 265.1108 478.3457 265.5151 478.1533 c
265.9194 477.9624 266.2627 477.6348 266.5459 477.1748 c
266.8271 476.7144 266.9692 476.0078 266.9692 475.0562 C
266.9692 475.0562 L
f
1 D
265.9253 475.8921 m
265.8828 476.5005 265.6943 476.9395 265.3574 477.209 c
265.0205 477.4771 264.6523 477.6118 264.2539 477.6118 c
263.7764 477.6118 263.3833 477.4517 263.0752 477.1323 c
262.7666 476.8125 262.5879 476.3984 262.54 475.8921 C
265.9253 475.8921 L
f
*U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
