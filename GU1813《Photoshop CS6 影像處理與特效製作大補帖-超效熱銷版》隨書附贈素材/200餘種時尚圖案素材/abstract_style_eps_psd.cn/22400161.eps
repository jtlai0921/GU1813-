%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 12.0.0
%%For: (misha) (home)
%%Title: (050.eps)
%%CreationDate: 12/21/2008 11:33 PM
%%BoundingBox: 0 0 596 596
%%HiResBoundingBox: 0 0 595.2754 595.2754
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKCustomColor: 1 1 1 1 ([\721\756\742\754\745\771\745\755\750\745])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 297 297 297 297
%AI3_TileBox: -0.600098 -123.96 594.5999 717.96
%AI3_DocumentPreview: Header
%AI5_ArtSize: 595 595
%AI5_RulerUnits: 2
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -329.5 703.5 1 1270 830 26 0 0 4 96 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\312\340\353\353\350\343\360\340\364\350\367\345\361\352\340\377 \352\350\361\362\374") (\310\355\361\362\360\363\354\345\355\362 \312\340\353\350\343\360\340\364 \352\350\361\362\374.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (\317\356\361\362\360\356\367\355\373\351 \352\356\354\357\356\355\356\342\371\350\352 Adobe) (\310\355\361\362\360\363\354\345\355\362 \312\350\361\362\374 \360\340\361\361\345\350\342\340\355\350\377.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (\317\356\361\362\360\356\367\355\373\351 \352\356\354\357\356\355\356\342\371\350\352 Adobe) (\310\355\361\362\360\363\354\345\355\362 \312\350\361\362\374 \360\340\361\361\345\350\342\340\355\350\377.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\301\356\360\344\376\360\355\340\377 \352\350\361\362\374") (\310\355\361\362\360\363\354\345\355\362 \325\363\344\356\346 \352\350\361\362\374.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\301\356\360\344\376\360\355\340\377 \352\350\361\362\374") (\310\355\361\362\360\363\354\345\355\362 \325\363\344\356\346 \352\350\361\362\374.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\325\363\344\356\346\345\361\362\342\345\355\355\340\377 \352\350\361\362\374") (\310\355\361\362\360\363\354\345\355\362 \325\363\344\356\346 \352\350\361\362\374.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\325\363\344\356\346\345\361\362\342\345\355\355\340\377 \352\350\361\362\374") (\310\355\361\362\360\363\354\345\355\362 \325\363\344\356\346 \352\350\361\362\374.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\317\345\360\345\365\356\344") (\306\350\342\373\345 \355\340\353\356\346\345\355\350\377.aip)
%AI8_PluginGroupInfo
(Adobe Tracing Object) (\322\360\340\361\361\350\360\356\342\352\340) (\317\340\352\345\362 \362\360\340\361\361\350\360\356\342\356\352.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe Envelope) (\316\341\356\353\356\367\352\340 \350 \344\345\364\356\360\354\340\366\350\377.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (\321\356\361\362\340\342\355\373\345 \364\350\343\363\360\373 Adobe) (\316\341\360\340\341\356\362\352\340 \352\356\355\362\363\360\356\342S.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\301\373\361\362\360\340\377 \347\340\353\350\342\352\340") (\306\350\342\373\345 \352\360\340\361\352\350.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (\310\355\361\362\360\363\354\345\355\362\340\360\350\351 Adobe \357\356 \360\340\341\356\362\345 \361 \361\350\354\342\356\353\340\354\350) (\321\350\361\362\345\354\340 \367\340\361\362\350\366.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (\301\353\350\352.aip)
%AI5_End_NonPrinting--
8 Bn
%AI5_BeginGradient: (GradientFill 1)
(GradientFill 1) 1 2 Bd
[
<
BDBCBBBBBAB9B8B8B7B6B5B5B4B3B3B2B1B0B0AFAEAEADACABABAAA9A8A8A7A6A6A5A4A3A3A2A1A1
A09F9E9E9D9C9B9B9A99999897969695949493929191908F8E8E8D8C8C8B8A898988878786858484
83828281807F7F7E7D7C7C7B7A7A797877777675757473727271706F6F6E6D6D6C6B6A6A69686867
666565646362626160605F5E5D5D5C5B5B5A59585857565555545353525150504F4E4E4D4C4B4B4A
49484847464645444343424141403F3E3E3D3C3B3B3A39393837363635343433323131302F2E2E2D
2C2C2B2A29292827272625242423222121201F1F
>
<
A6A5A4A4A3A2A2A1A0A09F9E9E9D9C9C9B9A9A9998989796969594949393929191908F8F8E8D8D8C
8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A79797877777675757473737271
71706F6F6E6D6D6C6B6B6A6969686767666565646363626161605F5F5E5D5D5C5B5B5A5959585757
565555545353525151504F4F4E4D4D4C4B4B4A494948484746464544444342424140403F3E3E3D3C
3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626252424232222
2120201F1E1E1D1C1C1B1A1A1918181716161514
>
<
B0AFAFAEADADACABAAAAA9A8A8A7A6A6A5A4A4A3A2A2A1A09F9F9E9D9D9C9B9B9A99999897979695
94949392929190908F8E8E8D8C8C8B8A8989888787868585848383828181807F7E7E7D7C7C7B7A7A
79787877767675747373727171706F6F6E6D6D6C6B6B6A6969686766666564646362626160605F5E
5E5D5C5B5B5A5959585757565555545353525150504F4E4E4D4C4C4B4A4A49484847464545444343
424141403F3F3E3D3D3C3B3A3A39383837363635343433323231302F2F2E2D2D2C2B2B2A29292827
27262524242322222120201F1E1E1D1C1C1B1A1A
>
<
DBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4
B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C
8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564
636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C
3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514
131211100F0E0D0C0B0A09080706050403020100
>
1 %_Br
[
0.74 0.65 0.69 0.86 1 50 0 %_BS
%_0.74 0.65 0.69 0.86 1 50 0 Bs
0.12 0.08 0.1 0 1 50 100 %_BS
%_0.12 0.08 0.1 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 2)
(GradientFill 2) 1 2 Bd
[
<
1F1F20212122232424252627272829292A2B2C2C2D2E2E2F30313132333434353636373839393A3B
3B3C3D3E3E3F40414142434344454646474848494A4B4B4C4D4E4E4F505051525353545555565758
58595A5B5B5C5D5D5E5F60606162626364656566676868696A6A6B6C6D6D6E6F6F70717272737475
7576777778797A7A7B7C7C7D7E7F7F80818282838484858687878889898A8B8C8C8D8E8E8F909191
92939494959696979899999A9B9B9C9D9E9E9FA0A1A1A2A3A3A4A5A6A6A7A8A8A9AAABABACADAEAE
AFB0B0B1B2B3B3B4B5B5B6B7B8B8B9BABBBBBCBD
>
<
14151616171818191A1A1B1C1C1D1E1E1F2020212222232424252626272828292A2A2B2C2C2D2E2E
2F3030313232333434353636373838393A3A3B3C3C3D3E3E3F404041424243444445464647484849
494A4B4B4C4D4D4E4F4F5051515253535455555657575859595A5B5B5C5D5D5E5F5F606161626363
6465656667676869696A6B6B6C6D6D6E6F6F7071717273737475757677777879797A7B7B7C7D7D7E
7F7F8081818283838485858687878889898A8B8B8C8D8D8E8F8F9091919293939494959696979898
999A9A9B9C9C9D9E9E9FA0A0A1A2A2A3A4A4A5A6
>
<
1A1A1B1C1C1D1E1E1F2020212222232424252627272829292A2B2B2C2D2D2E2F2F30313232333434
353636373838393A3A3B3C3D3D3E3F3F40414142434344454546474848494A4A4B4C4C4D4E4E4F50
50515253535455555657575859595A5B5B5C5D5E5E5F6060616262636464656666676869696A6B6B
6C6D6D6E6F6F70717172737374757676777878797A7A7B7C7C7D7E7E7F8081818283838485858687
878889898A8B8C8C8D8E8E8F9090919292939494959697979899999A9B9B9C9D9D9E9F9FA0A1A2A2
A3A4A4A5A6A6A7A8A8A9AAAAABACADADAEAFAFB0
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADB
>
1 %_Br
[
0.12 0.08 0.1 0 1 50 0 %_BS
%_0.12 0.08 0.1 0 1 50 0 Bs
0.74 0.65 0.69 0.86 1 50 100 %_BS
%_0.74 0.65 0.69 0.86 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 3)
(GradientFill 3) 1 2 Bd
[
<
BDBDBCBCBCBCBCBCBCBBBBBBBBBBBBBBBABABABABABABAB9B9B9B9B9B9B9B8B8B8B8B8B8B8B7B7B7
B7B7B7B7B7B6B6B6B6B6B6B6B5B5B5B5B5B5B5B4B4B4B4B4B4B4B3B3B3B3B3B3B3B2B2B2B2B2B2B2
B1B1B1B1B1B1B1B0B0B0B0B0B0B0AFAFAFAFAFAFAFAEAEAEAEAEAEAEADADADADADADADACACACACAC
ACACACABABABABABABABAAAAAAAAAAAAAAA9A9A9A9A9A9A9A8A8A8A8A8A8A8A7A7A7A7A7A7A7A6A6
A6A6A6A6A6A5A5A5A5A5A5A5A4A4A4A4A4A4A4A3A3A3
>
<
A6A5A5A5A4A4A4A3A3A3A3A2A2A2A1A1A1A0A0A09F9F9F9E9E9E9D9D9D9C9C9C9B9B9B9A9A9A9999
99989898979797979696969595959494949393939292929191919090908F8F8F8E8E8E8D8D8D8C8C
8C8C8B8B8B8A8A8A898989888888878787868686858585848484838383828282818181808080807F
7F7F7E7E7E7D7D7D7C7C7C7B7B7B7A7A7A7979797878787777777676767575757474747473737372
72727171717070706F6F6F6E6E6E6D6D6D6C6C6C6B6B
>
<
B0B0AFAFAFAFAFAEAEAEAEADADADADACACACACABABABABAAAAAAAAA9A9A9A9A9A8A8A8A8A7A7A7A7
A6A6A6A6A5A5A5A5A4A4A4A4A3A3A3A3A3A2A2A2A2A1A1A1A1A0A0A0A09F9F9F9F9E9E9E9E9E9D9D
9D9D9C9C9C9C9B9B9B9B9A9A9A9A9999999998989898989797979796969696959595959494949493
939393929292929291919191909090908F8F8F8F8E8E8E8E8D8D8D8D8D8C8C8C8C8B8B8B8B8A8A8A
8A898989898888888887878787878686868685858585
>
<
DBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4
B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C
8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564
636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C
3B3A393837363534333231302F2E2D2C2B2A29282726
>
1 %_Br
[
0.74 0.65 0.69 0.86 1 50 0 %_BS
%_0.74 0.65 0.69 0.86 1 50 0 Bs
0.64 0.42 0.52 0.15 1 50 100 %_BS
%_0.64 0.42 0.52 0.15 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 4)
(GradientFill 4) 0 2 Bd
[
<
1F1F20212122232424252627272829292A2B2C2C2D2E2E2F30313132333434353636373839393A3B
3B3C3D3E3E3F40414142434344454646474848494A4B4B4C4D4E4E4F505051525353545555565758
58595A5B5B5C5D5D5E5F60606162626364656566676868696A6A6B6C6D6D6E6F6F70717272737475
7576777778797A7A7B7C7C7D7E7F7F80818282838484858687878889898A8B8C8C8D8E8E8F909191
92939494959696979899999A9B9B9C9D9E9E9FA0A1A1A2A3A3A4A5A6A6A7A8A8A9AAABABACADAEAE
AFB0B0B1B2B3B3B4B5B5B6B7B8B8B9BABBBBBCBD
>
<
14151616171818191A1A1B1C1C1D1E1E1F2020212222232424252626272828292A2A2B2C2C2D2E2E
2F3030313232333434353636373838393A3A3B3C3C3D3E3E3F404041424243444445464647484849
494A4B4B4C4D4D4E4F4F5051515253535455555657575859595A5B5B5C5D5D5E5F5F606161626363
6465656667676869696A6B6B6C6D6D6E6F6F7071717273737475757677777879797A7B7B7C7D7D7E
7F7F8081818283838485858687878889898A8B8B8C8D8D8E8F8F9091919293939494959696979898
999A9A9B9C9C9D9E9E9FA0A0A1A2A2A3A4A4A5A6
>
<
1A1A1B1C1C1D1E1E1F2020212222232424252627272829292A2B2B2C2D2D2E2F2F30313232333434
353636373838393A3A3B3C3D3D3E3F3F40414142434344454546474848494A4A4B4C4C4D4E4E4F50
50515253535455555657575859595A5B5B5C5D5E5E5F6060616262636464656666676869696A6B6B
6C6D6D6E6F6F70717172737374757676777878797A7A7B7C7C7D7E7E7F8081818283838485858687
878889898A8B8C8C8D8E8E8F9090919292939494959697979899999A9B9B9C9D9D9E9F9FA0A1A2A2
A3A4A4A5A6A6A7A8A8A9AAAAABACADADAEAFAFB0
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADB
>
1 %_Br
[
0.74 0.65 0.69 0.86 1 50 100 %_BS
%_0.74 0.65 0.69 0.86 1 50 100 Bs
0.12 0.08 0.1 0 1 50 0 %_BS
%_0.12 0.08 0.1 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 5)
(GradientFill 5) 0 2 Bd
[
<
5E5F606162636465666768696A6B6C6D6E6F6F707172737475767778797A7B7C7D7E7F8081828384
8485868788898A8B8C8D8E8F90919293949596979898999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AA
ABACACADAEAFB0B1B2B3B4B5
>
<
05060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C
2D2E2F3031323435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455
565758595A5B5C5D5E5F6061
>
<
EDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0
F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4
F4F4F4F4F4F4F4F4F5F5F5F5
>
<
00000000010101010101010202020202020203030303030303040404040404040405050505050505
060606060606060707070707070708080808080808090909090909090A0A0A0A0A0A0A0B0B0B0B0B
0B0B0B0C0C0C0C0C0C0C0D0D
>
1 %_Br
[
0.71 0.38 0.96 0.05 1 50 100 %_BS
%_0.71 0.38 0.96 0.05 1 50 100 Bs
0.37 0.02 0.93 0 1 50 0 %_BS
%_0.37 0.02 0.93 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 6)
(GradientFill 6) 1 2 Bd
[
<
3334353536373839393A3B3C3D3D3E3F404141424344454546474849494A4B4C4D4D4E4F50515152
5354555556575859595A5B5C5D5D5E5F606161626364656566676869696A6B6C6D6D6E6F70717172
7374757576777879797A7B7C7D7D7E7F808181828384858586878889898A8B8C8D8D8E8F90919192
9394959596979899999A9B9C9D9D9E9FA0A1A1A2A3A4A5A5A6A7A8A9A9AAABACADADAEAFB0B1B1B2
B3B4B5B5B6B7B8B9B9BABBBCBDBDBEBFC0C1C1C2C3C4C5C5C6C7C8C9C9CACBCCCDCDCECFD0D1D1D2
D3D4D5D5D6D7D8D9D9DADBDCDDDDDEDFE0E1E1E2E3E4E5E5E6E7E8E9E9EAEBECEDEDEEEFF0F1F1F2
F3F4F5F5F6F7F8F9F9FAFBFCFDFDFEFF
>
<
CCCCCCCDCDCDCDCDCECECECECECFCFCFCFCFD0D0D0D0D0D1D1D1D1D1D2D2D2D2D2D3D3D3D3D3D4D4
D4D4D4D5D5D5D5D5D6D6D6D6D6D7D7D7D7D7D8D8D8D8D8D9D9D9D9D9DADADADADADBDBDBDBDBDCDC
DCDCDCDDDDDDDDDDDEDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E3E4E4
E4E4E4E5E5E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECEC
ECECECEDEDEDEDEDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2F2F2F3F3F3F3F3F4F4
F4F4F4F5F5F5F5F5F6F6F6F6F6F7F7F7F7F7F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFCFC
FCFCFCFDFDFDFDFDFEFEFEFEFEFFFFFF
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
3334353536373839393A3B3C3D3D3E3F404141424344454546474849494A4B4C4D4D4E4F50515152
5354555556575859595A5B5C5D5D5E5F606161626364656566676869696A6B6C6D6D6E6F70717172
7374757576777879797A7B7C7D7D7E7F808181828384858586878889898A8B8C8D8D8E8F90919192
9394959596979899999A9B9C9D9D9E9FA0A1A1A2A3A4A5A5A6A7A8A9A9AAABACADADAEAFB0B1B1B2
B3B4B5B5B6B7B8B9B9BABBBCBDBDBEBFC0C1C1C2C3C4C5C5C6C7C8C9C9CACBCCCDCDCECFD0D1D1D2
D3D4D5D5D6D7D8D9D9DADBDCDDDDDEDFE0E1E1E2E3E4E5E5E6E7E8E9E9EAEBECEDEDEEEFF0F1F1F2
F3F4F5F5F6F7F8F9F9FAFBFCFDFDFEFF
>
1 %_Br
[
0.2 0.8 0 0.2 1 50 0 %_BS
%_0.2 0.8 0 0.2 1 50 0 Bs
1 1 1 1 1 50 100 %_BS
%_1 1 1 1 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 7)
(GradientFill 7) 1 2 Bd
[
<
05050505050505050505050505050505050505050504040404040404040404040404040404040404
04040404040404040404040404040404030303030303030303030303030303030303030303030303
03030303030303030303020202020202020202020202020202020202020202020202020202020202
02020202020101010101010101010101010101010101010101010101010101010101010101010100
0000000000000000000000000000000000
>
<
030303040404050506060607070708080909090A0A0A0B0B0C0C0C0D0D0D0E0E0F0F0F1010101111
1212121313141414151515161617171718181819191A1A1A1B1B1B1C1C1D1D1D1E1E1E1F1F202020
2121212222232323242424252526262627272728282929292A2A2A2B2B2C2C2C2D2D2D2E2E2F2F2F
30303131313232323333343434353535363637373738383839393A3A3A3B3B3B3C3C3D3D3D3E3E3E
3F3F404040414141424243434344444445
>
<
12131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343536373839
3A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061
62636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F80818283848586878889
8A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1
B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2
>
0
1 %_Br
[
0.02 0.01 0.07 0 1 50 0 %_BS
%_0.02 0.01 0.07 0 1 50 0 Bs
0 0.27 0.76 0 1 50 100 %_BS
%_0 0.27 0.76 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 8)
(GradientFill 8) 0 2 Bd
[
<
A3A3A3A4A4A4A4A4A4A4A5A5A5A5A5A5A5A6A6A6A6A6A6A6A7A7A7A7A7A7A7A8A8A8A8A8A8A8A9A9
A9A9A9A9A9AAAAAAAAAAAAAAABABABABABABABACACACACACACACACADADADADADADADAEAEAEAEAEAE
AEAFAFAFAFAFAFAFB0B0B0B0B0B0B0B1B1B1B1B1B1B1B2B2B2B2B2B2B2B3B3B3B3B3B3B3B4B4B4B4
B4B4B4B5B5B5B5B5B5B5B6B6B6B6B6B6B6B7B7B7B7B7B7B7B7B8B8B8B8B8B8B8B9B9B9B9B9B9B9BA
BABABABABABABBBBBBBBBBBBBBBCBCBCBCBCBCBCBDBD
>
<
6B6B6C6C6C6D6D6D6E6E6E6F6F6F7070707171717272727373737474747475757576767677777778
78787979797A7A7A7B7B7B7C7C7C7D7D7D7E7E7E7F7F7F8080808081818182828283838384848485
85858686868787878888888989898A8A8A8B8B8B8C8C8C8C8D8D8D8E8E8E8F8F8F90909091919192
9292939393949494959595969696979797979898989999999A9A9A9B9B9B9C9C9C9D9D9D9E9E9E9F
9F9FA0A0A0A1A1A1A2A2A2A3A3A3A3A4A4A4A5A5A5A6
>
<
8585858586868686878787878788888888898989898A8A8A8A8B8B8B8B8C8C8C8C8D8D8D8D8D8E8E
8E8E8F8F8F8F90909090919191919292929292939393939494949495959595969696969797979798
98989898999999999A9A9A9A9B9B9B9B9C9C9C9C9D9D9D9D9E9E9E9E9E9F9F9F9FA0A0A0A0A1A1A1
A1A2A2A2A2A3A3A3A3A3A4A4A4A4A5A5A5A5A6A6A6A6A7A7A7A7A8A8A8A8A9A9A9A9A9AAAAAAAAAB
ABABABACACACACADADADADAEAEAEAEAFAFAFAFAFB0B0
>
<
262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D
4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475
767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D
9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5
C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADB
>
1 %_Br
[
0.74 0.65 0.69 0.86 1 50 100 %_BS
%_0.74 0.65 0.69 0.86 1 50 100 Bs
0.64 0.42 0.52 0.15 1 50 0 %_BS
%_0.64 0.42 0.52 0.15 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([\721\756\742\754\745\771\745\755\750\745]) 0 Xs
([\721\756\742\754\745\771\745\755\750\745])
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 -1 31 26 23 0 100 Lb
(Layer 1) Ln
0 A
0 O
0 J 0 j 1 w 4 M []0 d1 XR
595.2754 0 m
595.2754 595.2754 L
0 595.2754 L
0 0 L
595.2754 0 L
Bb
0 0 0 0 Bh
1 (GradientFill 1) 95.2441 458.3623 -130 678.3267 1 0 0 1 0 0 Bg
-436.02 -519.6284 -519.6284 436.02 95.2441 458.3623 Bm
f
0 BB
*u
0 g
490.1084 162.5234 m
490.1084 162.5234 L
490.1084 162.5234 L
f
311.2344 202.1152 m
310.8828 204.3945 310.4688 206.707 310.082 209.0254 C
315.1064 211.9307 319.6826 215.5762 323.6406 219.8379 C
332.8027 228.4834 339.251 240.1289 341.2949 253.5322 C
347.3877 293.4863 319.9307 331.21 279.8345 336.8867 C
208.3613 342.8579 175.4526 285.085 106.4028 264.2686 C
113.562 266.9336 120.5259 270.1211 127.2178 273.8271 C
149.7939 286.1387 169.3076 304.0298 183.5566 325.3779 C
184.6162 326.6968 185.6504 328.0352 186.6587 329.3931 C
191.3989 333.8862 196.0605 337.855 200.6553 341.3369 C
207.2373 343.9253 214.2671 345.875 216.3691 351.5425 C
217.2065 351.9951 218.0425 352.4321 218.8765 352.8545 C
224.1592 346.4224 236.9009 346.7813 245.2041 338.8223 C
242.1128 344.5938 244.9424 353.9854 244.6816 361.6777 C
256.8071 365.8501 262.9922 377.6284 270.6011 375.6055 C
266.7363 382.3271 260.5137 386.332 252.5391 386.5327 C
253.043 387.6255 253.5508 388.7441 254.0854 389.8716 C
265.3491 390.7554 276.8628 388.2524 286.5068 382.1899 C
298.1504 374.8438 305.6904 361.8257 306.8232 348.252 C
306.0479 362.3926 298.3369 376.1011 286.2334 383.7383 C
276.9014 389.604 265.8345 392.168 254.9194 391.583 C
256.3477 394.4272 258.02 397.2651 260.3003 399.8086 C
244.4102 397.2949 236.3892 410.2651 227.5659 399.2847 C
233.8413 412.4272 215.7085 420.0166 213.8599 430.9531 C
212.3647 425.3496 208 420.937 204.3052 416.5864 C
200.3921 451.4385 181.6104 484.5156 152.9307 504.7915 C
134.5415 517.8984 112.3252 526.7393 89.3457 526.6143 C
88.8076 526.6177 88.269 526.6182 87.73 526.6133 C
65.1118 526.7402 42.6411 518.6782 25.1895 504.4458 C
14.8628 495.9883 6.16406 485.4614 0 473.6235 C
0 595.2754 L
595.2754 595.2754 L
595.2754 0 L
441.0254 0 L
475.7871 21.915 500.0088 59.7725 503.0449 103.873 C
504.5029 125.0576 499.6572 145.2188 490.1064 162.5254 C
474.2676 195.0576 441.9531 218.4521 403.2666 221.1162 C
401.5605 221.2334 399.8633 221.2988 398.1758 221.3135 C
393.4932 221.5635 389.0791 221.0781 384.7871 220.3867 C
384.3154 220.3105 L
375.4482 218.7969 367.0137 216.4443 358.6221 214.1172 C
342.79 209.6631 327.1494 204.9648 311.2344 202.1152 C
Bb
0 0 0 0 Bh
1 (GradientFill 2) 369.0713 226.2051 -130 521.945 1 0 0 1 0 0 Bg
-335.4998 -399.8331 -399.8331 335.4998 369.0713 226.2051 Bm
f
0 BB
*U
*u
0 g
104.4849 109.0059 m
104.3638 108.4326 L
104.4897 108.2197 104.6167 108.0098 104.7437 107.7891 C
104.6465 108.2031 104.562 108.6064 104.4849 109.0059 C
104.4849 109.0059 L
f
0 g
0 537.8984 m
4.70313 543.4341 9.91016 548.5435 15.5229 553.1387 C
36.3291 570.1079 63.1216 579.7207 90.0874 579.5693 C
117.2422 579.8076 143.5049 569.3843 165.2295 553.8989 C
200.4492 528.9995 222.9712 487.687 226.1602 444.7217 C
226.418 445.0752 226.6855 445.4302 226.958 445.7837 C
223.3374 488.3462 200.8496 529.1162 165.9268 553.8076 C
144.5239 569.0601 118.7334 579.4199 92.0146 579.5698 C
119.4126 579.7192 145.9014 569.1782 167.8262 553.5508 C
202.0234 529.375 224.4077 489.9326 229.0713 448.3755 C
233.4775 453.5669 238.6875 458.8301 240.4722 465.5142 C
242.6748 452.4751 264.2954 443.4268 256.813 427.7563 C
267.3325 440.8477 276.895 425.3853 295.8418 428.3813 C
293.123 425.3477 291.1279 421.9634 289.4253 418.5718 C
302.4385 419.2686 315.6348 416.2144 326.7607 409.2207 C
341.1914 400.1152 350.3857 383.771 351.3105 366.9102 C
349.959 383.0947 340.9697 398.6152 327.0879 407.374 C
315.5889 414.603 301.8594 417.584 288.4287 416.5298 C
287.792 415.1865 287.1865 413.8535 286.5869 412.5503 C
296.0938 412.3115 303.5146 407.5391 308.123 399.5239 C
299.0508 401.9365 291.6743 387.8926 277.2168 382.9189 C
277.5278 373.7461 274.1567 362.5493 277.8433 355.6675 C
267.9438 365.1563 252.751 364.729 246.4531 372.396 C
245.4561 371.8911 244.4575 371.3687 243.4556 370.8271 C
240.9468 364.0786 232.5757 361.751 224.7324 358.6675 C
219.25 354.5122 213.686 349.7773 208.0298 344.4155 C
206.8252 342.791 205.5884 341.1924 204.3228 339.6162 C
187.3354 314.1738 164.0776 292.8506 137.1689 278.1738 C
129.1812 273.752 120.8667 269.9473 112.3208 266.7686 C
194.668 291.5801 233.9053 360.481 319.1309 353.3608 C
366.9375 346.5918 399.6748 301.6143 392.4111 253.9785 C
389.9736 237.9902 382.2764 224.1025 371.3467 213.793 C
366.6299 208.7168 361.1797 204.377 355.1943 200.916 C
355.6553 198.1504 356.1475 195.3916 356.5684 192.6729 C
375.5439 196.0703 394.1924 201.6738 413.0693 206.9824 C
423.0742 209.7588 433.1309 212.5635 443.7041 214.3682 C
443.8896 214.4004 444.0781 214.4287 444.2656 214.459 C
449.3838 215.2832 454.6465 215.8613 460.2285 215.5645 C
460.2539 215.5615 L
462.2568 215.5449 464.2734 215.4678 466.2988 215.3281 C
512.4238 212.1523 550.9521 184.2588 569.8379 145.4717 C
569.8398 145.4678 L
581.2227 124.8369 587.002 100.7979 585.2637 75.541 C
583.3467 47.7012 574.3496 21.9492 560.1553 0 C
557.4766 0 L
572.5215 22.2832 582.0801 48.7139 584.0547 77.3789 C
585.502 98.416 581.6787 118.5967 573.7168 136.6328 C
580.2969 119.9375 583.3623 101.5547 582.0469 82.4609 C
579.9189 51.5371 568.8906 23.2373 551.6426 0 C
543.0508 0 L
543.3594 0.385742 543.666 0.772461 543.9707 1.16211 C
577.0889 42.4912 588.6367 104.5918 560.7588 151.5596 C
547.4355 174.8379 526.0234 193.4795 500.8945 203.3867 C
475.8438 213.2119 447.0049 215.2471 421.9854 204.5605 C
397.6982 194.7275 377.8135 174.4033 368.4229 149.7246 C
375.0566 141.3301 375.0449 128.5137 385.4902 122.0488 C
379.6445 121.915 371.7285 114.0254 362.5029 108.8125 C
363.8799 94.7295 368.8418 81.0645 377.7275 69.668 C
379.1709 67.7217 380.7168 65.8496 382.3496 64.0508 C
388.751 57.2432 396.5674 51.7773 405.2158 48.2383 C
419.4111 42.4424 436.0439 41.3896 450.4961 46.8398 C
453.9648 47.9873 457.3115 49.5146 460.4658 51.4434 C
475.9756 60.6621 485.7529 78.71 484.7803 96.8496 C
484.6543 101.0674 483.8418 105.2295 482.4268 109.1797 C
480.7266 114.7236 477.9023 119.9307 474.1621 124.3418 C
471.1055 127.9043 467.4492 130.918 463.4121 133.2744 C
468.502 130.7422 473.1025 127.2148 476.8193 122.8828 C
482.9209 115.6875 486.6143 106.4072 486.9883 96.9561 C
488.1904 78.041 478.1729 58.9795 461.9082 49.0898 C
445.6104 38.9365 424.6143 38.9863 407.2393 46.0791 C
405.167 46.9287 403.1396 47.8887 401.1689 48.9482 C
415.877 40.4756 433.3232 36.6807 450.2002 39.5615 C
476.9434 43.7842 498.9512 67.416 501.9014 94.5518 C
501.9014 94.5449 501.9014 94.5361 501.9004 94.5293 C
498.2783 60.5938 468.4209 35.3311 434.0869 37.6953 C
395.2598 40.3691 364.8496 70.4092 360.3867 107.6807 C
359.9834 107.4805 L
361.7598 89.1377 368.7891 71.332 380.8662 57.207 C
396.2227 39.3076 420.166 29.7773 443.4541 31.2461 C
419.2949 29.0303 394.1377 38.6777 378.1729 57.2842 C
367.4336 69.8467 360.6484 85.293 357.9619 101.4541 C
356.9414 64.585 360.2754 30.2109 332.042 12.6016 C
351.2109 33.0313 335.9258 70.1709 336.0283 108.0938 C
334.4463 109.1484 332.8477 110.4404 331.2393 112.0186 C
347.0771 87.2578 314.5449 76.8701 308.002 54.8369 C
305.3594 73.6523 274.6704 87.5137 286.043 109.7188 C
270.4116 91.3379 257.2954 113.9297 229.9648 110.3828 C
246.978 128.3291 245.6479 155.7891 272.0083 154.2715 C
268.6865 155.3672 266.1377 156.8799 264.1968 158.7207 C
239.2905 162.4766 226.666 177.3389 226.353 196.7031 C
233.5532 189.7852 245.8604 194.8486 260.5464 196.4004 C
261.165 203.0273 261.1475 209.252 258.7241 214.0967 C
264.5908 208.1494 271.8936 204.7266 279.0273 201.8955 C
270.1318 209.5342 264.062 219.5908 261.1772 230.5088 C
257.8433 240.7881 257.2725 251.9434 260.0679 262.4785 C
264.0059 277.2168 275.5142 289.4072 289.6582 294.6768 C
276.2046 289.2227 265.3442 277.4258 261.5571 263.248 C
260.8301 260.5127 260.334 257.7334 260.0562 254.9404 C
261.1968 261.7158 263.5664 268.4014 267.2441 274.6592 C
280.1523 296.6162 308.415 303.9521 330.3711 291.0439 C
346.1914 281.7471 352.5244 262.4814 346.084 245.9121 C
345.374 244.084 344.5078 242.2891 343.4814 240.5439 C
335.2207 226.4912 317.1318 221.7969 303.0811 230.0566 C
292.0986 236.5088 288.2617 250.4697 294.2466 261.5918 C
294.2476 261.5928 294.249 261.5957 294.2515 261.5977 C
289.4805 252.6934 291.2642 240.875 298.5488 233.9951 C
305.9287 226.8506 317.4316 224.749 326.9766 228.042 C
335.5928 230.7891 342.1406 237.8535 345.25 246.1816 C
345.6709 247.3145 346.0303 248.4717 346.3232 249.6465 C
348.957 259.3896 347.1904 270.1582 341.6563 278.4941 C
336.248 286.9873 327.0146 292.3945 317.3105 294.6309 C
307.5625 296.856 297.1245 295.6367 288.1909 291.3135 C
269.8574 282.7939 260.4048 261.4121 261.8804 241.8682 C
262.6323 230.0811 267.4634 218.8262 275.0654 210.0205 C
279.8716 204.6719 285.6782 200.2344 292.0757 196.9307 C
292.772 196.5986 293.4746 196.2813 294.187 195.9805 C
298.582 194.0527 303.1406 192.6387 307.8086 191.6533 C
307.9785 192.0205 308.1611 192.3789 308.3555 192.7275 C
282.0361 197.5996 263.3013 220.4941 263.0503 246.6094 C
263.022 249.5557 263.2285 252.5439 263.686 255.5508 C
267.3691 279.7568 289.98 296.3955 314.1865 292.7109 C
333.1035 289.8311 346.2432 272.5059 344.0947 253.6533 C
344.0938 253.6484 344.0928 253.6455 344.0928 253.6406 C
345.7813 268.7217 336.7021 284.2129 322.7041 289.7451 C
308.4258 295.5947 291.2095 292.1113 279.7324 282.1924 C
269.2461 273.5557 264.0562 260.0488 264.3657 246.7031 C
264.4082 244.8838 264.5532 243.0693 264.7983 241.2695 C
266.5601 226.21 275.0298 212.1777 287.396 203.6367 C
294.0142 198.8779 301.6787 195.9893 309.6563 194.6953 C
318.8125 206.5723 343.8574 205.9297 353.7949 219.3438 C
353.3604 214.2979 353.9258 209.0195 354.7412 203.7314 C
360.0605 206.9883 364.9238 210.9775 369.1182 215.5762 C
389.9385 237.6826 391.1982 272.7764 378.2383 299.2148 C
375.7656 304.4111 372.7227 309.2871 369.2139 313.7822 C
374.3281 306.5571 378.166 298.4165 380.4131 289.8418 C
384.6768 273.6035 383.4688 255.5146 375.9639 240.4551 C
371.9648 232.46 366.041 225.4941 358.9082 220.1074 C
365.2012 225.2959 370.4434 231.7432 374.0928 239.041 C
381.667 254.2402 382.8877 272.4932 378.585 288.8799 C
374.2646 305.3569 364.1348 320.2544 350.3574 330.1851 C
336.6836 340.3647 319.4248 344.8257 302.4287 345.0264 C
298.4873 345.0864 294.5566 344.8643 290.6621 344.3921 C
266.7554 341.3936 243.6162 330.8633 222.9712 317.6211 c
161.4097 278.1348 139.9907 253.6543 74.5571 239.4229 C
182.2754 254.8721 215.0503 346.2876 310.792 341.7583 C
323.4922 341.1582 335.1465 336.5083 345.3945 330.4194 C
335.3828 334.8242 322.1982 338.4063 312.6211 334.4028 C
310.9971 335.3384 310.3594 337.6538 310.2627 339.438 C
302.7998 340.0669 294.6733 339.5122 287.2773 338.5015 C
218.0156 329.7969 182.0234 269.4961 107.1865 245.7422 C
153.1104 258.1396 163.5562 275.7051 209.7632 266.5879 C
172.187 270.5664 123.6846 219.0742 77.9609 238.8525 C
76.0913 238.5547 74.2056 238.2744 72.2876 238.0234 C
80.6968 231.9063 88.2661 225.2139 95.4834 218.3555 C
95.8555 218.0039 96.2256 217.6494 96.5942 217.2969 C
117.417 197.1377 135.5605 175.542 153.6328 154.0811 C
189.5625 111.1123 224.4341 67.7979 264.1973 29.7314 C
275.0239 19.4121 286.313 9.36035 298.085 0 C
282.4966 0 L
197.1504 70.2793 126.5903 180.1367 68.9526 224.2393 C
68.958 224.2314 L
125.7417 180.6768 194.0996 72.0967 276.9858 0 C
270.1382 0 L
201.1147 59.9844 141.7964 143.3936 91.1934 194.3223 C
94.4873 188.4619 97.3379 182.3721 99.6631 176.0898 C
99.6631 176.0908 L
99.7329 175.8975 L
100.0068 175.1523 100.2739 174.4043 100.5332 173.6553 C
103.0161 166.543 105.0396 159.2393 106.5273 151.835 C
109.6245 143.8896 112.938 136.667 116.4585 130.1084 C
122.4888 133.3672 129.5117 136.0518 134.5962 140.4268 C
130.584 127.8291 144.731 111.6162 136.6875 101.5381 C
137.4629 100.7217 138.2441 99.9258 139.0322 99.1455 C
148.5835 98.0303 157.355 86.4209 170.4927 84.3818 C
166.7563 83.7764 163.2202 81.2422 159.7178 78.1816 C
164.8413 69.2227 167.0029 60.1719 173.8696 58.9189 C
162.7642 51.1797 149.1748 52.2617 136.8643 64.8447 C
135.0269 65.1914 133.1255 66.0176 131.1455 67.4531 C
142.7847 53.1299 126.6719 42.6563 123.4551 25.6729 C
114.292 42.6162 96.1206 40.8154 100.1494 57.1924 C
94.7344 46.6016 83.5171 48.6943 73.2051 49.1289 C
60.7241 35.9248 45.3423 25.4395 28.3052 19.4824 C
19.1963 16.3115 9.62695 14.5947 0 14.2813 C
0 14.9434 L
8.31201 15.5605 16.5386 17.2246 24.4224 19.9658 C
41.3115 25.8721 56.5884 36.1855 69.062 49.1768 C
67.4683 49.1309 65.9238 48.9912 64.4512 48.7021 C
52.0444 37.8662 37.1084 29.5313 20.2139 24.7256 C
13.48 22.8115 6.70898 21.6982 0 21.3291 C
0 40.7803 L
4.2417 41.2578 8.43115 42.1172 12.5137 43.3379 C
20.6655 45.7402 28.7529 49.4902 35.9814 54.0283 C
42.8096 58.2861 48.9609 63.4531 54.3364 69.2861 C
52.4912 69.3125 50.7017 69.4209 48.9854 69.5967 C
40.4097 61.4629 30.2695 55.0068 19.1851 51.1318 C
13.0005 48.9785 6.52881 47.7275 0 47.3516 C
0 47.9199 L
5.54785 48.4727 11.0283 49.6572 16.3022 51.4932 C
27.4092 55.376 37.5762 61.8252 46.1899 69.9492 C
39.5493 70.9521 34.395 72.9326 32.2598 74.8857 C
50.8091 74.6689 50.3154 93.7725 68.2236 101.7949 C
68.2256 101.7998 L
67.7212 108.6445 68.6226 115.4932 66.479 118.6143 C
68.7617 117.6699 70.9902 117.4326 73.1807 117.5654 C
75.7246 129.1592 76.0596 141.2256 74.0078 152.8926 C
70.6699 173.7441 59.209 192.6172 44.3003 207.4854 C
39.9272 211.873 35.1851 215.8477 30.1553 219.4092 C
28.6812 220.4277 27.1821 221.4121 25.6631 222.3584 C
17.5791 227.4355 8.93604 231.3965 0 234.2334 C
0 268.7598 L
44.5522 257.7324 93.1094 263.8193 133.1963 286.0146 C
166.1401 303.9805 193.4214 332.2568 209.8901 365.8794 C
210.2476 364.0854 L
193.6689 330.7886 166.5093 302.7964 133.7764 284.9453 C
93.8193 262.8203 44.6978 257.7451 0 268.8379 C
0 282.6533 L
7.90088 282.7607 16.8115 286.3262 23.2222 292.6367 C
20.2075 286.0732 14.3208 282.041 7.88184 280.543 C
17.2793 279.0137 28.6543 282.9854 35.8237 288.8682 C
43.8325 295.4424 55.2632 296.1494 55.4473 283.6016 C
63.4727 305.8755 83.8389 288.3438 104.8706 294.3242 C
108.4009 295.5596 111.7041 297.5415 114.481 300.1953 C
117.355 302.9229 119.6309 306.3057 121.1001 310.0469 C
122.5376 313.8047 123.2524 317.9648 122.8208 321.7349 C
122.0786 329.4727 116.5254 336.7607 108.8872 339.5952 C
107.0005 340.3008 104.9536 340.7847 102.9546 340.9526 C
101.0068 341.126 99.0322 340.9619 97.1265 340.4521 C
93.3081 339.4683 89.792 337.0645 87.4111 333.7725 C
85.043 330.5664 83.7153 326.166 84.0918 322.2905 C
84.4575 318.332 86.6729 314.5034 90.0532 312.1289 C
92.0996 310.6982 94.5898 309.7583 97.0864 309.5479 C
98.6841 309.4146 100.2856 309.5811 101.7749 310.1099 C
105.6636 311.4092 108.7915 314.9956 109.4683 319.2266 C
110.2944 323.3325 107.9761 327.813 103.9663 329.5474 C
101.9746 330.3901 99.7144 330.6558 97.7119 329.9048 C
95.6953 329.1958 93.9634 327.5776 93.1436 325.5259 C
92.2852 323.4702 92.3394 321.0747 93.6123 319.2021 C
94.6367 317.6304 96.4512 316.5317 98.3628 316.3535 C
98.7129 316.3218 99.0654 316.3193 99.418 316.3511 C
101.6899 316.5542 103.7612 318.4482 104.0938 320.8306 C
104.5815 323.1797 102.7124 325.7534 100.1753 325.9688 C
102.6846 325.7769 104.564 323.5894 104.3755 321.0796 C
104.1406 317.939 101.4028 315.5845 98.2622 315.8179 C
94.3369 316.1133 91.3931 319.5337 91.6865 323.46 C
92.0542 328.3672 96.3291 332.0469 101.2383 331.6802 C
107.3726 331.2202 111.9727 325.8755 111.5132 319.7407 C
110.939 312.0728 104.2568 306.3228 96.5898 306.8965 C
87.0039 307.6143 79.8164 315.9668 80.5332 325.5513 C
81.4316 337.5332 91.8711 346.5186 103.8525 345.6196 C
118.8291 344.4985 130.0596 331.4492 128.9375 316.4722 C
128.9077 316.0518 128.8647 315.6328 128.8179 315.2168 C
133.7251 321.8203 141.3213 318.4902 136.231 309.8999 C
142.6182 311.8936 149.1411 335.8691 157.0415 343.6201 C
166.5781 352.9736 176.248 345.1318 165.563 330.6846 C
183.2944 341.4585 176.2578 371.6929 182.2212 390.3408 c
184.7861 398.3589 190.8232 403.9067 196.8887 404.0991 C
194.7109 408.957 193.0449 414.2407 187.8643 417.251 C
190.8984 417.4043 194.6519 420.5879 198.9873 423.7759 C
199.3257 435.7104 203.8765 447.4209 204.2373 460.9316 c
204.5518 472.6909 200.5918 482.9614 192.105 484.8125 C
191.2563 484.9746 190.3965 485.0718 189.5278 485.1079 C
186.5566 485.1611 183.1265 484.3013 179.228 482.3013 C
179.2217 482.2979 L
178.71 481.9707 178.2158 481.6206 177.7393 481.2427 C
175.6782 479.584 173.895 477.458 172.8926 475.1719 C
170.7515 470.5313 171.4946 464.5522 174.8955 460.4141 C
175.7324 459.3882 176.7354 458.4346 177.8154 457.6782 C
178.8638 456.9355 180.041 456.3745 181.291 456.0327 C
183.7861 455.3286 186.5801 455.5303 189.022 456.6108 C
191.4292 457.6484 193.6401 459.708 194.7095 462.0361 C
195.813 464.4048 195.8232 467.3125 194.6865 469.7808 C
193.998 471.2715 192.896 472.6294 191.5464 473.5762 C
190.6826 474.1807 189.7188 474.6157 188.6973 474.8086 C
186.0586 475.3584 183.0928 474.3564 181.3086 472.1772 C
179.4785 470.1172 179.313 466.8042 181.0166 464.4927 C
181.8696 463.355 183.0635 462.4551 184.4517 462.2197 C
185.8325 461.9536 187.3511 462.2988 188.4961 463.1943 C
189.6641 464.0762 190.4268 465.4551 190.3247 466.9414 C
190.2617 468.1738 189.5942 469.3984 188.5679 470.1318 C
188.3799 470.2656 188.1807 470.3843 187.9697 470.4824 C
186.6113 471.1201 184.8076 470.729 183.8291 469.4873 C
182.7754 468.313 182.9849 466.2324 184.354 465.2695 C
182.9937 466.2095 182.6504 468.0747 183.5874 469.4375 C
184.7617 471.1445 187.0942 471.5762 188.8022 470.4023 C
190.9351 468.937 191.4751 466.0181 190.0088 463.8848 C
188.1748 461.2178 184.5264 460.5439 181.8608 462.3779 C
178.5283 464.6689 177.6841 469.2285 179.9751 472.5615 C
182.8413 476.7285 188.541 477.7817 192.707 474.917 C
197.9126 471.3369 199.2324 464.2119 195.6504 459.0044 C
191.1743 452.4946 182.269 450.8481 175.7593 455.3232 C
167.6226 460.9194 165.564 472.0513 171.1587 480.1885 C
172.2388 481.7578 173.4844 483.147 174.8535 484.3472 C
174.8525 484.3472 L
174.8545 484.3472 L
181.8486 490.4741 192.1123 491.6982 200.4355 487.0562 C
204.0693 485.0928 207.3208 482.0327 210.501 478.2803 C
201.5469 505.7324 184.2153 530.5381 160.6304 547.5664 C
141.8833 561.1899 119.7012 570.7495 96.6074 572.3032 C
94.9497 572.3877 93.2881 572.4336 91.623 572.4336 C
65.938 572.835 40.1938 563.9209 20.0664 547.8359 C
12.582 541.8608 5.79883 534.8711 0 527.1406 C
0 527.9941 L
5.68506 535.5137 12.311 542.3174 19.6108 548.147 C
39.5439 564.0742 65.0352 572.9023 90.4688 572.5029 C
92.3867 572.5029 94.2974 572.4424 96.2041 572.3301 C
94.1572 572.46 92.104 572.5283 90.0454 572.5283 C
64.7041 572.9253 39.3052 564.1294 19.4453 548.2607 C
12.2124 542.4858 5.64307 535.75 0 528.3081 C
0 537.8984 L
0 537.8984 L
f
1 D
0 g
0 412.248 m
0 405.313 L
17.0371 387.6533 41.2441 376.0796 66.1553 377.9087 C
93.0562 379.5933 118.1689 396.8896 129.1191 421.3921 C
134.8774 433.4849 136.3569 447.5498 133.4502 460.5898 C
130.4575 473.6411 122.9907 485.5278 112.6572 493.9668 C
102.2676 502.1753 88.9946 507.4351 75.5635 506.1719 C
62.2539 505.1489 49.5215 498.2646 41.5249 487.6147 C
33.3555 477.2056 29.8564 462.7642 34.3257 450.0503 C
38.481 437.4424 49.6235 427.3057 62.7295 424.9858 C
75.4644 422.751 89.0342 429.6958 94.6362 441.2324 C
95.8237 443.2788 96.6997 445.5293 97.1982 447.917 C
95.1353 444.2593 92.394 441.0352 89.1504 438.4102 C
89.9302 437.9316 90.7827 437.5435 91.7217 437.272 C
85.1919 428.5249 73.6382 423.7534 62.8599 425.7617 C
50.1079 428.1431 39.3315 438.1606 35.4399 450.4175 C
31.2446 462.7935 34.751 476.6313 42.7651 486.6548 C
50.5957 496.8794 62.9424 503.3662 75.7148 504.2188 C
88.5767 505.3066 101.2349 500.1396 111.1729 492.1426 C
121.0181 483.9429 128.0444 472.4805 130.7773 459.9922 C
133.4131 447.4976 131.8936 434.2139 126.2822 422.7129 C
115.5527 399.334 91.4102 383.1514 65.8984 381.811 C
40.6821 380.166 16.0898 393.2344 0 412.248 C
0 412.248 L
f
0 g
0 404.7764 m
0 403.3193 L
17.2852 385.2114 41.9854 373.3071 67.4087 375.1738 C
94.6738 376.8818 120.1279 394.4116 131.2271 419.2471 C
137.063 431.5034 138.5635 445.7593 135.6162 458.9746 C
132.5835 472.2041 125.0161 484.2529 114.5405 492.8057 C
112.3555 494.5317 110.0439 496.1274 107.6328 497.564 C
109.5493 496.355 111.3984 495.0479 113.1621 493.6548 C
123.5342 485.1855 131.0278 473.2549 134.0322 460.1548 C
136.9482 447.0684 135.4634 432.9541 129.6855 420.8154 C
118.6953 396.2251 93.4902 378.8662 66.4917 377.1748 C
41.4429 375.3359 17.104 386.9966 0 404.7764 C
0 404.7764 L
f
0 g
0 175.125 m
0 163.9268 L
9.38721 158.3389 17.0771 149.6299 21.0557 139.0811 C
27.9824 122.7363 22.1733 102.165 7.00146 91.5518 C
4.78955 90.0303 2.44092 88.6943 0 87.6025 C
0 81.165 L
23.5249 89.2725 36.8716 114.4609 29.9839 138.6875 C
25.3101 155.124 14.1128 167.9375 0 175.125 C
0 175.125 L
f
0 g
0 130.9814 m
0 128.1602 L
0.038574 128.0566 0.076172 127.9531 0.113281 127.8486 C
1.97949 123.5156 1.78125 118.5508 0 114.1689 C
0 112.751 L
2.23779 116.9951 2.9082 122.0742 1.49316 127.0527 C
1.10205 128.4268 0.600586 129.7373 0 130.9814 C
0 130.9814 L
f
0 g
522.1289 0 m
525.2109 0 L
530.9121 10.4189 534.7754 21.8594 536.4629 33.6328 C
539.6816 56.0088 535.293 80.0186 522.9473 99.0186 C
516.374 109.1016 507.3799 117.5137 497.0137 123.6279 C
506.2266 117.6504 514.2275 109.8271 520.2285 100.627 C
532.6875 81.4512 537.1152 57.2207 533.8701 34.6406 C
532.1289 22.4941 528.0938 10.7002 522.1289 0 C
522.1289 0 L
f
0 g
530.4189 0 m
534.6406 0 L
537.5938 4.33984 540.2725 8.86719 542.6475 13.5518 C
555.4863 38.8545 559.9453 69.1641 552.9248 96.7236 C
549.1738 111.3564 541.8711 124.9795 532.0137 136.4238 C
540.5557 125.6064 546.915 113.084 550.3398 99.7275 C
557.4268 71.915 552.9258 41.3271 539.9697 15.793 C
537.1836 10.2979 533.9854 5.01855 530.4189 0 C
530.4189 0 L
f
0 g
75.8193 117.8857 m
76.5737 118.0166 77.3271 118.1748 78.0767 118.3496 C
79.1851 125.5518 79.3955 132.8477 78.625 140.0371 C
78.104 145.9385 76.8911 151.9287 75.1069 157.8594 C
75.6064 155.7969 76.0273 153.7139 76.3647 151.6094 C
78.3223 140.4775 78.0879 128.9785 75.8193 117.8857 C
75.8193 117.8857 L
f
0 g
109.4106 125.3633 m
109.6138 125.5459 109.8228 125.7275 110.0347 125.9033 C
109.7769 127.1357 109.5288 128.3857 109.2847 129.6504 C
109.3491 128.2217 109.3906 126.791 109.4106 125.3633 C
109.4106 125.3633 L
f
0 g
102.3696 155.0527 m
102.29 155.5371 102.2085 156.0215 102.124 156.5039 C
99.6997 171.6475 94.0942 186.0146 86.2939 199.1807 C
86.1313 199.3389 85.9648 199.5039 85.8032 199.6641 C
91.5791 189.627 96.2349 178.7334 99.5449 167.0918 C
100.8477 162.5059 101.8535 157.9053 102.5737 153.3125 C
102.5098 153.8926 102.4404 154.4727 102.3696 155.0527 C
102.3696 155.0527 L
f
0 g
107.082 133.8135 m
107.0806 133.4902 107.0767 133.166 107.0737 132.8408 C
107.1509 131.4023 107.2109 129.9629 107.2534 128.5225 C
107.231 130.2861 107.1724 132.0498 107.082 133.8135 C
107.082 133.8135 L
f
0 g
211.1611 359.1587 m
196.5601 331.0894 174.478 306.916 147.9355 289.5605 C
165.1899 300.5205 180.6626 314.2842 193.5762 330.1045 C
200.5161 338.8945 206.5332 348.4048 211.2686 358.4814 C
211.1611 359.1587 L
211.1611 359.1587 L
f
0 g
60.75 255.3906 m
179.3115 260.8252 216.6187 357.4814 316.4639 349.1216 C
363.8145 342.4043 396.2402 297.7661 389.0449 250.4873 C
387.0078 237.0996 381.2598 225.1953 373.0137 215.6543 C
382.6279 225.5449 389.3555 238.3574 391.6035 252.9385 C
398.8506 299.9521 366.1885 344.3369 318.4922 351.0171 C
227.8594 358.5088 189.3354 280.7861 95.3125 261.3457 C
84.0112 258.3193 72.4258 256.3281 60.75 255.3906 C
60.75 255.3906 L
f
0 g
366.4668 151.8662 m
369.1494 158.8027 372.5811 165.3467 376.6543 171.4072 C
372.4688 165.377 368.9639 158.8789 366.252 152.0693 C
366.3252 152.0029 366.3965 151.9346 366.4668 151.8662 C
366.4668 151.8662 L
f
0 g
344.9932 157.6992 m
346.5029 159.3281 348.042 160.9277 349.6123 162.4932 C
347.3408 160.5859 344.4824 158.873 340.9072 157.3906 C
342.3398 157.5391 343.6943 157.6367 344.9932 157.6992 C
344.9932 157.6992 L
f
0 g
352.1533 164.9727 m
363.3213 175.6514 375.9189 184.7891 389.4268 192.4375 C
385.5469 190.3633 381.7275 188.168 377.9756 185.8457 C
370.2256 181.084 362.7041 175.8789 355.5156 170.252 C
354.6973 168.3906 353.5967 166.624 352.1533 164.9727 C
352.1533 164.9727 L
f
0 g
357.3916 177.5166 m
359.0645 178.6875 360.7588 179.834 362.4697 180.9531 C
360.7969 180.1787 359.1396 179.4229 357.499 178.6904 C
357.4707 178.2969 357.4355 177.9063 357.3916 177.5166 C
357.3916 177.5166 L
f
0 g
389.6699 196.1025 m
390.5146 196.3184 L
390.5283 196.3242 L
389.6699 196.1025 L
389.6699 196.1025 L
f
0 g
203.002 492.4707 m
194.1333 510.9297 167.4307 549.4785 127.27 541.8384 C
144.9087 544.7979 161.5435 537.4668 174.6187 519.9111 c
187.0195 503.2598 198.1167 499.3154 203.002 492.4707 C
203.002 492.4707 L
f
0 g
13.7495 281.4219 m
30.4502 283.085 34.4102 291.3535 35.834 298.915 C
24.375 300.1416 25.0908 285.4932 13.7495 281.4219 C
13.7495 281.4219 L
f
0 g
205.5327 488.5015 m
193.2861 515.9111 163.4385 560.0195 118.4336 541.7505 C
129.0347 541.7554 128.5332 517.855 143.1299 508.3809 C
168.7666 491.7368 192.1265 505.0024 205.5327 488.5015 C
205.5327 488.5015 L
f
400.8691 198.6943 m
387.5068 192.959 374.7002 185.9619 362.8652 177.6533 C
365.8965 179.7109 368.9707 181.6982 372.0859 183.6113 C
381.0156 189.1367 390.3291 193.9541 399.9277 198.0791 C
400.2402 198.2871 400.5527 198.4922 400.8691 198.6943 C
Bb
0 0 0 0 Bh
1 (GradientFill 3) 122.9697 446.2686 -130 642.7692 1 0 0 1 0 0 Bg
-413.1641 -492.3897 -492.3897 413.1641 122.9697 446.2686 Bm
f
0 BB
*U
0 D
301.8613 317.6465 m
293.2661 322.7529 283.4917 326.6523 272.8394 327.1558 C
184.7646 331.3223 160.2339 238.6689 46.6035 239.4727 C
46.8208 239.1689 47.0273 238.8711 47.2275 238.5752 C
151.3662 238.1865 180.333 315.2778 253.1167 324.4238 C
259.3203 325.272 266.1362 325.7378 272.3955 325.21 C
272.4761 323.7134 273.0117 321.771 274.3726 320.9873 C
282.4067 324.3442 293.4644 321.3403 301.8613 317.6465 C
Bb
1 (GradientFill 4) 249.9673 265.6553 -191 155.2769 1 0 0 1 0 0 Bg
-152.424 29.6283 25.8623 133.05 237.1323 199.624 Xm
-8038.042 1562.4387 25.8623 133.05 8275.1748 -1362.8145 Bc
-152.424 29.6283 25.8623 133.05 237.1323 199.624 Bm
-8038.042 1562.4387 25.8623 133.05 84.7085 229.252 Bc
f
0 BB
*u
0 g
203.7456 372.4409 m
200.8745 360.5107 196.1313 348.9663 190.0957 338.2803 C
188.8359 336.0337 187.5063 333.833 186.1113 331.6763 C
193.1963 343.2334 198.3008 355.9175 200.4814 369.3213 C
200.6318 370.165 200.77 371.0098 200.8989 371.8569 C
200.0425 371.7007 199.1836 371.5566 198.3208 371.4365 C
198.1504 370.2349 197.9604 369.0361 197.7476 367.8413 C
194.5381 348.1104 185.0503 329.9277 172.2407 314.5635 C
172.8281 313.502 L
173.0156 313.688 L
189.4414 329.9844 202.2461 350.5054 206.7256 373.2178 C
205.7378 372.9341 204.7446 372.6724 203.7456 372.4409 C
203.7456 372.4409 L
f
181.8545 325.1997 m
185.7842 330.2046 189.3433 335.5088 192.4717 341.0874 C
193.521 342.9448 194.5288 344.8291 195.4966 346.7363 C
191.4297 338.3862 186.3145 330.5112 180.4512 323.2397 C
180.9253 323.8887 181.3931 324.5425 181.8545 325.1997 C
Bb
1 (GradientFill 5) 205.0176 367.6509 -126 57.5672 1 0 0 1 0 0 Bg
-33.8371 -46.5728 -17.1361 12.4501 214.3525 360.8687 Xm
-4765.7769 -6559.5298 -17.1361 12.4501 4980.1299 6920.3984 Bc
-33.8371 -46.5728 -17.1361 12.4501 214.3525 360.8687 Bm
-4765.7769 -6559.5298 -17.1361 12.4501 180.5156 314.2959 Bc
f
0 BB
*U
309.2822 209.8525 m
325.8574 218.041 338.3018 233.8994 341.2949 253.5322 C
347.3877 293.4863 319.9307 331.21 279.8345 336.8867 C
190.1484 344.3794 161.1855 251.5029 45.3408 257.2207 C
45.5493 256.9023 45.7471 256.5898 45.939 256.2793 C
161.0151 250.9844 189.9727 342.3037 279.2979 334.9214 C
319.3018 329.3193 346.6963 292.0918 340.6172 252.6611 C
337.667 233.5225 325.5176 218.0176 309.2822 209.8525 C
Bb
1 (GradientFill 4) 283.7979 273.1289 -191 176.9777 1 0 0 1 0 0 Bg
-173.7261 33.769 24.7735 127.4487 271.6001 210.3779 Xm
-8090.8516 1572.7039 24.7735 127.4487 8362.4512 -1362.3262 Bc
-173.7261 33.769 24.7735 127.4487 271.6001 210.3779 Bm
-8090.8516 1572.7039 24.7735 127.4487 97.874 244.1465 Bc
f
0 BB
199.1816 306.9116 m
220.5576 320.623 245.123 330.8696 270.1499 330.04 C
295.0039 329.5825 318.6318 314.1216 329.4082 291.4736 C
340.2783 269.2998 339.2207 239.8652 321.7598 221.3242 C
313.3301 212.085 301.6904 205.7773 289.2485 203.8232 C
276.8486 201.8984 263.5176 203.9033 253.2173 211.3105 C
242.8452 218.4736 235.7412 230.2432 234.2642 242.874 C
234.0571 244.3828 233.936 245.9053 233.9009 247.4307 C
233.6416 258.624 237.9941 269.9531 246.7886 277.1973 C
256.416 285.5146 270.855 288.4375 282.8306 283.5313 C
294.5708 278.8916 302.1855 265.8984 300.7695 253.25 C
300.7705 253.2529 300.7705 253.2568 300.7705 253.2607 C
302.5723 269.0723 291.5527 283.6035 275.687 286.0186 C
255.3838 289.1084 236.4204 275.1543 233.3306 254.8506 C
232.9468 252.3291 232.7734 249.8242 232.7974 247.3525 C
233.0132 224.957 249.4331 205.3838 272.29 201.9053 C
304.0137 197.0771 333.6436 218.8818 338.4717 250.6055 C
344.5068 290.2588 317.3105 327.6982 277.5972 333.332 C
188.7666 340.769 158.9688 249.083 44.2295 254.7578 C
55.4663 237.5205 43.3013 231.751 67.3232 239.8125 C
128.0898 251.4951 145.2998 272.3506 199.1816 306.9116 c
Bb
1 (GradientFill 4) 74.2935 156.9619 36 320.0179 1 0 0 1 0 0 Bg
258.8999 188.1018 119.5331 -164.5233 16.2266 236.8838 Xm
6434.0366 4674.6011 119.5331 -164.5233 -6417.8101 -4437.7178 Bc
258.8999 188.1018 119.5331 -164.5233 16.2266 236.8838 Bm
6434.0366 4674.6011 119.5331 -164.5233 275.1265 424.9854 Bc
f
0 BB
342.5977 203.0459 m
253.7998 159.4688 319.8457 82.1895 290.6621 51.085 C
334.8975 78.6738 286.7324 155.3281 342.5977 203.0459 C
Bb
1 (GradientFill 4) 284.5503 81.1494 62 111.2115 1 0 0 1 0 0 Bg
52.2106 98.1939 100.2462 -53.3019 226.3467 112.0967 Xm
3852.3545 7245.2261 100.2462 -53.3019 -3626.0078 -7133.1299 Bc
52.2106 98.1939 100.2462 -53.3019 226.3467 112.0967 Bm
3852.3545 7245.2261 100.2462 -53.3019 278.5571 210.291 Bc
f
0 BB
*u
0 g
288.2573 162.9492 m
300.168 175.9463 314.165 187.1572 329.1875 196.3887 C
332.334 198.3359 335.5371 200.1777 338.792 201.917 C
321.8438 192.3203 306.5996 179.9297 294.5313 164.5977 C
293.7554 163.6426 292.9937 162.6758 292.2422 161.7012 C
293.4277 161.3018 294.6069 160.8857 295.7749 160.4355 C
296.8252 161.8281 297.8984 163.2021 298.998 164.5557 C
316.7627 187.123 341.3428 203.377 368.1357 213.7754 C
368.1357 215.5186 L
367.7715 215.415 L
335.7832 206.3613 305.4072 189.4775 283.9712 164.0459 C
285.4097 163.7148 286.8398 163.3525 288.2573 162.9492 C
288.2573 162.9492 L
f
348.6484 207.0957 m
340.2275 203.5391 332.0625 199.3486 324.248 194.5137 C
321.6357 192.9092 319.0576 191.2422 316.5146 189.5176 C
327.4375 197.1846 339.3467 203.5234 351.7773 208.583 C
350.7295 208.0967 349.6865 207.6006 348.6484 207.0957 C
Bb
1 (GradientFill 4) 348.2588 219.4746 -126 77.0689 1 0 0 1 0 0 Bg
-45.3 -62.3501 -34.6747 25.1926 365.5967 206.8779 Xm
-4851.7207 -6677.8218 -34.6747 25.1926 5217.3174 6884.6997 Bc
-45.3 -62.3501 -34.6747 25.1926 365.5967 206.8779 Bm
-4851.7207 -6677.8218 -34.6747 25.1926 320.2969 144.5283 Bc
f
0 BB
*U
*u
0 g
458.3828 154.9365 m
465.5479 145.8643 470.8818 135.3623 473.7539 124.1592 C
479.6973 100.832 475.9238 75.1768 465.0557 53.7617 C
454.1377 32.2246 435.6426 14.6182 413.5811 4.9834 C
409.1455 2.96484 404.5781 1.31348 399.9189 0 C
407.2666 0 L
410.3271 1.02539 413.3408 2.2041 416.2959 3.54883 C
438.1572 13.0947 456.4834 30.542 467.3018 51.8818 C
478.0703 73.1035 481.8105 98.5244 475.9219 121.6387 C
472.7754 133.9121 466.6514 145.3379 458.3828 154.9365 C
458.3828 154.9365 L
f
1 D
337.2607 0 m
332.1846 1.2666 327.2031 2.85742 322.3379 4.74023 C
326.6523 2.91797 331.0693 1.33105 335.5693 0 C
337.2607 0 L
Bb
1 (GradientFill 4) 482.3584 147.6914 -126 209.835 1 0 0 1 0 0 Bg
-123.3379 -169.7601 -78.766 57.2268 522.749 118.3467 Xm
-4920.7183 -6772.7886 -78.766 57.2268 5443.4668 6891.1353 Bc
-123.3379 -169.7601 -78.766 57.2268 522.749 118.3467 Bm
-4920.7183 -6772.7886 -78.766 57.2268 399.4111 -51.4131 Bc
f
0 BB
*U
0 D
277.0273 198.9414 m
262.2026 199.5273 247.9063 207.0703 239.0425 218.877 C
230.125 230.5977 226.4888 246.3145 230.2964 260.6631 C
233.5986 273.0234 243.2505 283.248 255.1147 287.667 C
243.8296 283.0928 234.7212 273.1982 231.5449 261.3076 C
227.7725 247.0898 231.375 231.5166 240.2114 219.9023 C
248.8408 208.4092 262.6655 200.9922 277.0776 200.1855 C
277.0273 198.9414 L
Bb
1 (GradientFill 4) 226.688 280.3301 -53 90.7443 1 0 0 1 0 0 Bg
54.6113 -72.4716 -46.5628 -35.0876 249.9429 297.854 Xm
4884.6626 -6482.166 -46.5628 -35.0876 -4634.7197 6780.02 Bc
54.6113 -72.4716 -46.5628 -35.0876 249.9429 297.854 Bm
4884.6626 -6482.166 -46.5628 -35.0876 304.5537 225.3828 Bc
f
0 BB
429.0283 144.2051 m
436.7549 139.1914 443.4658 132.6309 448.498 124.9121 C
458.9492 108.8311 462.6631 88.5068 459.9404 69.5684 C
457.21 50.5254 447.7568 32.5098 433.5742 19.5967 C
423.4971 10.1348 410.9697 3.74414 397.6563 0 C
401.1328 0 L
414.0518 3.7373 426.1904 10.0068 435.9902 19.209 C
450.0449 32.0029 459.4102 49.8545 462.1152 68.7246 C
464.8135 87.4912 461.1338 107.6299 450.7783 123.5654 C
445.2656 132.0215 437.7217 139.0762 429.0283 144.2051 C
Bb
1 (GradientFill 4) 469.8643 131.709 -126 142.9471 1 0 0 1 0 0 Bg
-84.0222 -115.6466 -70.3469 51.11 505.9229 105.5107 Xm
-4910.6108 -6758.877 -70.3469 51.11 5416.5342 6864.3877 Bc
-84.0222 -115.6466 -70.3469 51.11 505.9229 105.5107 Bm
-4910.6108 -6758.877 -70.3469 51.11 421.9004 -10.1357 Bc
f
0 BB
354.0752 210.502 m
333.0088 199.333 317.5518 178.4521 312.9316 155.1797 C
308.1738 131.9932 313.8496 106.6943 329.3545 88.5615 C
342.7432 72.9551 363.8438 64.8643 384.1055 66.7227 C
364.5742 65.4912 344.4922 73.4834 331.6123 88.4961 C
316.249 106.4648 310.624 131.5322 315.3389 154.5078 C
319.8369 177.1641 334.6992 197.5322 355.0146 208.7354 C
354.0752 210.502 L
Bb
1 (GradientFill 4) 401.4141 189.9463 -126 146.4161 1 0 0 1 0 0 Bg
-86.0612 -118.4531 -99.9266 72.6009 450.2998 154.4287 Xm
-4871.3984 -6704.9053 -99.9266 72.6009 5321.6982 6859.334 Bc
-86.0612 -118.4531 -99.9266 72.6009 450.2998 154.4287 Bm
-4871.3984 -6704.9053 -99.9266 72.6009 364.2383 35.9756 Bc
f
0 BB
342.8701 206.0098 m
249.5874 153.5605 202.5752 171.041 202.0186 205.4951 C
210.895 196.9658 229.0269 210.1553 249.1436 203.7764 c
274.124 195.8555 304.4023 195.5879 342.8701 206.0098 C
Bb
1 (GradientFill 4) 261.5347 222.3613 -62 68.3593 1 0 0 1 0 0 Bg
32.0927 -60.3577 -127.4004 -67.74 319.9316 253.4111 Xm
3836.5608 -7215.5225 -127.4004 -67.74 -3516.6289 7468.9336 Bc
32.0927 -60.3577 -127.4004 -67.74 319.9316 253.4111 Bm
3836.5608 -7215.5225 -127.4004 -67.74 352.0244 193.0537 Bc
f
0 BB
*u
0 g
0 265.7217 m
40.9658 252.1016 88.1406 256.2666 125.6997 277.0625 C
165.8809 298.9756 196.1577 338.9321 203.5874 384.4619 C
210.9429 430.0347 190.3721 478.3213 152.9307 504.7915 C
134.5415 517.8984 112.3252 526.7393 89.3457 526.6143 C
111.7549 526.4883 133.3872 517.7988 151.3379 505.0059 C
188.4126 478.7939 208.7817 430.9805 201.4976 385.8535 C
194.1406 340.77 164.1606 301.2041 124.3726 279.5059 C
87.188 258.917 40.542 255.9287 0 269.5381 C
0 280.5947 L
2.14941 279.7754 4.31836 279.0127 6.50391 278.3037 C
14.1128 276.083 24.6553 279.0723 31.6475 285.957 C
29.1191 280.4512 24.1826 277.0703 18.7817 275.8135 C
26.6646 274.5303 36.2046 277.8623 42.2168 282.7959 C
48.9341 288.3096 58.5215 288.9023 58.6768 278.3779 C
65.4077 297.0605 82.4883 282.3564 100.1289 287.3711 C
103.0894 288.4072 105.8613 290.0703 108.1885 292.2959 C
110.5996 294.583 112.5083 297.4214 113.7407 300.5591 C
114.9458 303.7114 115.5464 307.2007 115.1836 310.3618 C
114.5615 316.8521 109.9028 322.9644 103.4966 325.3413 C
101.9146 325.9336 100.1973 326.3394 98.5215 326.4805 C
96.8887 326.6255 95.2314 326.4883 93.6333 326.061 C
90.4307 325.2349 87.4819 323.2192 85.4849 320.4585 C
83.4985 317.769 82.3853 314.0786 82.7012 310.8271 C
83.0068 307.5078 84.8652 304.2959 87.7007 302.3062 C
89.417 301.105 91.5054 300.3164 93.6001 300.1411 C
94.9404 300.0288 96.2832 300.168 97.5322 300.6113 C
100.7935 301.7012 103.417 304.709 103.9844 308.2583 C
104.6772 311.7021 102.7334 315.46 99.3696 316.9141 C
97.6992 317.6211 95.8047 317.8438 94.124 317.2139 C
92.4326 316.6191 90.9805 315.2627 90.2935 313.541 C
89.5732 311.8184 89.6177 309.8076 90.6855 308.2373 C
91.5454 306.9194 93.0669 305.998 94.6704 305.8486 C
94.9639 305.8213 95.2598 305.8198 95.5547 305.8462 C
97.4614 306.0166 99.1978 307.605 99.4775 309.603 C
99.8862 311.5742 98.3188 313.7319 96.1904 313.9131 C
98.2944 313.7515 99.8706 311.9175 99.7134 309.8125 C
99.5161 307.1782 97.2202 305.2026 94.5864 305.3999 C
91.2935 305.6465 88.8237 308.5156 89.0703 311.8086 C
89.3789 315.9248 92.9653 319.0112 97.0815 318.7031 C
102.2266 318.3179 106.085 313.8345 105.6997 308.6895 C
105.2178 302.2583 99.6138 297.4351 93.1826 297.9165 C
85.1436 298.5186 79.1147 305.5239 79.7168 313.563 C
80.4692 323.6118 89.2256 331.1479 99.2744 330.395 C
111.8354 329.4546 121.2559 318.5088 120.3149 305.9482 C
120.2886 305.5947 120.2529 305.2437 120.2139 304.8945 C
124.3296 310.4341 130.7002 307.6406 126.4307 300.436 C
131.7881 302.1074 137.2588 322.2168 143.8857 328.7173 C
151.8838 336.5625 159.9946 329.9854 151.0322 317.8687 C
165.9048 326.9043 160.0024 352.2622 165.0044 367.9023 c
168.4268 378.6035 179.2246 384.064 185.7544 374.5234 C
172.4521 393.1909 182.959 408.001 183.4697 427.1094 c
183.7334 436.9727 180.4121 445.5854 173.293 447.1392 C
172.5825 447.2734 171.8599 447.3564 171.1328 447.3862 C
168.6401 447.4316 165.7632 446.71 162.4932 445.0322 C
162.4883 445.0298 L
162.0601 444.7559 161.6455 444.4614 161.2451 444.145 C
159.5171 442.7529 158.0205 440.9702 157.1802 439.0542 C
155.3843 435.1611 156.0073 430.1465 158.8594 426.6753 C
159.562 425.8149 160.4033 425.0156 161.3086 424.3809 C
162.188 423.7578 163.1748 423.2871 164.2241 423.0005 C
166.3174 422.4092 168.6602 422.5781 170.7085 423.4854 C
172.7271 424.3555 174.5811 426.083 175.4785 428.0347 C
176.4038 430.022 176.4116 432.4619 175.4595 434.5308 C
174.8818 435.7813 173.957 436.9209 172.8252 437.7139 C
172.1011 438.2217 171.292 438.5869 170.4355 438.7485 C
168.2222 439.2095 165.7358 438.3691 164.2383 436.541 C
162.7046 434.814 162.5649 432.0356 163.9941 430.0962 C
164.709 429.1411 165.7119 428.3877 166.8745 428.189 C
168.0322 427.9668 169.3066 428.2568 170.2671 429.0068 C
171.2461 429.7471 171.8867 430.9043 171.8003 432.1499 C
171.748 433.1836 171.1885 434.2104 170.3271 434.8262 C
170.1699 434.9385 170.002 435.0376 169.8257 435.1201 C
168.6865 435.6548 167.1743 435.3271 166.3535 434.2852 C
165.4688 433.3003 165.6445 431.5557 166.7939 430.748 C
165.6523 431.5366 165.3638 433.1006 166.1504 434.2441 C
167.1348 435.6753 169.0928 436.0376 170.5239 435.0532 C
172.3125 433.8232 172.7656 431.375 171.5352 429.5864 C
169.9976 427.3501 166.938 426.7842 164.7017 428.3218 C
161.9063 430.2446 161.1987 434.0688 163.1216 436.8638 C
165.5244 440.3579 170.3047 441.2422 173.7988 438.8394 C
178.166 435.8354 179.272 429.8599 176.2681 425.4927 C
172.5132 420.0337 165.0439 418.6519 159.5845 422.4063 C
152.7607 427.0996 151.0332 436.436 155.7266 443.2603 C
156.6318 444.5771 157.6758 445.7417 158.8247 446.7485 C
158.8242 446.7485 L
158.8262 446.749 L
164.6914 451.8877 173.2998 452.9136 180.2817 449.02 C
183.3291 447.3745 186.0557 444.8081 188.7236 441.6597 C
181.2134 464.6851 166.6772 485.4902 146.896 499.7725 C
131.1714 511.1982 112.5679 519.2158 93.1982 520.5195 C
91.8076 520.5898 90.4146 520.6279 89.0171 520.6284 C
67.4746 520.9658 45.8823 513.4883 29 499.998 C
16.2354 489.8062 5.89941 476.0981 0 460.7964 C
0 461.689 L
5.85742 476.7407 16.0493 490.2217 28.6196 500.2593 C
45.3369 513.6167 66.7178 521.021 88.0493 520.6875 C
89.6577 520.6865 91.2607 520.6357 92.8599 520.542 C
91.1431 520.6509 89.4209 520.708 87.6938 520.7085 C
66.4399 521.041 45.1362 513.6641 28.4805 500.3545 C
15.981 490.374 5.8418 476.9771 0 462.0171 C
0 473.6235 L
6.16406 485.4614 14.8628 495.9883 25.1895 504.4458 C
42.6411 518.6782 65.1118 526.7402 87.73 526.6133 C
110.5049 526.813 132.5317 518.0698 150.7524 505.0835 C
187.6929 478.9673 207.9883 431.3271 200.7305 386.3643 C
193.4004 341.4443 163.5288 302.0225 123.8857 280.4023 C
86.5742 259.7441 40.5107 255.7197 0 269.4941 C
0 265.7217 L
0 265.7217 L
f
1 D
0 g
0 406.6528 m
0 396.9849 L
2.4248 392.5635 5.27295 388.3774 8.51807 384.5122 C
22.8667 367.4561 44.9126 355.8066 67.6567 357.4761 C
90.2192 358.8896 111.2822 373.3965 120.4668 393.9468 C
125.2954 404.0898 126.5366 415.8857 124.0986 426.8218 C
121.5884 437.7695 115.3262 447.7393 106.6582 454.8164 C
97.9448 461.7007 86.8125 466.1123 75.5479 465.0527 C
64.3848 464.1958 53.7056 458.4214 46.9995 449.4888 C
40.147 440.7593 37.2134 428.6465 40.96 417.9829 C
44.4463 407.4082 53.7915 398.9077 64.7842 396.9609 C
75.4653 395.0854 86.8452 400.9111 91.5449 410.5874 C
92.5405 412.3042 93.2749 414.1909 93.6938 416.1938 C
91.9629 413.126 89.6646 410.4214 86.9424 408.2207 C
87.5972 407.8179 88.3125 407.4937 89.1011 407.2656 C
83.623 399.9287 73.9326 395.9268 64.8931 397.6118 C
54.1978 399.6089 45.1592 408.0107 41.895 418.291 C
38.377 428.6714 41.3174 440.2773 48.0381 448.6846 C
54.6064 457.2588 64.9624 462.7002 75.6748 463.415 C
86.4619 464.3276 97.0791 459.9932 105.415 453.2871 C
113.6714 446.4097 119.564 436.7959 121.8569 426.3218 C
124.0669 415.8423 122.7925 404.7012 118.0864 395.0547 C
109.0874 375.4458 88.8394 361.873 67.4409 360.7495 C
45.9678 359.3481 25.0327 370.6689 11.5542 387.0151 C
6.69922 392.918 2.81592 399.5757 0 406.6528 C
0 406.6528 L
f
0 g
0 396.5771 m
0 395.4702 L
2.48682 390.8994 5.41846 386.5732 8.76709 382.584 C
23.3101 365.2969 45.6558 353.4893 68.708 355.1821 C
91.5767 356.6143 112.9253 371.3179 122.2344 392.147 C
127.1284 402.4277 128.3867 414.3838 125.916 425.4678 C
123.3711 436.5645 117.0244 446.6694 108.2393 453.8423 C
106.4067 455.2896 104.4678 456.6289 102.4453 457.8335 C
104.0532 456.8203 105.6035 455.7236 107.083 454.5547 C
115.7822 447.4517 122.0674 437.4463 124.5864 426.458 C
127.0332 415.4824 125.7876 403.6436 120.9414 393.4634 C
111.7227 372.8384 90.5835 358.2783 67.939 356.8604 C
45.1128 355.1846 22.9858 366.8765 8.58545 383.9946 C
5.3125 387.8931 2.44141 392.1167 0 396.5771 C
0 396.5771 L
f
0 g
182.4331 453.5615 m
174.9956 469.0439 152.5996 501.3755 118.915 494.9683 C
133.7095 497.4502 147.6611 491.3008 158.6274 476.5767 c
169.0283 462.6113 178.3359 459.3027 182.4331 453.5615 C
182.4331 453.5615 L
f
0 g
23.7041 276.5498 m
37.7104 277.9453 41.0317 284.8809 42.2256 291.2217 C
32.6147 292.251 33.2148 279.9648 23.7041 276.5498 C
23.7041 276.5498 L
f
184.5557 450.2334 m
174.2847 473.2217 149.2505 510.2168 111.5034 494.8936 C
120.3955 494.8989 119.9751 474.8525 132.2173 466.9053 C
153.7202 452.9468 173.312 464.0732 184.5557 450.2334 C
Bb
1 (GradientFill 4) 191.1064 247.1924 129 336.9291 1 0 0 1 0 0 Bg
-212.0364 261.843 222.0618 179.8221 83.1943 159.8066 Xm
-5055.0098 6242.4155 222.0618 179.8221 5138.2041 -6082.6094 Bc
-212.0364 261.843 222.0618 179.8221 83.1943 159.8066 Bm
-5055.0098 6242.4155 222.0618 179.8221 -128.8418 421.6499 Bc
f
0 BB
*U
0 D
358.6221 214.1172 m
341.8838 209.4082 325.3574 204.4258 308.4971 201.6445 C
291.8096 198.9297 274.1782 198.1904 258.9131 204.8887 C
243.6641 211.3154 232.8794 226.7119 231.8164 243.376 C
230.5781 259.7686 238.5068 277.7012 253.8838 284.8457 C
261.377 288.4727 270.1313 289.4951 278.3066 287.6289 C
286.4458 285.7529 294.1904 281.2178 298.7266 274.0947 C
303.3672 267.1025 304.8486 258.0713 302.6396 249.8984 C
302.3945 248.915 302.0938 247.9434 301.7393 246.9941 C
299.1328 240.0078 293.6411 234.083 286.4136 231.7793 C
278.4087 229.0166 268.7603 230.7803 262.5708 236.7725 C
256.4604 242.543 254.9648 252.4551 258.9663 259.9229 C
258.9648 259.9219 258.9634 259.9199 258.9629 259.918 C
253.9424 250.5898 257.1611 238.8828 266.3721 233.4688 C
278.1567 226.541 293.3281 230.4795 300.2568 242.2646 C
301.1182 243.7295 301.8438 245.2344 302.4395 246.7676 C
307.8418 260.665 302.5293 276.8223 289.2607 284.6211 C
270.8457 295.4473 247.1411 289.2939 236.3149 270.8789 C
222.7847 247.8584 230.3403 217.9941 253.4951 204.6963 C
283.3604 187.543 327.6641 202.04 362.0527 211.207 C
370.2871 216.5186 381.6143 219.8018 394.1172 219.8018 c
399.4551 219.8018 404.5771 219.2002 409.3369 218.1016 C
405.7705 220.3389 401.6816 221.1152 398.1758 221.3135 C
393.4932 221.5635 389.0791 221.0781 384.7871 220.3867 C
384.6289 220.3623 384.4717 220.3369 384.3154 220.3105 C
375.4482 218.7969 367.0137 216.4443 358.6221 214.1172 C
Bb
1 (GradientFill 4) 282.7231 295.249 -62 126.1718 1 0 0 1 0 0 Bg
59.2341 -111.4031 -143.1214 -76.099 351.2178 331.668 Xm
3845.7556 -7232.8154 -143.1214 -76.099 -3494.5381 7564.4834 Bc
59.2341 -111.4031 -143.1214 -76.099 351.2178 331.668 Bm
3845.7556 -7232.8154 -143.1214 -76.099 410.4521 220.2646 Bc
f
0 BB
*u
0 g
141.0273 169.7461 m
171.1621 133.708 200.4087 97.3789 233.7598 65.4521 C
263.6284 36.9805 297.6797 10.9297 336.6104 0 C
313.959 0 L
210.3438 42.7725 128.9307 186.7822 66.1577 231.4482 C
127.2095 188.0078 204.4546 49.0342 303.2969 0 C
296.4336 0 L
198.8193 51.1309 121.29 184.8477 60.769 227.9102 C
52.4731 233.8135 44.4976 238.0107 36.8325 240.0596 C
36.708 240.3418 36.98 243.1396 37.0156 244.4883 C
36.0083 244.6133 35.0063 244.6982 34.0103 244.7402 C
31.1616 248.3271 27.2104 250.9063 22.707 251.8955 C
22.5884 252.3711 L
22.1704 252.3018 21.75 252.2266 21.3301 252.1445 C
20.4331 252.2744 19.5166 252.3428 18.5864 252.3428 C
18.4458 252.3408 L
19.7979 252.5693 21.1406 252.7334 22.4717 252.8379 C
21.9575 254.9014 L
38.0459 258.6348 52.8989 252.7471 63.814 246.1514 C
74.6387 239.5654 83.7393 231.748 92.2554 223.6553 C
92.5669 223.3604 92.8779 223.0635 93.1875 222.7676 C
110.6509 205.8574 125.8691 187.7461 141.0273 169.7461 C
141.0273 169.7461 L
f
1 D
0 g
407.1963 0 m
425.3779 0 L
466.9258 19.4756 496.9727 60.6475 500.3477 109.6777 C
501.4502 125.6924 498.8799 141.1104 493.3613 155.1123 C
500.0391 139.9854 503.2451 123.0596 502.0303 105.416 C
498.9014 59.9639 473.0381 21.208 436.3311 0 C
441.0254 0 L
475.7871 21.915 500.0088 59.7725 503.0449 103.873 C
504.5029 125.0576 499.6572 145.2188 490.1084 162.5234 C
490.1064 162.5254 L
474.2676 195.0576 441.9531 218.4521 403.2666 221.1162 C
361.7793 223.9717 325.2813 196.0508 316.1211 156.8213 C
315.1104 152.4941 314.4326 148.0273 314.1172 143.4512 C
311.5811 106.5986 339.3975 74.6689 376.249 72.1309 C
405.0469 70.1484 430.0889 91.3369 433.126 119.7988 C
433.1279 119.8057 433.1279 119.8125 433.1279 119.8184 C
430.6533 97.0596 412.1934 77.2373 389.7646 73.6963 C
366.8193 69.7793 342.6191 80.5703 328.9795 98.9473 C
316.3809 115.1104 313.1836 136.7041 318.0273 156.252 C
318.6875 158.915 319.4971 161.541 320.4521 164.1104 C
327.9971 185.7012 345.083 203.5762 366.0986 212.085 C
387.085 221.0488 411.2715 219.3408 432.2832 211.0996 C
453.3594 202.791 471.3184 187.1553 482.4912 167.6318 C
505.874 128.2383 496.1895 76.1543 468.4121 41.4902 C
452.832 21.5752 431.0488 7.20898 407.1963 0 C
407.1963 0 L
f
66.1577 231.4482 m
65.9014 231.6309 65.6455 231.8105 65.3887 231.9902 C
65.6445 231.8115 65.9009 231.6309 66.1577 231.4482 C
Bb
1 (GradientFill 4) 514.7344 -34.0654 -223 592.4709 1 0 0 1 0 0 Bg
-433.3057 404.0642 202.6331 217.2973 408.9258 -147.5313 Xm
-6103.564 5691.6665 202.6331 217.2973 6512.4902 -5839.1982 Bc
-433.3057 404.0642 202.6331 217.2973 408.9258 -147.5313 Bm
-6103.564 5691.6665 202.6331 217.2973 -24.3799 256.5332 Bc
f
0 BB
*U
0 D
335.4902 142.8799 m
320.8496 151.9424 330.7129 175.8906 298.0977 172.5234 C
322.4639 182.6221 307.2773 205.5068 308.9072 224.4834 C
298.3789 210.2725 267.6318 214.8779 269.064 193.3643 C
265.2842 208.6436 242.6816 206.3887 229.1694 220.082 C
236.3276 205.7744 218.4692 177.1123 240.3105 169.9063 C
218.2021 171.1797 219.3174 148.1484 205.0479 133.0967 C
227.9702 136.0713 238.9712 117.1221 252.082 132.5391 C
242.5435 113.915 268.2827 102.2891 270.5 86.5088 C
275.9873 104.9873 303.2725 113.7002 289.9893 134.4688 C
308.7227 116.082 325.623 142.6563 335.4902 142.8799 C
Bb
1 (GradientFill 4) 310.6377 239.5205 -116 186.4566 1 0 0 1 0 0 Bg
-81.7372 -167.5861 -119.9025 58.4803 370.5889 210.2803 Xm
-3591.9534 -7364.5962 -119.9025 58.4803 3962.542 7574.8765 Bc
-81.7372 -167.5861 -119.9025 58.4803 370.5889 210.2803 Bm
-3591.9534 -7364.5962 -119.9025 58.4803 288.8516 42.6943 Bc
f
0 BB
331.7949 143.9297 m
318.0654 152.4268 330.9766 173.2129 293.5347 171.2822 C
319.7842 183.21 306.1963 203.1348 307.7256 220.9297 C
297.8525 207.6035 268.71 213.3594 270.061 188.1377 C
264.0332 207.6758 244.5767 202.8154 231.9063 215.6563 C
238.6187 202.2393 218.5918 178.9961 246.8887 168.0381 C
219.1797 170.6729 222.4985 149.5127 209.1177 135.3984 C
230.6118 138.1865 239.2822 117.4639 256.041 138.7598 C
243.5151 113.124 268.7734 105.8662 270.8521 91.0684 C
275.998 108.3965 302.6152 118.3467 284.8701 140.7646 C
306.7549 117.793 322.542 143.7188 331.7949 143.9297 C
Bb
0 0 0 0 Bh
1 (GradientFill 6) 270.4561 155.999 89 73.2438 1 0 0 1 0 0 Bg
1.27828 73.2326 73.2326 -1.27828 270.4561 155.999 Bm
f
0 BB
*u
0 g
317.1797 160.2842 m
306.5859 172.6299 288.9092 166.8477 276.3501 159.8477 C
289.7075 165.2246 305.2891 170.5635 317.1797 160.2842 C
317.1797 160.2842 L
f
0 g
324.5352 145.7637 m
311.667 147.1924 288.4961 154.3906 276.9473 158.7764 C
289.6719 165.3896 312.2715 163.8105 322.2822 152.0723 C
310.665 161.208 289.9424 163.1201 276.9473 158.7764 C
288.3501 157.6934 313.1611 149.5615 324.5352 145.7637 C
324.5352 145.7637 L
f
1 D
0 g
319.5801 141.7021 m
305.8809 140.1455 285 148.9658 276.9136 158.666 C
283.6719 147.1797 305.6885 137.2285 319.5801 141.7021 C
319.5801 141.7021 L
f
310.4629 136.6289 m
295.0649 134.1504 284.3774 146.6904 275.8877 158.2188 C
282.8613 145.7217 295.0811 131.7305 310.4629 136.6289 C
Bb
0 0 0 0 Bh
1 (GradientFill 6) 300.2109 151.248 -254 29.2507 1 0 0 1 0 0 Bg
-8.06258 28.1176 28.1176 8.06258 300.2109 151.248 Bm
f
0 BB
*U
*u
0 D
0 g
283.3086 204.7061 m
268.6318 197.6895 270.6865 180.5371 274.1782 166.5898 C
272.4609 180.8857 270.2896 195.9004 283.3086 204.7061 C
283.3086 204.7061 L
f
0 g
299.2432 208.0313 m
294.5156 195.9775 282.6074 176.8975 275.3677 166.8877 C
272.293 180.8945 278.627 200.8857 292.5654 207.4971 C
280.7217 198.6572 274.5552 180.5654 275.3677 166.8877 C
279.3804 177.6162 292.6162 198.0371 299.2432 208.0313 C
299.2432 208.0313 L
f
0 g
301.876 202.1904 m
302.5811 187.6133 288.3149 170.3633 275.4658 166.8262 C
286.9355 172.1104 299.8145 188.5576 301.876 202.1904 C
301.876 202.1904 L
f
304.4014 192.0664 m
305.1299 175.9404 289.5112 169.2012 275.6304 165.7197 C
288.9707 170.917 302.7891 176.5547 304.4014 192.0664 C
Bb
0 0 0 0 Bh
1 (GradientFill 6) 289.6802 186.0293 30 28.4391 1 0 0 1 0 0 Bg
24.629 14.2195 14.2195 -24.629 289.6802 186.0293 Bm
f
0 BB
*U
*u
0 g
282.7979 115.9434 m
292.0537 129.3223 282.6025 144.6064 272.646 154.9795 C
281.2354 143.4219 289.7261 130.0518 282.7979 115.9434 C
282.7979 115.9434 L
f
0 g
270.6182 105.1445 m
268.7368 117.9551 270.4478 141.8457 271.7612 154.1299 C
281.3857 143.499 284.9648 121.585 276.1494 108.9248 C
282.04 122.4795 279.2583 142.6611 271.7612 154.1299 C
273.6055 142.8252 271.4072 117.1104 270.6182 105.1445 C
270.6182 105.1445 L
f
1 D
0 g
265.4326 108.9082 m
260.4526 121.7656 264.314 143.8525 271.646 154.1348 C
262.249 144.6836 257.5825 121.2109 265.4326 108.9082 C
265.4326 108.9082 L
f
258.2129 116.4414 m
251.9106 130.707 261.9551 143.8779 270.9531 155.0137 C
260.6338 145.0986 249.5732 130.0771 258.2129 116.4414 C
Bb
0 0 0 0 Bh
1 (GradientFill 6) 272.4131 129.082 -178 31.176 1 0 0 1 0 0 Bg
-31.157 -1.08802 -1.08802 31.157 272.4131 129.082 Bm
f
0 BB
*U
*u
0 D
0 g
233.7686 133.8672 m
249.5562 129.9453 260.0811 143.3311 266.2593 156.3145 C
258.4897 144.1914 249.4155 132.3799 233.7686 133.8672 C
233.7686 133.8672 L
f
0 g
219.3579 141.4365 m
230.6733 147.7305 253.1982 153.7227 265.1514 156.8408 C
258.6143 144.0781 239.8115 133.8369 224.8501 137.6016 C
239.6128 136.8887 257.0786 145.7705 265.1514 156.8408 C
255.2314 151.1162 230.8291 144.9336 219.3579 141.4365 C
219.3579 141.4365 L
f
0 g
221.0425 147.6191 m
229.771 159.3145 252.9507 162.3945 265.1152 156.9512 C
252.9038 160.1699 231.3052 156.8271 221.0425 147.6191 C
221.0425 147.6191 L
f
1 D
225.5327 157.0371 m
236.6445 167.9805 252.0923 162.3848 265.6924 157.9102 C
252.7666 164.0527 235.229 169.9434 225.5327 157.0371 C
Bb
0 0 0 0 Bh
1 (GradientFill 6) 245.1533 148.3232 -109 30.5739 1 0 0 1 0 0 Bg
-9.95389 -28.9082 -28.9082 9.95389 245.1533 148.3232 Bm
f
0 BB
*U
*u
0 D
0 g
233.4971 186.5303 m
235.2183 170.3545 252.4253 164.873 266.7393 163.5146 C
252.6885 166.6631 237.458 171.3203 233.4971 186.5303 C
233.4971 186.5303 L
f
0 g
235.6743 202.6621 m
245.4624 194.1855 259.832 174.8984 266.855 164.7354 C
252.6245 166.5068 235.5381 180.8428 233.9517 196.1885 C
238.3374 182.0742 253.689 168.5293 266.855 164.7354 C
258.0791 172.0957 242.8877 193.082 235.6743 202.6621 C
235.6743 202.6621 L
f
0 g
242.0596 203.1963 m
256.0376 199.001 267.8945 178.1016 266.9458 164.8076 C
265.7881 177.3828 254.2251 196.707 242.0596 203.1963 C
242.0596 203.1963 L
f
252.4458 202.2021 m
267.8926 197.5127 269.3896 178.8408 268.0439 164.5938 C
267.5913 178.9033 266.5327 195.5098 252.4458 202.2021 C
Bb
0 0 0 0 Bh
1 (GradientFill 6) 252.709 182.5625 -39 28.1934 1 0 0 1 0 0 Bg
21.9104 -17.7427 -17.7427 -21.9104 252.709 182.5625 Bm
f
0 BB
*U
0.78 0.81 0.81 0.64 k
276.0029 151.0518 m
276.2246 151.833 276.2563 152.6221 276.1245 153.3711 C
276.1855 153.3525 L
278.9512 152.5674 281.8306 154.1738 282.6157 156.9385 c
283.4009 159.7041 281.7949 162.584 279.0298 163.3691 c
278.9937 163.3789 278.9575 163.3887 278.9214 163.3984 C
279.7017 164.0459 280.3013 164.9287 280.5991 165.9775 c
281.3843 168.7432 279.7783 171.6221 277.0127 172.4072 c
274.2476 173.1934 271.3682 171.5869 270.583 168.8223 c
270.5381 168.6641 270.5015 168.5049 270.4722 168.3457 C
269.8101 169.3652 268.79 170.1582 267.5298 170.5166 c
264.7646 171.3018 261.8853 169.6953 261.1001 166.9307 c
260.5142 164.8672 261.2598 162.7402 262.8242 161.4678 C
261.5068 160.8486 260.4546 159.6855 260.0264 158.1768 c
259.2412 155.4111 260.8467 152.5313 263.6123 151.7461 c
264.3677 151.5322 265.1328 151.4961 265.8604 151.6143 C
266.1836 149.6934 267.5757 148.0332 269.5732 147.4658 c
272.3384 146.6807 275.2178 148.2861 276.0029 151.0518 c
f
276.1836 158.9932 m
276.9561 161.7148 275.376 164.5479 272.6553 165.3203 c
269.9341 166.0928 267.1006 164.5137 266.3281 161.792 c
265.5552 159.0713 267.1357 156.2373 269.8564 155.4648 c
272.5776 154.6924 275.4111 156.2725 276.1836 158.9932 c
Bb
0 0 0 0 Bh
1 (GradientFill 7) 271.2559 160.3926 89 6.3746 1 0 0 1 0 0 Bg
0.111252 6.37363 6.37363 -0.111252 271.2559 160.3926 Bm
f
0 BB
275.2793 152.5449 m
275.9399 154.8711 274.5889 157.2939 272.2622 157.9541 c
269.9355 158.6152 267.5127 157.2637 266.8516 154.9375 c
266.1914 152.6104 267.5425 150.1875 269.8691 149.5273 c
272.1958 148.8662 274.6187 150.2178 275.2793 152.5449 c
Bb
0 0 0 0 Bh
1 (GradientFill 7) 271.0654 153.7402 -269 5.4504 1 0 0 1 0 0 Bg
-0.095122 5.44957 5.44957 0.095122 271.0654 153.7402 Bm
f
0 BB
270.2637 156.1465 m
270.9243 158.4727 269.5732 160.8955 267.2466 161.5566 c
264.9199 162.2168 262.4971 160.8662 261.8364 158.5391 c
261.1758 156.2129 262.5269 153.79 264.8535 153.1289 c
267.1802 152.4688 269.603 153.8193 270.2637 156.1465 c
Bb
0 0 0 0 Bh
1 (GradientFill 7) 266.0498 157.3428 -269 5.451 1 0 0 1 0 0 Bg
-0.095133 5.45017 5.45017 0.095133 266.0498 157.3428 Bm
f
0 BB
279.1465 165.1035 m
279.8071 167.4297 278.4556 169.8525 276.1289 170.5137 c
273.8022 171.1738 271.3794 169.8232 270.7188 167.4961 c
270.0586 165.1689 271.4092 162.7471 273.7363 162.0859 c
276.063 161.4248 278.4854 162.7764 279.1465 165.1035 c
Bb
0 0 0 0 Bh
1 (GradientFill 7) 274.9326 166.2988 -269 5.4504 1 0 0 1 0 0 Bg
-0.095122 5.44957 5.44957 0.095122 274.9326 166.2988 Bm
f
0 BB
280.8433 157.498 m
281.5039 159.8242 280.1523 162.2471 277.8257 162.9082 c
275.499 163.5684 273.0762 162.2178 272.416 159.8906 c
271.7554 157.5635 273.1064 155.1406 275.4331 154.4805 c
277.7598 153.8193 280.1826 155.1709 280.8433 157.498 c
Bb
0 0 0 0 Bh
1 (GradientFill 7) 276.6299 158.6934 89 5.45009 1 0 0 1 0 0 Bg
0.095117 5.44926 5.44926 -0.095117 276.6299 158.6934 Bm
f
0 BB
271.1675 163.5117 m
271.8281 165.8389 270.4766 168.2607 268.1499 168.9219 c
265.8232 169.582 263.4009 168.2314 262.7397 165.9043 c
262.0796 163.5781 263.4302 161.1553 265.7568 160.4941 c
268.084 159.834 270.5068 161.1846 271.1675 163.5117 c
Bb
0 0 0 0 Bh
1 (GradientFill 7) 266.9536 164.708 -269 5.451 1 0 0 1 0 0 Bg
-0.095133 5.45017 5.45017 0.095133 266.9536 164.708 Bm
f
0 BB
275.4961 159.2061 m
276.1567 161.5332 274.8057 163.9561 272.479 164.6172 c
270.1523 165.2773 267.7295 163.9258 267.0688 161.5996 c
266.4082 159.2725 267.7593 156.8496 270.0859 156.1895 c
272.4131 155.5283 274.8354 156.8799 275.4961 159.2061 c
Bb
0 0 0 0 Bh
1 (GradientFill 7) 271.2822 160.4023 89 5.4504 1 0 0 1 0 0 Bg
0.095122 5.44957 5.44957 -0.095122 271.2822 160.4023 Bm
f
0 BB
332.8027 94.2939 m
338.4932 87.7178 345.6875 82.458 353.7324 79.1641 C
368.3047 73.2139 385.915 73.1729 399.584 81.6885 C
413.2256 89.9834 421.6279 105.9707 420.6191 121.835 C
420.3057 129.7617 417.207 137.5439 412.0908 143.5801 C
408.9727 147.2139 405.1143 150.1729 400.8457 152.2969 C
404.2314 150.3193 407.2988 147.792 409.8623 144.8037 C
413 141.1025 415.3672 136.7373 416.7939 132.0879 C
417.9795 128.7734 418.6611 125.2822 418.7666 121.7461 C
419.583 106.5313 411.3828 91.3945 398.374 83.6621 C
395.7285 82.0449 392.9209 80.7637 390.0127 79.8008 C
377.8906 75.2295 363.9414 76.1123 352.0352 80.9736 C
344.7588 83.9521 338.1826 88.5566 332.8027 94.2939 C
Bb
1 (GradientFill 4) 414.1113 151.1338 -126 104.6037 1 0 0 1 0 0 Bg
-61.4845 -84.6262 -57.9233 42.0837 444.2285 129.252 Xm
-4881.877 -6719.3276 -57.9233 42.0837 5326.1055 6848.5796 Bc
-61.4845 -84.6262 -57.9233 42.0837 444.2285 129.252 Bm
-4881.877 -6719.3276 -57.9233 42.0837 382.7441 44.626 Bc
f
0 BB
313.1953 225.124 m
318.4736 229.4766 322.8711 234.8838 325.9316 241.0039 C
332.2842 253.7529 333.3076 269.0615 329.6992 282.8057 C
326.0762 296.626 317.5791 309.1196 306.0234 317.4492 C
294.5552 325.9873 280.0801 329.7285 265.8252 329.8975 C
261.6152 329.96 257.4214 329.645 253.2837 328.9922 C
258.1011 329.9028 263.0107 330.3481 267.9409 330.2749 C
282.0664 330.1074 296.4092 326.3999 307.7734 317.9395 C
319.2246 309.6865 327.6426 297.3062 331.2324 283.6123 C
334.8086 269.9932 333.7949 254.8232 327.5 242.1904 C
324.1475 235.4854 319.1777 229.6436 313.1953 225.124 C
Bb
1 (GradientFill 4) 265.7896 333.0776 -53 121.5446 1 0 0 1 0 0 Bg
73.1474 -97.0698 -47.6835 -35.9321 290.2261 351.4922 Xm
4915.3564 -6522.8979 -47.6835 -35.9321 -4625.1299 6874.3901 Bc
73.1474 -97.0698 -47.6835 -35.9321 290.2261 351.4922 Bm
4915.3564 -6522.8979 -47.6835 -35.9321 363.373 254.4219 Bc
f
0 BB
0 262.207 m
41.6826 248.3496 88.9082 252.6152 127.2178 273.8271 C
168.2427 296.2002 199.1553 336.9961 206.7412 383.4824 C
207.8374 390.2725 208.3208 397.1206 208.2378 403.9512 C
208.1147 398.5308 207.6328 393.1094 206.7637 387.7241 C
199.1768 341.2334 168.2612 300.4336 127.2319 278.0576 C
88.9175 256.8438 41.6875 252.582 0 266.4414 C
0 262.207 L
Bb
1 (GradientFill 4) 174.4209 409.5518 -126 212.8561 1 0 0 1 0 0 Bg
-125.1137 -172.2042 -100.0341 72.6791 226.73 371.5469 Xm
-4753.5757 -6542.7363 -100.0341 72.6791 4980.3057 6914.2832 Bc
-125.1137 -172.2042 -100.0341 72.6791 226.73 371.5469 Bm
-4753.5757 -6542.7363 -100.0341 72.6791 101.6162 199.3428 Bc
f
0 BB
76.4287 241.3428 m
115.1084 223.3936 156.2788 267.4785 188.105 264.1084 C
141.9702 273.2109 138.3496 250.6016 76.4287 241.3428 C
Bb
1 (GradientFill 4) 187.9082 246.832 -185 111.701 1 0 0 1 0 0 Bg
-111.2759 9.73539 4.87802 55.756 185.146 215.2588 Xm
-8053.3359 704.5762 4.87802 55.756 8238.4824 -489.3174 Bc
-111.2759 9.73539 4.87802 55.756 185.146 215.2588 Bm
-8053.3359 704.5762 4.87802 55.756 73.8701 224.9941 Bc
f
0 BB
*u
0 g
95.6611 180.6592 m
82.5396 226.8066 44.3076 259.0234 0 266.7012 C
0 239.9736 L
11.7964 237.873 23.2979 233.543 33.6953 227.0117 C
45.6509 219.5703 55.9932 209.4111 63.7808 197.4346 C
71.4683 185.374 76.9302 171.3994 78.1152 157.9678 C
81.0591 130.4941 66.9224 101.1514 42.3501 85.8301 C
36.2871 82.0234 29.5034 78.8779 22.6665 76.8643 C
16.0098 74.873 9.01318 74.0313 2.01563 74.4453 C
1.34326 74.4785 0.671875 74.5254 0 74.582 C
0 58.7021 L
9.51074 57.7129 19.3652 58.4785 29.125 61.2539 C
80.4707 75.8535 110.2603 129.3125 95.6611 180.6592 C
95.6611 180.6592 L
f
0 g
0 182.833 m
0 191.7148 L
17.3496 188.0156 32.1294 175.0869 37.3193 156.8359 C
43.2993 135.8047 31.0977 113.9072 10.0659 107.9277 C
6.70215 106.9707 3.31152 106.5986 0 106.7451 C
0 111.3027 L
6.36719 111.2324 12.6851 113.6152 18.043 117.3018 C
30.7686 126.2031 35.6406 143.457 29.8311 157.166 C
24.8877 170.2725 13.1123 179.9951 0 182.833 C
0 182.833 L
f
0 159.2832 m
0 160.874 L
6.28564 158.8936 11.4854 153.8906 13.4224 147.0771 C
15.8687 138.4746 10.8877 129.5186 2.29443 127.0547 C
10.9727 129.6211 15.6401 139.9121 12.2661 147.7451 C
10.2612 153.3877 5.46387 157.5869 0 159.2832 C
Bb
1 (GradientFill 4) -33.0547 221.4648 -49 197.585 1 0 0 1 0 0 Bg
129.6274 -149.1193 -133.2665 -115.8468 36.9404 282.3105 Xm
5167.7104 -5944.7715 -133.2665 -115.8468 -5130.7705 6227.082 Bc
129.6274 -149.1193 -133.2665 -115.8468 36.9404 282.3105 Bm
5167.7104 -5944.7715 -133.2665 -115.8468 166.5679 133.1914 Bc
f
0 BB
*U
0.817871 80.6182 m
9.26318 79.9189 17.8384 80.918 25.8442 83.7031 C
42.4995 89.5273 56.6387 102.2285 65.3135 117.5449 C
74.042 132.9404 77.2998 151.3711 74.2432 168.75 C
71.4438 186.2393 61.8315 202.0684 49.3267 214.5381 C
45.645 218.2324 41.6504 221.5771 37.4146 224.5732 C
42.4766 221.2188 47.2183 217.3711 51.5303 213.0449 C
63.9214 200.6885 73.4458 185.0029 76.2197 167.6729 C
79.249 150.4531 76.0205 132.1904 67.3716 116.9355 C
58.7749 101.7578 44.7656 89.1719 28.2622 83.4014 C
19.4912 80.3477 10.0317 79.459 0.817871 80.6182 C
Bb
1 (GradientFill 4) 88.2314 134.0771 -195 104.4377 1 0 0 1 0 0 Bg
-100.8791 27.0305 39.4756 147.3248 68.4937 60.4141 Xm
-7702.7021 2063.9331 39.4756 147.3248 7771.1963 -2003.5195 Bc
-100.8791 27.0305 39.4756 147.3248 68.4937 60.4141 Bm
-7702.7021 2063.9331 39.4756 147.3248 -32.3853 87.4443 Bc
f
0 BB
204.7744 354.3496 m
210.3291 369.9883 223.1392 382.749 238.6958 388.2905 C
254.1792 393.918 272.1748 392.5752 286.2334 383.7383 C
298.3369 376.1011 306.0479 362.3926 306.8232 348.252 C
305.6904 361.8257 298.1504 374.8438 286.5068 382.1899 C
272.5762 390.9468 254.7451 392.2773 239.4023 386.7007 C
224.2578 381.3062 211.7402 369.0068 206.0864 353.8818 C
204.7744 354.3496 L
Bb
1 (GradientFill 4) 223.0337 401.1519 -53 89.2675 1 0 0 1 0 0 Bg
53.7225 -71.2922 -73.3249 -55.2543 260.6206 429.4756 Xm
4878.1763 -6473.5581 -73.3249 -55.2543 -4617.5557 6903.0337 Bc
53.7225 -71.2922 -73.3249 -55.2543 260.6206 429.4756 Bm
4878.1763 -6473.5581 -73.3249 -55.2543 314.3428 358.1836 Bc
f
0 BB
185.0073 327.8091 m
224.1274 391.1934 258.647 396.3975 270.6011 375.6055 C
262.3203 377.8071 255.7261 363.6631 241.3262 360.7656 c
223.4453 357.1675 204.9175 347.123 185.0073 327.8091 C
Bb
1 (GradientFill 4) 252.4448 378.5483 -150 64.0695 1 0 0 1 0 0 Bg
-55.4858 -32.0348 -21.8206 37.7944 260.7109 364.231 Xm
-7070.4395 -4082.1208 -21.8206 37.7944 7331.1504 4446.3516 Bc
-55.4858 -32.0348 -21.8206 37.7944 260.7109 364.231 Bm
-7070.4395 -4082.1208 -21.8206 37.7944 205.2251 332.1963 Bc
f
0 BB
169.7368 390.4736 m
180.0986 384.4526 173.7002 367.5996 196.3262 370.5747 C
179.5693 363.0762 190.5796 347.4487 189.813 334.2148 C
196.8623 344.3052 218.3438 341.6973 216.9302 356.6377 C
219.856 346.0806 235.5376 348.0879 245.2041 338.8223 C
239.9463 348.6382 251.8159 368.9253 236.48 373.5161 C
251.8867 373.0586 250.6641 389.0601 260.3003 399.8086 C
244.4102 397.2949 236.3892 410.2651 227.5659 399.2847 C
233.8413 412.4272 215.7085 420.0166 213.8599 430.9531 C
210.4004 417.9907 191.5859 411.3994 201.2305 397.208 C
187.8408 409.6372 176.5977 390.8213 169.7368 390.4736 C
Bb
1 (GradientFill 8) 241.062 433.52 -116 114.4082 1 0 0 1 0 0 Bg
-50.1532 -102.8294 -84.9109 41.4138 283.5171 412.8135 Xm
-3561.4717 -7302.1001 -84.9109 41.4138 3844.9893 7714.9136 Bc
-50.1532 -102.8294 -84.9109 41.4138 283.5171 412.8135 Bm
-3561.4717 -7302.1001 -84.9109 41.4138 233.3638 309.9839 Bc
f
0 BB
172.3281 389.8154 m
182.0444 384.1694 173.4648 369.457 199.4771 371.5269 C
181.4458 362.7197 191.2852 349.1201 190.5669 336.7104 C
197.1768 346.1729 217.564 342.7334 216.1348 360.2544 C
220.708 346.7783 234.1499 350.5366 243.2139 341.8481 C
238.2842 351.0527 251.7666 367.6118 231.8677 374.6875 C
251.1968 373.3916 248.4775 388.0493 257.5137 398.1284 C
242.6133 395.7715 236.1792 410.0215 224.9326 394.8804 C
233.1504 412.959 215.437 417.5186 213.7036 427.7734 C
210.4595 415.6182 192.1333 408.1797 204.9141 392.9268 C
189.2427 408.4849 178.7617 390.1411 172.3281 389.8154 C
Bb
0 0 0 0 Bh
1 (GradientFill 6) 214.9209 382.2422 89 51.1251 1 0 0 1 0 0 Bg
0.892255 51.1173 51.1173 -0.892255 214.9209 382.2422 Bm
f
0 BB
*u
0 g
182.8135 378.7202 m
190.4229 370.3364 202.6089 374.7012 211.2114 379.8149 C
202.0225 375.8149 191.2852 371.7988 182.8135 378.7202 C
182.8135 378.7202 L
f
0 g
177.4141 388.6802 m
186.395 387.9355 202.6553 383.3765 210.7749 380.5488 C
202.0503 375.7012 186.2964 376.3618 179.104 384.3345 C
187.3638 378.2031 201.8184 377.2754 210.7749 380.5488 C
202.8208 381.0815 185.4014 386.2578 177.4141 388.6802 C
177.4141 388.6802 L
f
1 D
0 g
180.7827 391.6021 m
190.2842 392.9502 204.9824 387.2183 210.7969 380.6265 C
205.8716 388.4868 190.3613 394.9834 180.7827 391.6021 C
180.7827 391.6021 L
f
187.0283 395.3081 m
197.6929 397.3306 205.3716 388.8135 211.5015 380.957 C
206.4077 389.5166 197.6348 399.0146 187.0283 395.3081 C
Bb
0 0 0 0 Bh
1 (GradientFill 6) 196.1626 384.6289 105 21.9952 1 0 0 1 0 0 Bg
-5.69279 21.2458 21.2458 5.69279 196.1626 384.6289 Bm
f
0 BB
*U
*u
0 D
0 g
207.2393 348.4707 m
217.3145 353.6367 215.5527 365.5303 212.8535 375.1665 C
214.3247 365.2534 216.1265 354.8496 207.2393 348.4707 C
207.2393 348.4707 L
f
0 g
196.2178 345.8481 m
199.2734 354.3262 207.1885 367.8315 212.0313 374.936 C
214.4419 365.2505 210.4229 351.2197 200.853 346.3491 C
208.9224 352.7295 212.8618 365.436 212.0313 374.936 C
209.4473 367.3945 200.6343 352.9302 196.2178 345.8481 C
196.2178 345.8481 L
f
0 g
194.2729 349.8613 m
193.5 359.9893 203.0908 372.2671 211.9619 374.9771 C
204.0845 371.0786 195.4429 359.3862 194.2729 349.8613 C
194.2729 349.8613 L
f
192.3193 356.8555 m
191.5 368.061 202.2363 373.0522 211.8257 375.7441 C
202.6455 371.8691 193.1411 367.6792 192.3193 356.8555 C
Bb
0 0 0 0 Bh
1 (GradientFill 6) 204.7461 360.1982 30 19.9284 1 0 0 1 0 0 Bg
17.2585 9.96419 9.96419 -17.2585 204.7461 360.1982 Bm
f
0 BB
*U
*u
0 g
205.8745 410.2354 m
199.6943 400.7485 206.5659 390.2979 213.6938 383.2739 C
207.4941 391.1484 201.3276 400.2856 205.8745 410.2354 C
205.8745 410.2354 L
f
0 g
214.1392 417.9849 m
215.6963 409.1084 214.9688 392.4536 214.293 383.8823 C
207.3911 391.0923 204.4761 406.2686 210.3643 415.248 C
206.5283 405.7036 208.8545 391.7158 214.293 383.8823 C
212.791 391.7114 213.8218 409.6445 214.1392 417.9849 C
214.1392 417.9849 L
f
1 D
0 g
217.8198 415.4673 m
221.5337 406.6182 219.2754 391.1768 214.374 383.8809 C
220.728 390.6387 223.5195 407.0596 217.8198 415.4673 C
217.8198 415.4673 L
f
222.9888 410.3662 m
227.6499 400.563 220.917 391.2051 214.8726 383.2832 C
221.8599 390.3813 229.2637 401.0464 222.9888 410.3662 C
Bb
0 0 0 0 Bh
1 (GradientFill 6) 215.2866 399.9355 -178 21.5722 1 0 0 1 0 0 Bg
-21.5591 -0.752858 -0.752858 21.5591 215.2866 399.9355 Bm
f
0 BB
*U
*u
0 D
0 g
240.3335 398.7163 m
229.2734 401.1387 222.21 391.6211 218.1636 382.4688 C
223.334 391.0542 229.4185 399.4473 240.3335 398.7163 C
240.3335 398.7163 L
f
0 g
250.5059 393.7285 m
242.7554 389.1309 227.2002 384.5249 218.9443 382.124 C
223.2451 391.1304 236.1284 398.6196 246.6104 396.2905 C
236.3262 396.5005 224.3462 389.9824 218.9443 382.124 C
225.7354 386.2993 242.5933 391.0737 250.5059 393.7285 C
250.5059 393.7285 L
f
0 g
249.4541 389.395 m
243.6079 381.0884 227.5405 378.4961 218.9717 382.0479 C
227.5303 380.0454 242.4922 382.79 249.4541 389.395 C
249.4541 389.395 L
f
246.5122 382.7554 m
240.0166 373.5884 227.7007 377.3467 218.5889 381.3696 C
228.1372 378.52 238.9937 374.9268 246.5122 382.7554 C
Bb
0 0 0 0 Bh
1 (GradientFill 6) 235.9517 387.6465 -109 21.1527 1 0 0 1 0 0 Bg
-6.88665 -20.0003 -20.0003 6.88665 235.9517 387.6465 Bm
f
0 BB
*U
*u
0 g
241.543 362.0811 m
240.0317 373.3022 227.9541 376.7822 217.9688 377.4502 C
227.8057 375.5322 238.4922 372.5869 241.543 362.0811 C
241.543 362.0811 L
f
0 g
240.3403 350.8159 m
233.3667 356.5234 222.9951 369.6641 217.9121 376.5981 C
227.8472 375.6421 240.0127 365.999 241.4136 355.353 C
238.0889 365.0879 227.1455 374.2139 217.9121 376.5981 C
224.1606 371.6479 235.1362 357.3413 240.3403 350.8159 C
240.3403 350.8159 L
f
0 g
235.9087 350.3203 m
226.1025 352.9688 217.4478 367.2798 217.8506 376.5469 C
218.8994 367.8198 227.3188 354.5996 235.9087 350.3203 C
235.9087 350.3203 L
f
228.6631 350.8105 m
217.8257 353.7744 216.4224 366.7354 217.0825 376.6738 C
217.6743 366.7271 218.7329 355.1943 228.6631 350.8105 C
Bb
0 0 0 0 Bh
1 (GradientFill 6) 230.4741 363.3428 -39 19.5454 1 0 0 1 0 0 Bg
15.1896 -12.3003 -12.3003 -15.1896 230.4741 363.3428 Bm
f
0 BB
*U
0.78 0.81 0.81 0.64 k
211.2822 385.9414 m
211.1431 385.394 211.1367 384.8442 211.2427 384.3257 C
211.1997 384.3369 L
209.2607 384.8296 207.2886 383.6563 206.7959 381.7173 c
206.3032 379.7783 207.4761 377.8062 209.4155 377.3135 c
209.4404 377.3066 209.4663 377.3008 209.4912 377.2954 C
208.9609 376.8291 208.561 376.2036 208.374 375.4678 c
207.8813 373.5288 209.0547 371.5566 210.9937 371.064 c
212.9326 370.5708 214.9048 371.7441 215.3975 373.6836 c
215.4258 373.7939 215.4482 373.9058 215.4658 374.0166 C
215.9463 373.3203 216.6709 372.7881 217.5547 372.5635 c
219.4937 372.0708 221.4658 373.2437 221.9585 375.1831 c
222.3262 376.6299 221.7666 378.0952 220.6533 378.9507 C
221.5576 379.4058 222.2671 380.2358 222.5361 381.2939 c
223.0288 383.2334 221.856 385.2056 219.9165 385.6982 c
219.3867 385.833 218.854 385.8428 218.3501 385.7466 C
218.0879 387.0767 217.0874 388.2051 215.6865 388.561 c
213.7471 389.0537 211.7749 387.8804 211.2822 385.9414 c
f
211.3105 380.4126 m
210.8257 378.5044 211.98 376.5635 213.8882 376.0791 c
215.7964 375.5942 217.7373 376.7485 218.2217 378.6563 c
218.7065 380.5649 217.5522 382.5054 215.6445 382.9902 c
213.7358 383.4751 211.7954 382.3208 211.3105 380.4126 c
Bb
0 0 0 0 Bh
1 (GradientFill 7) 214.7661 379.5347 89 4.43851 1 0 0 1 0 0 Bg
0.077463 4.43783 4.43783 -0.077463 214.7661 379.5347 Bm
f
0 BB
211.8149 384.917 m
211.4004 383.2856 212.3872 381.626 214.019 381.2114 c
215.6504 380.7969 217.3101 381.7842 217.7241 383.4155 c
218.1392 385.0474 217.1519 386.7065 215.5205 387.1211 c
213.8887 387.5356 212.2295 386.5483 211.8149 384.917 c
Bb
0 0 0 0 Bh
1 (GradientFill 7) 214.7695 384.166 89 3.795 1 0 0 1 0 0 Bg
0.066232 3.79443 3.79443 -0.066232 214.7695 384.166 Bm
f
0 BB
215.374 382.5083 m
214.9595 380.8765 215.9463 379.2173 217.5781 378.8027 c
219.2095 378.3882 220.8691 379.3755 221.2837 381.0068 c
221.6982 382.6382 220.7114 384.2979 219.0796 384.7124 c
217.4478 385.127 215.7886 384.1396 215.374 382.5083 c
Bb
0 0 0 0 Bh
1 (GradientFill 7) 218.3291 381.7578 89 3.7947 1 0 0 1 0 0 Bg
0.066227 3.79412 3.79412 -0.066227 218.3291 381.7578 Bm
f
0 BB
209.3677 376.1045 m
208.9536 374.4727 209.9404 372.8135 211.5718 372.3989 c
213.2031 371.9844 214.8628 372.9717 215.2773 374.603 c
215.6919 376.2344 214.7051 377.894 213.0732 378.3086 c
211.4419 378.7231 209.7827 377.7363 209.3677 376.1045 c
Bb
0 0 0 0 Bh
1 (GradientFill 7) 212.3228 375.3535 -269 3.7944 1 0 0 1 0 0 Bg
-0.066221 3.79382 3.79382 0.066221 212.3228 375.3535 Bm
f
0 BB
208.0396 381.3628 m
207.6255 379.7314 208.6123 378.0718 210.2441 377.6577 c
211.8755 377.2427 213.5352 378.23 213.9492 379.8613 c
214.3638 381.4932 213.377 383.1523 211.7456 383.5669 c
210.1138 383.9814 208.4546 382.9946 208.0396 381.3628 c
Bb
0 0 0 0 Bh
1 (GradientFill 7) 210.9946 380.6123 -269 3.7947 1 0 0 1 0 0 Bg
-0.066226 3.79412 3.79412 0.066226 210.9946 380.6123 Bm
f
0 BB
214.8882 377.3667 m
214.4736 375.7349 215.4604 374.0752 217.0923 373.6611 c
218.7236 373.2461 220.3833 374.2334 220.7979 375.8647 c
221.2124 377.4966 220.2251 379.1558 218.5938 379.5703 c
216.9619 379.9849 215.3027 378.998 214.8882 377.3667 c
Bb
0 0 0 0 Bh
1 (GradientFill 7) 217.8428 376.6157 89 3.795 1 0 0 1 0 0 Bg
0.066232 3.79443 3.79443 -0.066232 217.8428 376.6157 Bm
f
0 BB
211.793 380.2773 m
211.3784 378.6465 212.3652 376.9868 213.9971 376.5723 c
215.6289 376.1577 217.2881 377.1445 217.7026 378.7764 c
218.1172 380.4077 217.1304 382.0669 215.4985 382.4819 c
213.8667 382.8965 212.2075 381.9092 211.793 380.2773 c
Bb
0 0 0 0 Bh
1 (GradientFill 7) 214.748 379.5273 89 3.795 1 0 0 1 0 0 Bg
0.066232 3.79443 3.79443 -0.066232 214.748 379.5273 Bm
f
0 BB
99.1313 168.6289 m
112.9917 87.208 47.7231 95.5586 39.2271 103.3232 C
54.7861 103.1416 54.3721 119.1641 69.3926 125.8936 c
84.8472 132.8164 97.0264 143.0381 99.1313 168.6289 C
Bb
1 (GradientFill 4) 42.8921 95.041 41 91.7633 1 0 0 1 0 0 Bg
69.2546 60.2021 48.9042 -56.2578 29.3506 110.6191 Xm
5990.6768 5207.6162 48.9042 -56.2578 -5961.3262 -5096.9971 Bc
69.2546 60.2021 48.9042 -56.2578 29.3506 110.6191 Bm
5990.6768 5207.6162 48.9042 -56.2578 98.6055 170.8213 Bc
f
0 BB
*u
0 g
98.6177 121.4268 m
101.1162 133.4941 101.7495 146.0127 100.8403 158.3047 C
100.6572 160.8848 100.3921 163.4531 100.0479 166.0098 C
101.5366 152.4766 100.7446 138.7686 96.9873 125.6582 C
96.7632 124.8271 96.5269 124.001 96.2813 123.1768 C
95.5703 123.6846 94.8516 124.1836 94.1191 124.6611 C
94.479 125.8262 94.8193 126.9961 95.1372 128.1729 C
100.668 147.4717 99.8325 168.0527 94.7725 187.4941 C
95.7603 188.207 L
95.8506 187.957 L
103.7974 166.1211 106.6455 141.9971 100.9922 119.4453 C
100.2163 120.126 99.4258 120.7891 98.6177 121.4268 C
98.6177 121.4268 L
f
1 D
98.9531 173.7148 m
100.3804 167.4863 101.3433 161.1445 101.7974 154.7373 C
101.9556 152.6006 102.0645 150.457 102.127 148.3105 C
102.0068 157.6367 100.731 166.9814 98.5171 176.0967 C
98.6699 175.3037 98.8154 174.5098 98.9531 173.7148 C
Bb
1 (GradientFill 4) 118.9766 124.5361 127 70.7878 1 0 0 1 0 0 Bg
-42.6012 56.5336 34.7834 26.2112 101.585 111.4307 Xm
-4820.3701 6396.8457 34.7834 26.2112 4921.9551 -6285.415 Bc
-42.6012 56.5336 34.7834 26.2112 101.585 111.4307 Bm
-4820.3701 6396.8457 34.7834 26.2112 58.9839 167.9639 Bc
f
0 BB
*U
0 D
100.7007 169.9951 m
109.1064 95.665 138.2388 76.1602 157.999 89.9326 C
149.5342 91.4766 149.5981 107.1494 137.7568 115.9463 c
123.0522 126.8701 110.52 143.9258 100.7007 169.9951 C
Bb
1 (GradientFill 4) 152.9033 143.5068 -150 56.394 1 0 0 1 0 0 Bg
-48.8386 -28.197 -52.0163 90.0948 179.3994 97.6143 Xm
-6953.6313 -4014.6814 -52.0163 90.0948 7133.0313 4112.2959 Bc
-48.8386 -28.197 -52.0163 90.0948 179.3994 97.6143 Bm
-6953.6313 -4014.6814 -52.0163 90.0948 130.5605 69.417 Bc
f
0 BB
0 53.0283 m
11.0332 52.251 22.2051 53.626 32.6553 57.2627 C
55.0815 65.1045 74.1201 82.207 85.8008 102.8311 C
97.5542 123.5615 101.9404 148.3789 97.8247 171.7793 C
94.0552 195.3281 81.1123 216.6436 64.2744 233.4336 C
59.3169 238.4082 53.938 242.9121 48.2344 246.9463 C
55.0508 242.4287 61.4355 237.248 67.2417 231.4229 C
83.9268 214.7852 96.751 193.6641 100.4863 170.3301 C
104.5654 147.1426 100.2178 122.5518 88.5723 102.0098 C
76.9966 81.5732 58.1328 64.626 35.9106 56.8555 C
24.4316 52.8604 12.0752 51.6172 0 52.9844 C
0 53.0283 L
Bb
1 (GradientFill 4) 120.4673 111.0371 -202 157.8111 1 0 0 1 0 0 Bg
-146.3199 59.1171 75.6358 187.2052 82.6494 17.4346 Xm
-7412.7231 2994.9348 75.6358 187.2052 7495.3721 -2977.5 Bc
-146.3199 59.1171 75.6358 187.2052 82.6494 17.4346 Bm
-7412.7231 2994.9348 75.6358 187.2052 -63.6704 76.5518 Bc
f
0 BB
67.9282 139.999 m
79.0518 135.4043 88.5962 150.7881 100.022 130.9209 C
95.7847 148.8633 114.9688 149.6113 125.0601 158.2939 C
121.3086 146.5146 136.4912 130.9658 123.7085 122.9824 C
133.9165 127.0869 141.8794 113.3506 155.1675 111.2891 C
144.1294 109.4971 135.1821 87.6533 122.166 97.0898 C
131.9277 85.0762 118.415 76.292 115.7163 62.0479 C
108.0298 76.2588 92.7896 74.749 96.1689 88.4854 C
89.5107 75.4619 72.3955 85.3008 62.5425 80.1055 C
70.7749 90.7725 64.5581 109.8027 81.7637 110.7646 C
63.6802 113.8662 71.8354 134.3135 67.9282 139.999 C
Bb
1 (GradientFill 4) 77.3701 157.4893 -63 112.9097 1 0 0 1 0 0 Bg
51.2599 -100.6033 -89.7124 -45.7107 122.2266 180.3447 Xm
3615.4912 -7095.8008 -89.7124 -45.7107 -3493.2646 7276.1455 Bc
51.2599 -100.6033 -89.7124 -45.7107 122.2266 180.3447 Bm
3615.4912 -7095.8008 -89.7124 -45.7107 173.4863 79.7412 Bc
f
0 BB
70.0337 138.333 m
80.4653 134.0244 86.9702 149.8428 101.1841 127.8262 C
97.2134 147.584 114.0654 148.0283 123.5283 156.1709 C
120.0103 145.125 135.189 130.957 120.3379 121.4102 C
133.8794 125.9814 139.0791 112.9639 151.5396 111.0313 C
141.189 109.3506 136.1997 88.4941 118.4175 100.0547 C
131.2412 85.4238 117.8877 78.6533 115.3569 65.2959 C
108.1494 78.6221 92.8555 75.0645 98.0771 93.2725 C
88.665 75.6895 74.2231 87.041 64.9839 82.1699 C
72.7031 92.1719 67.4609 111.3311 87.4263 110.4365 C
65.4546 113.4502 73.6982 133.001 70.0337 138.333 C
Bb
0 0 0 0 Bh
1 (GradientFill 6) 108.2617 110.7334 -269 51.4545 1 0 0 1 0 0 Bg
-0.897999 51.4467 51.4467 0.897999 108.2617 110.7334 Bm
f
0 BB
*u
0 g
85.2817 136.7344 m
96.6123 135.7764 100.5615 123.3906 101.7285 113.4092 C
99.3154 123.1797 95.9712 134.1963 85.2817 136.7344 C
85.2817 136.7344 L
f
1 D
0 g
74.042 134.9678 m
80.1138 128.2559 93.6685 118.0635 100.877 113.3096 C
99.4233 123.2275 89.2876 135.3936 78.5396 136.2695 C
88.4688 133.4189 98.0259 122.4521 100.877 113.3096 C
95.6006 119.3311 80.8457 130.0723 74.042 134.9678 C
74.042 134.9678 L
f
0 g
73.7651 130.4971 m
76.9092 120.793 91.5527 112.3799 100.8281 113.2451 C
92.0225 113.8633 78.4844 122.0947 73.7651 130.4971 C
73.7651 130.4971 L
f
74.6172 123.2539 m
78.1289 112.5313 91.0581 111.3242 100.9941 112.4805 C
90.9868 112.5801 79.5083 113.5117 74.6172 123.2539 C
Bb
0 0 0 0 Bh
1 (GradientFill 6) 89.145 123.9385 74 20.0064 1 0 0 1 0 0 Bg
5.51451 19.2314 19.2314 -5.51451 89.145 123.9385 Bm
f
0 BB
*U
*u
0 D
0 g
124.3145 135.6953 m
126.3374 124.5059 115.7734 118.6572 106.4385 114.9346 C
115.2456 119.8057 124.6455 124.7139 124.3145 135.6953 C
124.3145 135.6953 L
f
1 D
0 g
119.6846 146.0889 m
114.7837 138.4795 108.8359 123.9277 106.1211 115.7305 C
115.3193 119.7139 124.0625 131.4785 122.1118 142.084 C
121.9429 131.7549 114.2075 120.8613 106.1211 115.7305 C
110.562 122.3916 116.728 138.2451 119.6846 146.0889 C
119.6846 146.0889 L
f
0 g
115.2964 145.1924 m
106.7441 139.6318 102.7979 124.4912 106.0459 115.7607 C
104.3521 124.4238 108.4106 138.4492 115.2964 145.1924 C
115.2964 145.1924 L
f
108.5244 142.4854 m
99.084 136.3047 101.6499 124.6943 105.3511 115.4014 C
102.8438 125.0898 100.3896 135.2285 108.5244 142.4854 C
Bb
0 0 0 0 Bh
1 (GradientFill 6) 114.4136 129.8887 149 20.4041 1 0 0 1 0 0 Bg
-17.4897 10.5089 10.5089 17.4897 114.4136 129.8887 Bm
f
0 BB
*U
*u
0 D
0 g
74.2012 99.1133 m
78.002 109.8301 90.5308 110.7217 100.4829 109.3184 C
90.4189 109.4619 79.3672 108.8096 74.2012 99.1133 C
74.2012 99.1133 L
f
1 D
0 g
73.0596 87.793 m
81.0918 91.9639 93.936 102.7021 100.3628 108.4697 C
90.4009 109.5781 76.5137 102.6475 72.9409 92.4736 C
78.2168 101.3555 90.7959 108.0303 100.3628 108.4697 C
93.2002 104.8926 79.5205 93.1328 73.0596 87.793 C
73.0596 87.793 L
f
0 g
77.3135 86.3916 m
87.498 86.9717 98.897 99.2139 100.4126 108.4053 C
97.5815 100.0449 86.6387 88.8252 77.3135 86.3916 C
77.3135 86.3916 L
f
84.5356 85.3779 m
95.7993 86.0557 99.7925 98.4678 101.1943 108.3721 C
98.5601 98.7178 95.2002 87.6387 84.5356 85.3779 C
Bb
0 0 0 0 Bh
1 (GradientFill 6) 88.4795 97.1162 -1 20.0788 1 0 0 1 0 0 Bg
20.0758 -0.350424 -0.350424 -20.0758 88.4795 97.1162 Bm
f
0 BB
*U
*u
0 D
0 g
104.4097 78.6455 m
95.731 85.9922 99.0166 97.4326 103.8511 106.2432 C
100.1548 96.8818 97.1689 86.9082 104.4097 78.6455 C
104.4097 78.6455 L
f
1 D
0 g
114.5933 73.5703 m
113.5347 82.5596 107.7222 97.7793 104.6025 105.8311 C
100.0396 96.9063 101.9219 82.0586 110.1733 75.1162 C
103.7334 83.1943 101.627 96.7275 104.6025 105.8311 C
105.4131 97.8662 111.8853 81.5029 114.5933 73.5703 C
114.5933 73.5703 L
f
0 D
0 g
117.4092 77.0537 m
118.4336 86.6367 111.4976 100.248 104.6802 105.8555 C
112.7397 101.1846 120.4712 86.7842 117.4092 77.0537 C
117.4092 77.0537 L
f
120.9126 83.4502 m
122.5732 94.2236 113.085 100.6934 104.9878 106.5742 C
113.7549 101.7578 124.2651 94.2236 120.9126 83.4502 C
Bb
0 0 0 0 Bh
1 (GradientFill 6) 111.4102 89.4131 -70 21.1686 1 0 0 1 0 0 Bg
7.24009 -19.892 -19.892 -7.24009 111.4102 89.4131 Bm
f
0 BB
*U
*u
0 g
134.377 100.0244 m
124.5024 94.3857 114.3599 101.9004 107.7368 109.46 C
115.2666 102.7813 124.1343 96.0508 134.377 100.0244 C
134.377 100.0244 L
f
1 D
0 g
142.6318 107.8545 m
133.8247 109.9375 117.0146 110.1982 108.3813 110.0244 C
115.2041 102.6807 130.3179 98.8555 139.6665 104.2305 C
129.8716 100.9463 115.9155 104.1113 108.3813 110.0244 C
116.1426 108.0576 134.2515 108.0264 142.6318 107.8545 C
142.6318 107.8545 L
f
0 D
0 g
140.3242 111.6924 m
131.6714 115.9365 115.9878 114.5908 108.3853 110.1055 C
115.5337 116.0781 132.2305 117.9014 140.3242 111.6924 C
140.3242 111.6924 L
f
1 D
135.5137 117.1748 m
126.5396 124.0137 115.3423 117.2285 107.8154 110.6406 C
116.1128 116.2344 125.96 122.4238 135.5137 117.1748 C
Bb
0 0 0 0 Bh
1 (GradientFill 6) 126.9297 108.5996 -140 22.3325 1 0 0 1 0 0 Bg
-17.1077 -14.3551 -14.3551 17.1077 126.9297 108.5996 Bm
f
0 BB
*U
0 D
0.78 0.81 0.81 0.64 k
96.8838 109.6152 m
97.2354 110.0605 97.6699 110.4014 98.1489 110.6328 C
98.1133 110.6602 L
96.5376 111.9063 96.2705 114.1953 97.5171 115.7715 c
98.7637 117.3477 101.0532 117.6143 102.6289 116.3672 c
102.6494 116.3516 102.6699 116.335 102.6899 116.3184 C
102.7378 117.0254 102.9932 117.7256 103.4663 118.3242 c
104.7129 119.8994 107.002 120.167 108.5776 118.9199 c
110.1538 117.6729 110.4204 115.3848 109.1738 113.8086 c
109.1025 113.7188 109.0273 113.6328 108.9497 113.5508 C
109.7979 113.5918 110.6646 113.3389 111.3828 112.7705 c
112.9585 111.5234 113.2256 109.2344 111.979 107.6592 c
111.0488 106.4834 109.5386 106.0361 108.1768 106.4033 C
108.3647 105.4033 108.1357 104.3311 107.4551 103.4707 c
106.2085 101.8945 103.9194 101.6279 102.3438 102.875 c
101.9131 103.2158 101.5806 103.6348 101.3496 104.0957 C
100.1284 103.4932 98.6177 103.6035 97.4795 104.5039 c
95.9038 105.751 95.6372 108.04 96.8838 109.6152 c
f
101.312 112.9648 m
102.5386 114.5156 104.791 114.7783 106.3418 113.5518 c
107.8921 112.3252 108.1553 110.0723 106.9282 108.5215 c
105.7017 106.9717 103.4492 106.709 101.8989 107.9355 c
100.3477 109.1621 100.0854 111.415 101.312 112.9648 c
Bb
0 0 0 0 Bh
1 (GradientFill 7) 104.1201 110.7441 89 4.4552 1 0 0 1 0 0 Bg
0.077754 4.45452 4.45452 -0.077754 104.1201 110.7441 Bm
f
0 BB
98.0259 109.8154 m
99.0747 111.1416 101.0005 111.3662 102.3267 110.3174 c
103.6523 109.2676 103.877 107.3418 102.8281 106.0166 c
101.7793 104.6904 99.853 104.4658 98.5273 105.5146 c
97.2012 106.5635 96.9766 108.4893 98.0259 109.8154 c
Bb
0 0 0 0 Bh
1 (GradientFill 7) 100.4268 107.916 -269 3.8092 1 0 0 1 0 0 Bg
-0.066479 3.80862 3.80862 0.066479 100.4268 107.916 Bm
f
0 BB
102.1182 108.4443 m
103.167 109.7705 105.0933 109.9951 106.4189 108.9463 c
107.7451 107.8975 107.9697 105.9717 106.9204 104.6455 c
105.8716 103.3193 103.9458 103.0947 102.6196 104.1436 c
101.2939 105.1934 101.0693 107.1191 102.1182 108.4443 c
Bb
0 0 0 0 Bh
1 (GradientFill 7) 104.5195 106.5449 -269 3.8092 1 0 0 1 0 0 Bg
-0.066479 3.80862 3.80862 0.066479 104.5195 106.5449 Bm
f
0 BB
103.5645 117.1426 m
104.6133 118.4688 106.5391 118.6934 107.8652 117.6445 c
109.1909 116.5947 109.4155 114.6689 108.3667 113.3438 c
107.3179 112.0176 105.3916 111.793 104.0659 112.8418 c
102.7402 113.8906 102.5156 115.8164 103.5645 117.1426 c
Bb
0 0 0 0 Bh
1 (GradientFill 7) 105.9658 115.2432 89 3.8095 1 0 0 1 0 0 Bg
0.066485 3.80892 3.80892 -0.066485 105.9658 115.2432 Bm
f
0 BB
98.5591 114.9951 m
99.6079 116.3203 101.5337 116.5459 102.8599 115.4961 c
104.1855 114.4473 104.4102 112.5215 103.3613 111.1953 c
102.3125 109.8701 100.3862 109.6455 99.0605 110.6943 c
97.7344 111.7432 97.5098 113.6689 98.5591 114.9951 c
Bb
0 0 0 0 Bh
1 (GradientFill 7) 100.96 113.0957 -269 3.8092 1 0 0 1 0 0 Bg
-0.066479 3.80862 3.80862 0.066479 100.96 113.0957 Bm
f
0 BB
105.9243 111.9688 m
106.9736 113.2939 108.8994 113.5195 110.2251 112.4697 c
111.5513 111.4209 111.7759 109.4951 110.7271 108.1689 c
109.6777 106.8438 107.752 106.6191 106.4258 107.668 c
105.1001 108.7168 104.8755 110.6426 105.9243 111.9688 c
Bb
0 0 0 0 Bh
1 (GradientFill 7) 108.3257 110.0693 89 3.8092 1 0 0 1 0 0 Bg
0.06648 3.80862 3.80862 -0.06648 108.3257 110.0693 Bm
f
0 BB
101.7139 112.6621 m
102.7627 113.9883 104.689 114.2129 106.0146 113.1641 c
107.3408 112.1152 107.5654 110.1885 106.5161 108.8633 c
105.4673 107.5371 103.5415 107.3125 102.2153 108.3613 c
100.8896 109.4102 100.665 111.3369 101.7139 112.6621 c
Bb
0 0 0 0 Bh
1 (GradientFill 7) 104.1152 110.7627 -269 3.8092 1 0 0 1 0 0 Bg
-0.066479 3.80862 3.80862 0.066479 104.1152 110.7627 Bm
f
0 BB
0 0 0 0 k
0 XR
333.7686 508.1484 m
333.6582 509.415 333.2051 510.3628 332.4004 511.0005 c
331.5967 511.6382 330.4453 511.9526 328.9482 511.9526 c
327.5938 511.9526 326.4932 511.7031 325.6426 511.1943 c
324.793 510.6909 324.3721 509.9561 324.3721 508.9897 c
324.3721 508.1299 324.6953 507.4922 325.3516 507.0718 c
326.0078 506.6509 327.2607 506.2349 329.1094 505.8188 c
330.75 505.4585 332.0908 505.0889 333.1309 504.7095 c
334.1709 504.3306 335.0586 503.7437 335.7979 502.9438 c
336.5371 502.1445 336.9072 501.0718 336.9072 499.7266 c
336.9072 498.021 336.2275 496.6021 334.8691 495.4746 c
333.5146 494.3467 331.7393 493.7827 329.5576 493.7827 c
326.7656 493.7827 324.6768 494.4067 323.2949 495.6499 c
321.9082 496.8979 321.1729 498.5112 321.0947 500.499 C
323.5859 500.7163 L
323.7012 499.126 324.3164 497.9702 325.4258 497.2402 c
326.5352 496.5146 327.875 496.1494 329.4473 496.1494 c
330.9219 496.1494 332.1094 496.4546 333.0156 497.0601 c
333.9209 497.6655 334.3789 498.4834 334.3789 499.5234 c
334.3789 500.605 333.9023 501.3955 332.9551 501.8945 c
332.0078 502.3892 330.418 502.8794 328.1807 503.3643 c
325.9482 503.8452 324.3398 504.5249 323.3545 505.3984 c
322.3701 506.2764 321.876 507.4136 321.876 508.814 c
321.876 510.3994 322.5 511.7168 323.748 512.7524 c
324.9912 513.7925 326.6875 514.3101 328.8369 514.3101 c
331.042 514.3101 332.8125 513.7925 334.1523 512.7617 c
335.4932 511.7261 336.2051 510.2563 336.2881 508.3521 C
333.7686 508.1484 L
f
*u
352.6602 494.1201 m
350.0986 494.1201 L
349.8633 494.5732 349.6973 495.1646 349.5996 495.895 C
347.9639 494.4854 346.1982 493.7827 344.3027 493.7827 c
342.7861 493.7827 341.5898 494.1616 340.7158 494.9199 c
339.8379 495.6777 339.4033 496.6807 339.4033 497.9243 c
339.4033 499.1167 339.8242 500.0967 340.665 500.8687 c
341.5107 501.6406 342.9766 502.1533 345.0605 502.4077 c
347.335 502.7451 l
348.1855 502.8838 348.8838 503.0503 349.4336 503.249 C
349.4336 503.9795 349.415 504.4971 349.3691 504.7974 c
349.3223 505.0977 349.1885 505.4121 348.9668 505.7402 c
348.7451 506.064 348.3936 506.3276 347.9033 506.5264 c
347.418 506.7251 346.7617 506.8218 345.9434 506.8218 c
344.8945 506.8218 344.0674 506.6279 343.457 506.2397 c
342.8467 505.8511 342.4307 505.1304 342.2041 504.0718 C
339.8193 504.3862 L
340.083 505.856 340.7529 506.9609 341.8389 507.7002 c
342.9209 508.4443 344.4141 508.814 346.3086 508.814 c
348.0332 508.814 349.2998 508.5596 350.1035 508.0469 c
350.9121 507.5386 351.4121 506.9238 351.5967 506.1982 c
351.7813 505.4771 351.874 504.5479 351.874 503.4106 c
351.874 500.1333 l
351.874 498.1367 351.9111 496.8013 351.9893 496.1167 c
352.0635 495.4375 352.29 494.772 352.6602 494.1201 C
352.6602 494.1201 L
f
1 D
349.4336 500.4434 m
349.4336 501.3262 L
348.1621 500.9009 346.6045 500.5635 344.7646 500.314 c
342.9209 500.0688 342.001 499.2876 342.001 497.98 c
342.001 497.3188 342.251 496.7778 342.7451 496.3481 c
343.2441 495.918 343.9561 495.7056 344.8848 495.7056 c
346.0869 495.7056 347.1455 496.0615 348.0605 496.7822 c
348.9756 497.499 349.4336 498.7192 349.4336 500.4434 c
f
*U
0 D
375.0957 494.1201 m
372.6602 494.1201 L
372.6602 503.1934 l
372.6602 503.8589 372.6143 504.4321 372.5264 504.9087 c
372.4336 505.3799 372.2021 505.8008 371.8281 506.1655 c
371.4541 506.5308 370.8672 506.7158 370.0723 506.7158 c
369.1152 506.7158 368.292 506.3784 367.5947 505.7129 c
366.9004 505.0425 366.5547 503.9609 366.5547 502.4634 c
366.5547 494.1201 L
364.1133 494.1201 L
364.1133 503.4619 l
364.1133 504.7095 363.8965 505.5645 363.457 506.022 c
363.0186 506.4844 362.3994 506.7158 361.5947 506.7158 c
360.5498 506.7158 359.6904 506.3506 359.0156 505.6294 c
358.3447 504.9087 358.0078 503.5586 358.0078 501.5801 c
358.0078 494.1201 L
355.5713 494.1201 L
355.5713 508.4863 L
357.7627 508.4863 L
357.7627 506.4844 L
357.8184 506.4844 L
358.7939 508.0376 360.2217 508.814 362.1123 508.814 c
363.166 508.814 364.0352 508.6016 364.7188 508.1807 c
365.3984 507.7651 365.8936 507.1318 366.1982 506.2949 C
367.2656 507.9731 368.7402 508.814 370.627 508.814 c
372.1191 508.814 373.2334 508.4121 373.9824 507.6079 c
374.7266 506.8037 375.0957 505.5972 375.0957 503.9932 c
375.0957 494.1201 L
f
*u
381.0264 506.6323 m
381.9414 508.084 383.3096 508.814 385.1309 508.814 c
387.0166 508.814 388.5098 508.1299 389.6006 506.7617 c
390.6914 505.3936 391.2373 503.6143 391.2373 501.4185 c
391.2373 499.0801 390.6357 497.2217 389.4248 495.8491 c
388.2139 494.4712 386.7305 493.7827 384.9688 493.7827 c
383.4248 493.7827 382.1865 494.3975 381.2578 495.6226 C
381.1924 495.6226 L
381.1924 488.5967 L
378.752 488.5967 L
378.752 508.4863 L
380.9756 508.4863 L
380.9756 506.6323 L
381.0264 506.6323 L
381.0264 506.6323 L
f
1 D
384.8076 495.7842 m
385.9443 495.7842 386.8867 496.2554 387.6318 497.2031 c
388.376 498.146 388.7451 499.5513 388.7451 501.4185 c
388.7451 503.1797 388.3896 504.5342 387.668 505.4814 c
386.9521 506.4292 386.0322 506.9053 384.9141 506.9053 c
383.7578 506.9053 382.8105 506.3735 382.0664 505.3198 c
381.3174 504.2612 380.9473 502.8931 380.9473 501.2153 c
380.9473 499.4355 381.3037 498.0859 382.0156 497.166 c
382.7314 496.2466 383.6611 495.7842 384.8076 495.7842 c
f
*U
0 D
396.5889 494.1201 m
394.1494 494.1201 L
394.1494 513.9727 L
396.5889 513.9727 L
396.5889 494.1201 L
f
*u
412.7998 500.6885 m
402.0303 500.6885 L
402.1309 499.0981 402.584 497.8828 403.3936 497.0459 c
404.2021 496.2046 405.21 495.7842 406.4209 495.7842 c
407.3496 495.7842 408.1309 496.0337 408.7646 496.5234 c
409.3926 497.0137 409.8779 497.7578 410.2109 498.7515 C
412.7168 498.4419 L
412.3096 496.9395 411.5654 495.7891 410.4844 494.9893 c
409.3975 494.1846 408.043 493.7827 406.4209 493.7827 c
404.2627 493.7827 402.5752 494.4434 401.3594 495.7656 c
400.1484 497.0879 399.5381 498.8945 399.5381 501.1875 c
399.5381 503.457 400.1299 505.292 401.3086 506.7017 c
402.4873 508.1069 404.1426 508.814 406.2822 508.814 c
407.3311 508.814 408.3389 508.583 409.3096 508.1206 c
410.2803 507.6631 411.1035 506.8774 411.7822 505.7729 c
412.457 504.668 412.7998 502.9717 412.7998 500.6885 C
412.7998 500.6885 L
f
1 D
410.2939 502.6943 m
410.1924 504.1553 409.7393 505.2085 408.9307 505.856 c
408.1221 506.4985 407.2393 506.8218 406.2822 506.8218 c
405.1357 506.8218 404.1934 506.4385 403.4531 505.6709 c
402.7139 504.9038 402.2842 503.9097 402.1689 502.6943 C
410.2939 502.6943 L
f
*U
0 D
429.0469 494.1479 m
428.3252 494.0044 427.7158 493.9307 427.2207 493.9307 c
426.1533 493.9307 425.377 494.1201 424.8916 494.4946 c
424.4014 494.8691 424.1055 495.3452 423.9951 495.9229 c
423.8877 496.5005 423.833 497.3003 423.833 498.3311 c
423.833 506.605 L
422.0625 506.605 L
422.0625 508.4863 L
423.833 508.4863 L
423.833 512.0635 L
426.2734 513.5381 L
426.2734 508.4863 L
428.709 508.4863 L
428.709 506.605 L
426.2734 506.605 L
426.2734 498.1968 l
426.2734 497.4756 426.3467 496.9629 426.4951 496.6577 c
426.6436 496.3574 427.0225 496.2046 427.6279 496.2046 c
427.9785 496.2046 428.3389 496.2417 428.709 496.3154 C
429.0469 494.1479 L
f
*u
443.6338 500.6885 m
432.8643 500.6885 L
432.9658 499.0981 433.4189 497.8828 434.2275 497.0459 c
435.0371 496.2046 436.0449 495.7842 437.2559 495.7842 c
438.1846 495.7842 438.9658 496.0337 439.5986 496.5234 c
440.2275 497.0137 440.7129 497.7578 441.0459 498.7515 C
443.5508 498.4419 L
443.1445 496.9395 442.4004 495.7891 441.3184 494.9893 c
440.2324 494.1846 438.8779 493.7827 437.2559 493.7827 c
435.0967 493.7827 433.4102 494.4434 432.1943 495.7656 c
430.9834 497.0879 430.373 498.8945 430.373 501.1875 c
430.373 503.457 430.9648 505.292 432.1436 506.7017 c
433.3223 508.1069 434.9766 508.814 437.1172 508.814 c
438.166 508.814 439.1738 508.583 440.1445 508.1206 c
441.1152 507.6631 441.9375 506.8774 442.6172 505.7729 c
443.292 504.668 443.6338 502.9717 443.6338 500.6885 C
443.6338 500.6885 L
f
1 D
441.1289 502.6943 m
441.0273 504.1553 440.5742 505.2085 439.7656 505.856 c
438.9561 506.4985 438.0742 506.8218 437.1172 506.8218 c
435.9707 506.8218 435.0273 506.4385 434.2881 505.6709 c
433.5488 504.9038 433.1191 503.9097 433.0029 502.6943 C
441.1289 502.6943 L
f
*U
0 D
458.3936 494.1201 m
455.3887 494.1201 L
451.6494 499.8057 L
447.873 494.1201 L
444.9053 494.1201 L
450.1748 501.6079 L
445.3262 508.4863 L
448.3447 508.4863 L
450.3135 505.5186 451.3857 503.8589 451.5664 503.5171 C
455.0879 508.4863 L
458 508.4863 L
453.0313 501.7422 L
458.3936 494.1201 L
f
466.043 494.1479 m
465.3213 494.0044 464.7119 493.9307 464.2168 493.9307 c
463.1494 493.9307 462.373 494.1201 461.8877 494.4946 c
461.3975 494.8691 461.1016 495.3452 460.9912 495.9229 c
460.8838 496.5005 460.8291 497.3003 460.8291 498.3311 c
460.8291 506.605 L
459.0586 506.605 L
459.0586 508.4863 L
460.8291 508.4863 L
460.8291 512.0635 L
463.2695 513.5381 L
463.2695 508.4863 L
465.7051 508.4863 L
465.7051 506.605 L
463.2695 506.605 L
463.2695 498.1968 l
463.2695 497.4756 463.3428 496.9629 463.4912 496.6577 c
463.6396 496.3574 464.0186 496.2046 464.624 496.2046 c
464.9746 496.2046 465.335 496.2417 465.7051 496.3154 C
466.043 494.1479 L
f
487.5869 494.1201 m
485.1367 494.1201 L
485.1367 503.1934 l
485.1367 504.3677 484.8828 505.2456 484.3789 505.833 c
483.875 506.4199 483.1221 506.7158 482.1182 506.7158 c
481.125 506.7158 480.2373 506.3691 479.4561 505.6758 c
478.6748 504.9868 478.2861 503.7529 478.2861 501.9731 c
478.2861 494.1201 L
475.8467 494.1201 L
475.8467 513.9727 L
478.2861 513.9727 L
478.2861 506.8496 L
479.4424 508.1577 480.8848 508.814 482.6172 508.814 c
483.5469 508.814 484.4395 508.6245 485.2852 508.2456 c
486.1348 507.8667 486.7314 507.2842 487.0732 506.4985 c
487.416 505.7129 487.5869 504.6172 487.5869 503.2212 c
487.5869 494.1201 L
f
*u
503.7598 500.6885 m
492.9902 500.6885 L
493.0918 499.0981 493.5449 497.8828 494.3535 497.0459 c
495.1631 496.2046 496.1699 495.7842 497.3818 495.7842 c
498.3105 495.7842 499.0918 496.0337 499.7246 496.5234 c
500.3535 497.0137 500.8389 497.7578 501.1719 498.7515 C
503.6768 498.4419 L
503.2705 496.9395 502.5254 495.7891 501.4443 494.9893 c
500.3584 494.1846 499.0039 493.7827 497.3818 493.7827 c
495.2227 493.7827 493.5352 494.4434 492.3193 495.7656 c
491.1094 497.0879 490.499 498.8945 490.499 501.1875 c
490.499 503.457 491.0908 505.292 492.2695 506.7017 c
493.4473 508.1069 495.1025 508.814 497.2422 508.814 c
498.292 508.814 499.2998 508.583 500.2705 508.1206 c
501.2412 507.6631 502.0635 506.8774 502.7432 505.7729 c
503.418 504.668 503.7598 502.9717 503.7598 500.6885 C
503.7598 500.6885 L
f
1 D
501.2549 502.6943 m
501.1533 504.1553 500.7002 505.2085 499.8916 505.856 c
499.082 506.4985 498.1992 506.8218 497.2422 506.8218 c
496.0957 506.8218 495.1533 506.4385 494.4141 505.6709 c
493.6738 504.9038 493.2441 503.9097 493.1289 502.6943 C
501.2549 502.6943 L
f
*U
0 D
514.4424 508.042 m
513.6055 505.791 L
513 506.147 512.4082 506.3228 511.8301 506.3228 c
510.915 506.3228 510.2266 505.9111 509.7549 505.0977 c
509.2881 504.2798 509.0527 503.1333 509.0527 501.6636 c
509.0527 494.1201 L
506.6172 494.1201 L
506.6172 508.4863 L
508.835 508.4863 L
508.835 506.3228 L
508.8906 506.3228 L
509.667 507.9819 510.6836 508.814 511.9365 508.814 c
512.7686 508.814 513.6055 508.5552 514.4424 508.042 C
f
*u
528.4199 500.6885 m
517.6504 500.6885 L
517.751 499.0981 518.2041 497.8828 519.0137 497.0459 c
519.8223 496.2046 520.8301 495.7842 522.041 495.7842 c
522.9697 495.7842 523.751 496.0337 524.3848 496.5234 c
525.0127 497.0137 525.498 497.7578 525.8311 498.7515 C
528.3369 498.4419 L
527.9297 496.9395 527.1855 495.7891 526.1035 494.9893 c
525.0176 494.1846 523.6631 493.7827 522.041 493.7827 c
519.8828 493.7827 518.1953 494.4434 516.9795 495.7656 c
515.7686 497.0879 515.1582 498.8945 515.1582 501.1875 c
515.1582 503.457 515.75 505.292 516.9287 506.7017 c
518.1074 508.1069 519.7627 508.814 521.9023 508.814 c
522.9512 508.814 523.959 508.583 524.9297 508.1206 c
525.9004 507.6631 526.7236 506.8774 527.4023 505.7729 c
528.0771 504.668 528.4199 502.9717 528.4199 500.6885 C
528.4199 500.6885 L
f
1 D
525.9141 502.6943 m
525.8125 504.1553 525.3594 505.2085 524.5508 505.856 c
523.7422 506.4985 522.8594 506.8218 521.9023 506.8218 c
520.7559 506.8218 519.8135 506.4385 519.0732 505.6709 c
518.334 504.9038 517.9043 503.9097 517.7891 502.6943 C
525.9141 502.6943 L
f
*U
0 D
323.96 478.5635 m
323.9141 478.8911 323.7813 479.1377 323.5615 479.3013 c
323.3418 479.4648 323.0361 479.5459 322.6445 479.5459 c
322.2578 479.5459 321.9443 479.4805 321.7051 479.3496 c
321.4668 479.2168 321.3467 479.0259 321.3467 478.7734 c
321.3467 478.5366 321.4434 478.3672 321.6318 478.2651 c
321.8223 478.1631 322.1982 478.0396 322.7588 477.8936 c
323.3906 477.7314 323.8623 477.5874 324.1777 477.4639 c
324.4922 477.3408 324.7363 477.1655 324.9102 476.9424 c
325.085 476.7188 325.1738 476.4067 325.1738 476.0078 c
325.1738 475.4746 324.9541 475.0239 324.5186 474.6602 c
324.082 474.2939 323.498 474.1128 322.7705 474.1128 c
322.0098 474.1128 321.416 474.2729 320.9893 474.5947 c
320.5625 474.916 320.2998 475.3994 320.2031 476.0425 C
321.2119 476.1948 L
321.2646 475.7769 321.4199 475.4648 321.6777 475.2568 c
321.9346 475.0508 322.2939 474.9468 322.7588 474.9468 c
323.2012 474.9468 323.543 475.0415 323.7793 475.2261 c
324.0166 475.4131 324.1357 475.6401 324.1357 475.9058 c
324.1357 476.0869 324.0801 476.2314 323.9717 476.3413 c
323.8623 476.4507 323.7256 476.5317 323.5615 476.5859 c
323.3975 476.6416 323.0303 476.7378 322.458 476.8765 c
321.6094 477.0806 321.0488 477.3271 320.7754 477.6162 c
320.502 477.9053 320.3662 478.252 320.3662 478.6543 c
320.3662 479.1548 320.5654 479.5669 320.9639 479.8906 c
321.3623 480.2144 321.8975 480.376 322.5723 480.376 c
323.2861 480.376 323.8428 480.2354 324.2393 479.9541 c
324.6367 479.6753 324.873 479.2568 324.9521 478.7007 C
323.96 478.5635 L
f
*u
331.5889 474.2534 m
330.5225 474.2534 L
330.4238 474.4424 330.3545 474.6885 330.3135 474.9932 C
329.6318 474.4058 328.8965 474.1128 328.1064 474.1128 c
327.4746 474.1128 326.9766 474.271 326.6123 474.5864 c
326.2461 474.9023 326.0654 475.3203 326.0654 475.8384 c
326.0654 476.3354 326.2402 476.7437 326.5908 477.0654 c
326.9434 477.3867 327.5537 477.6006 328.4229 477.7065 c
329.3701 477.8472 l
329.7246 477.9053 330.0156 477.9741 330.2441 478.0571 C
330.2441 478.3613 330.2363 478.5771 330.2178 478.7026 c
330.1982 478.8276 330.1426 478.9585 330.0498 479.0952 c
329.958 479.23 329.8115 479.3398 329.6064 479.4229 c
329.4043 479.5054 329.1309 479.5459 328.791 479.5459 c
328.3535 479.5459 328.0088 479.4648 327.7539 479.3032 c
327.5 479.1416 327.3271 478.8413 327.2324 478.3999 C
326.2383 478.5308 L
326.3486 479.1431 326.6279 479.6035 327.0801 479.9116 c
327.5313 480.2217 328.1533 480.376 328.9424 480.376 c
329.6611 480.376 330.1885 480.27 330.5234 480.0562 c
330.8604 479.8442 331.0684 479.5884 331.1455 479.2861 c
331.2227 478.9854 331.2617 478.5986 331.2617 478.1245 c
331.2617 476.7593 l
331.2617 475.9272 331.2764 475.3706 331.3096 475.0854 c
331.3398 474.8022 331.4346 474.5249 331.5889 474.2534 C
331.5889 474.2534 L
f
1 D
330.2441 476.8882 m
330.2441 477.2559 L
329.7148 477.0786 329.0654 476.938 328.2988 476.834 c
327.5313 476.7319 327.1475 476.4067 327.1475 475.8618 c
327.1475 475.5864 327.252 475.3608 327.458 475.1816 c
327.666 475.0029 327.9619 474.9141 328.3496 474.9141 c
328.8496 474.9141 329.291 475.0625 329.6729 475.3628 c
330.0537 475.6616 330.2441 476.1699 330.2441 476.8882 c
f
*U
0 D
340.9365 474.2534 m
339.9219 474.2534 L
339.9219 478.0342 l
339.9219 478.3115 339.9033 478.5503 339.8662 478.7485 c
339.8281 478.9453 339.7314 479.1201 339.5752 479.2725 c
339.4189 479.4243 339.1748 479.5015 338.8438 479.5015 c
338.4453 479.5015 338.1025 479.3608 337.8115 479.0835 c
337.5225 478.8047 337.3779 478.354 337.3779 477.7295 c
337.3779 474.2534 L
336.3613 474.2534 L
336.3613 478.146 l
336.3613 478.6655 336.2705 479.022 336.0879 479.2129 c
335.9043 479.4053 335.6465 479.5015 335.3115 479.5015 c
334.876 479.5015 334.5176 479.3496 334.2363 479.0488 c
333.957 478.7485 333.8164 478.1865 333.8164 477.3618 c
333.8164 474.2534 L
332.8018 474.2534 L
332.8018 480.2393 L
333.7148 480.2393 L
333.7148 479.4053 L
333.7383 479.4053 L
334.1445 480.0522 334.7393 480.376 335.5273 480.376 c
335.9668 480.376 336.3281 480.2871 336.6133 480.1123 c
336.8965 479.9385 337.1025 479.6753 337.2295 479.3262 C
337.6748 480.0254 338.2891 480.376 339.0742 480.376 c
339.6973 480.376 340.1611 480.2085 340.4727 479.873 c
340.7832 479.5381 340.9365 479.0356 340.9365 478.3672 c
340.9365 474.2534 L
f
*u
343.4082 479.4668 m
343.7891 480.0718 344.3594 480.376 345.1182 480.376 c
345.9043 480.376 346.5264 480.0908 346.9805 479.521 c
347.4355 478.9507 347.6621 478.2095 347.6621 477.2944 c
347.6621 476.3198 347.4121 475.5459 346.9072 474.9736 c
346.4023 474.3999 345.7842 474.1128 345.0508 474.1128 c
344.4072 474.1128 343.8916 474.3691 343.5039 474.8794 C
343.4775 474.8794 L
343.4775 471.9521 L
342.46 471.9521 L
342.46 480.2393 L
343.3867 480.2393 L
343.3867 479.4668 L
343.4082 479.4668 L
343.4082 479.4668 L
f
1 D
344.9834 474.9468 m
345.457 474.9468 345.8496 475.1431 346.1602 475.5381 c
346.4697 475.9312 346.624 476.5166 346.624 477.2944 c
346.624 478.0283 346.4756 478.5923 346.1758 478.9873 c
345.877 479.3823 345.4941 479.5806 345.0273 479.5806 c
344.5459 479.5806 344.1514 479.3589 343.8418 478.9199 c
343.5293 478.479 343.375 477.9087 343.375 477.21 c
343.375 476.4683 343.5234 475.9058 343.8203 475.5225 c
344.1182 475.1392 344.5059 474.9468 344.9834 474.9468 c
f
*U
0 D
349.8926 474.2534 m
348.875 474.2534 L
348.875 482.5254 L
349.8926 482.5254 L
349.8926 474.2534 L
f
*u
356.6465 476.9902 m
352.1592 476.9902 L
352.2012 476.3276 352.3906 475.8213 352.7275 475.4727 c
353.0645 475.1221 353.4844 474.9468 353.9893 474.9468 c
354.376 474.9468 354.7012 475.0508 354.9658 475.2549 c
355.2275 475.459 355.4297 475.769 355.5684 476.1831 C
356.6123 476.0542 L
356.4424 475.4282 356.1328 474.9487 355.6816 474.6152 c
355.2295 474.2803 354.665 474.1128 353.9893 474.1128 c
353.0898 474.1128 352.3867 474.3882 351.8799 474.939 c
351.376 475.4902 351.1211 476.2427 351.1211 477.1982 c
351.1211 478.1436 351.3682 478.9087 351.8594 479.4961 c
352.3496 480.0811 353.0391 480.376 353.9316 480.376 c
354.3682 480.376 354.7881 480.2798 355.1924 480.0874 c
355.5967 479.8965 355.9395 479.5688 356.2227 479.1089 c
356.5039 478.6484 356.6465 477.9419 356.6465 476.9902 C
356.6465 476.9902 L
f
1 D
355.6025 477.8262 m
355.5605 478.4346 355.3721 478.8735 355.0352 479.1431 c
354.6982 479.4111 354.3301 479.5459 353.9316 479.5459 c
353.4541 479.5459 353.0605 479.3857 352.752 479.0664 c
352.4443 478.7466 352.2656 478.3325 352.2168 477.8262 C
355.6025 477.8262 L
f
*U
0 D
363.416 474.2651 m
363.1162 474.2051 362.8613 474.1743 362.6553 474.1743 c
362.2109 474.1743 361.8867 474.2534 361.6846 474.4092 c
361.4805 474.5654 361.3574 474.7637 361.3115 475.0049 c
361.2666 475.2456 361.2441 475.5786 361.2441 476.0078 c
361.2441 479.4556 L
360.5059 479.4556 L
360.5059 480.2393 L
361.2441 480.2393 L
361.2441 481.73 L
362.2607 482.3442 L
362.2607 480.2393 L
363.2754 480.2393 L
363.2754 479.4556 L
362.2607 479.4556 L
362.2607 475.9521 l
362.2607 475.6519 362.291 475.438 362.3525 475.3105 c
362.415 475.1855 362.5723 475.1221 362.8252 475.1221 c
362.9717 475.1221 363.1211 475.1377 363.2754 475.1685 C
363.416 474.2651 L
f
*u
369.4941 476.9902 m
365.0068 476.9902 L
365.0498 476.3276 365.2383 475.8213 365.5752 475.4727 c
365.9121 475.1221 366.332 474.9468 366.8369 474.9468 c
367.2236 474.9468 367.5488 475.0508 367.8135 475.2549 c
368.0752 475.459 368.2773 475.769 368.416 476.1831 C
369.46 476.0542 L
369.29 475.4282 368.9805 474.9487 368.5293 474.6152 c
368.0771 474.2803 367.5127 474.1128 366.8369 474.1128 c
365.9375 474.1128 365.2344 474.3882 364.7275 474.939 c
364.2236 475.4902 363.9688 476.2427 363.9688 477.1982 c
363.9688 478.1436 364.2158 478.9087 364.707 479.4961 c
365.1982 480.0811 365.8877 480.376 366.7793 480.376 c
367.2158 480.376 367.6357 480.2798 368.04 480.0874 c
368.4443 479.8965 368.7881 479.5688 369.0713 479.1089 c
369.3525 478.6484 369.4941 477.9419 369.4941 476.9902 C
369.4941 476.9902 L
f
1 D
368.4502 477.8262 m
368.4082 478.4346 368.2197 478.8735 367.8828 479.1431 c
367.5459 479.4111 367.1777 479.5459 366.7793 479.5459 c
366.3018 479.5459 365.9082 479.3857 365.5996 479.0664 c
365.292 478.7466 365.1133 478.3325 365.0645 477.8262 C
368.4502 477.8262 L
f
*U
0 D
375.6436 474.2534 m
374.3926 474.2534 L
372.834 476.6226 L
371.2607 474.2534 L
370.0244 474.2534 L
372.2197 477.3735 L
370.1992 480.2393 L
371.457 480.2393 L
372.2773 479.0029 372.7246 478.3115 372.7988 478.1689 C
374.2666 480.2393 L
375.4805 480.2393 L
373.4102 477.4292 L
375.6436 474.2534 L
f
378.8311 474.2651 m
378.5303 474.2051 378.2764 474.1743 378.0703 474.1743 c
377.625 474.1743 377.3018 474.2534 377.0996 474.4092 c
376.8955 474.5654 376.7725 474.7637 376.7266 475.0049 c
376.6816 475.2456 376.6582 475.5786 376.6582 476.0078 c
376.6582 479.4556 L
375.9209 479.4556 L
375.9209 480.2393 L
376.6582 480.2393 L
376.6582 481.73 L
377.6758 482.3442 L
377.6758 480.2393 L
378.6904 480.2393 L
378.6904 479.4556 L
377.6758 479.4556 L
377.6758 475.9521 l
377.6758 475.6519 377.7061 475.438 377.7676 475.3105 c
377.8301 475.1855 377.9873 475.1221 378.2402 475.1221 c
378.3857 475.1221 378.5361 475.1377 378.6904 475.1685 C
378.8311 474.2651 L
f
387.8076 474.2534 m
386.7871 474.2534 L
386.7871 478.0342 l
386.7871 478.5234 386.6807 478.8892 386.4707 479.1338 c
386.2617 479.3784 385.9473 479.5015 385.5293 479.5015 c
385.1152 479.5015 384.7461 479.3574 384.4199 479.0684 c
384.0947 478.7813 383.9326 478.2671 383.9326 477.5254 c
383.9326 474.2534 L
382.916 474.2534 L
382.916 482.5254 L
383.9326 482.5254 L
383.9326 479.5576 L
384.4141 480.1025 385.0156 480.376 385.7373 480.376 c
386.125 480.376 386.4961 480.2969 386.8486 480.1392 c
387.2031 479.9814 387.4512 479.7388 387.5938 479.4111 c
387.7363 479.0835 387.8076 478.6274 387.8076 478.0459 c
387.8076 474.2534 L
f
*u
394.5469 476.9902 m
390.0586 476.9902 L
390.1016 476.3276 390.29 475.8213 390.627 475.4727 c
390.9639 475.1221 391.3838 474.9468 391.8887 474.9468 c
392.2754 474.9468 392.6016 475.0508 392.8652 475.2549 c
393.127 475.459 393.3291 475.769 393.4678 476.1831 C
394.5117 476.0542 L
394.3418 475.4282 394.0322 474.9487 393.5811 474.6152 c
393.1289 474.2803 392.5645 474.1128 391.8887 474.1128 c
390.9893 474.1128 390.2861 474.3882 389.7803 474.939 c
389.2754 475.4902 389.0215 476.2427 389.0215 477.1982 c
389.0215 478.1436 389.2676 478.9087 389.7588 479.4961 c
390.25 480.0811 390.9395 480.376 391.8311 480.376 c
392.2686 480.376 392.6875 480.2798 393.0928 480.0874 c
393.4971 479.8965 393.8398 479.5688 394.123 479.1089 c
394.4043 478.6484 394.5469 477.9419 394.5469 476.9902 C
394.5469 476.9902 L
f
1 D
393.5029 477.8262 m
393.46 478.4346 393.2715 478.8735 392.9346 479.1431 c
392.5977 479.4111 392.2295 479.5459 391.8311 479.5459 c
391.3535 479.5459 390.9609 479.3857 390.6523 479.0664 c
390.3438 478.7466 390.165 478.3325 390.1172 477.8262 C
393.5029 477.8262 L
f
*U
0 D
398.9971 480.0542 m
398.6484 479.1162 L
398.3965 479.2646 398.1494 479.3379 397.9092 479.3379 c
397.5283 479.3379 397.2402 479.1665 397.0439 478.8276 c
396.8496 478.4868 396.752 478.0093 396.752 477.3965 c
396.752 474.2534 L
395.7363 474.2534 L
395.7363 480.2393 L
396.6611 480.2393 L
396.6611 479.3379 L
396.6846 479.3379 L
397.0078 480.0293 397.4316 480.376 397.9531 480.376 c
398.2998 480.376 398.6484 480.2681 398.9971 480.0542 C
f
*u
404.8213 476.9902 m
400.334 476.9902 L
400.376 476.3276 400.5645 475.8213 400.9023 475.4727 c
401.2393 475.1221 401.6592 474.9468 402.1631 474.9468 c
402.5508 474.9468 402.876 475.0508 403.1396 475.2549 c
403.4014 475.459 403.6035 475.769 403.7432 476.1831 C
404.7861 476.0542 L
404.6172 475.4282 404.3066 474.9487 403.8564 474.6152 c
403.4033 474.2803 402.8398 474.1128 402.1631 474.1128 c
401.2637 474.1128 400.5615 474.3882 400.0547 474.939 c
399.5498 475.4902 399.2959 476.2427 399.2959 477.1982 c
399.2959 478.1436 399.542 478.9087 400.0332 479.4961 c
400.5244 480.0811 401.2139 480.376 402.1055 480.376 c
402.543 480.376 402.9629 480.2798 403.3672 480.0874 c
403.7715 479.8965 404.1143 479.5688 404.3975 479.1089 c
404.6787 478.6484 404.8213 477.9419 404.8213 476.9902 C
404.8213 476.9902 L
f
1 D
403.7773 477.8262 m
403.7354 478.4346 403.5469 478.8735 403.209 479.1431 c
402.8721 479.4111 402.5039 479.5459 402.1055 479.5459 c
401.6279 479.5459 401.2354 479.3857 400.9268 479.0664 c
400.6191 478.7466 400.4395 478.3325 400.3916 477.8262 C
403.7773 477.8262 L
f
*U
0 D
407.4668 474.2534 m
407.4668 473.7759 407.375 473.4097 407.1943 473.1597 c
407.0107 472.9072 406.7852 472.728 406.5176 472.6221 C
406.2422 473.0518 L
406.6641 473.2329 406.876 473.6333 406.8799 474.2534 C
406.3096 474.2534 L
406.3096 475.4111 L
407.4668 475.4111 L
407.4668 474.2534 l
f
415.8066 478.5635 m
415.7607 478.8911 415.627 479.1377 415.4082 479.3013 c
415.1885 479.4648 414.8818 479.5459 414.4912 479.5459 c
414.1035 479.5459 413.79 479.4805 413.5518 479.3496 c
413.3125 479.2168 413.1934 479.0259 413.1934 478.7734 c
413.1934 478.5366 413.2891 478.3672 413.4785 478.2651 c
413.6689 478.1631 414.0449 478.0396 414.6045 477.8936 c
415.2363 477.7314 415.708 477.5874 416.0244 477.4639 c
416.3379 477.3408 416.583 477.1655 416.7559 476.9424 c
416.9316 476.7188 417.0195 476.4067 417.0195 476.0078 c
417.0195 475.4746 416.8008 475.0239 416.3652 474.6602 c
415.9277 474.2939 415.3447 474.1128 414.6162 474.1128 c
413.8555 474.1128 413.2627 474.2729 412.835 474.5947 c
412.4092 474.916 412.1455 475.3994 412.0488 476.0425 C
413.0586 476.1948 L
413.1104 475.7769 413.2666 475.4648 413.5244 475.2568 c
413.7803 475.0508 414.1406 474.9468 414.6045 474.9468 c
415.0479 474.9468 415.3887 475.0415 415.626 475.2261 c
415.8623 475.4131 415.9824 475.6401 415.9824 475.9058 c
415.9824 476.0869 415.9258 476.2314 415.8184 476.3413 c
415.708 476.4507 415.5713 476.5317 415.4082 476.5859 c
415.2441 476.6416 414.877 476.7378 414.3047 476.8765 c
413.4551 477.0806 412.8945 477.3271 412.6211 477.6162 c
412.3477 477.9053 412.2129 478.252 412.2129 478.6543 c
412.2129 479.1548 412.4111 479.5669 412.8096 479.8906 c
413.209 480.2144 413.7441 480.376 414.418 480.376 c
415.1328 480.376 415.6895 480.2354 416.0859 479.9541 c
416.4824 479.6753 416.7197 479.2568 416.7988 478.7007 C
415.8066 478.5635 L
f
*u
423.4355 474.2534 m
422.3682 474.2534 L
422.2695 474.4424 422.2002 474.6885 422.1602 474.9932 C
421.4785 474.4058 420.7422 474.1128 419.9531 474.1128 c
419.3213 474.1128 418.8223 474.271 418.458 474.5864 c
418.0928 474.9023 417.9111 475.3203 417.9111 475.8384 c
417.9111 476.3354 418.0869 476.7437 418.4375 477.0654 c
418.79 477.3867 419.4004 477.6006 420.2686 477.7065 c
421.2168 477.8472 l
421.5703 477.9053 421.8613 477.9741 422.0908 478.0571 C
422.0908 478.3613 422.083 478.5771 422.0635 478.7026 c
422.0439 478.8276 421.9883 478.9585 421.8965 479.0952 c
421.8037 479.23 421.6572 479.3398 421.4531 479.4229 c
421.251 479.5054 420.9775 479.5459 420.6367 479.5459 c
420.1992 479.5459 419.8545 479.4648 419.6006 479.3032 c
419.3467 479.1416 419.1729 478.8413 419.0781 478.3999 C
418.085 478.5308 L
418.1943 479.1431 418.4736 479.6035 418.9268 479.9116 c
419.377 480.2217 419.999 480.376 420.7891 480.376 c
421.5068 480.376 422.0352 480.27 422.3701 480.0562 c
422.707 479.8442 422.915 479.5884 422.9922 479.2861 c
423.0693 478.9854 423.1074 478.5986 423.1074 478.1245 c
423.1074 476.7593 l
423.1074 475.9272 423.123 475.3706 423.1553 475.0854 c
423.1865 474.8022 423.2813 474.5249 423.4355 474.2534 C
423.4355 474.2534 L
f
1 D
422.0908 476.8882 m
422.0908 477.2559 L
421.5615 477.0786 420.9121 476.938 420.1455 476.834 c
419.377 476.7319 418.9941 476.4067 418.9941 475.8618 c
418.9941 475.5864 419.0977 475.3608 419.3037 475.1816 c
419.5117 475.0029 419.8086 474.9141 420.1953 474.9141 c
420.6963 474.9141 421.1377 475.0625 421.5186 475.3628 c
421.9004 475.6616 422.0908 476.1699 422.0908 476.8882 c
f
*U
0 D
432.7832 474.2534 m
431.7686 474.2534 L
431.7686 478.0342 l
431.7686 478.3115 431.749 478.5503 431.7129 478.7485 c
431.6738 478.9453 431.5771 479.1201 431.4219 479.2725 c
431.2656 479.4243 431.0215 479.5015 430.6895 479.5015 c
430.291 479.5015 429.9482 479.3608 429.6572 479.0835 c
429.3682 478.8047 429.2246 478.354 429.2246 477.7295 c
429.2246 474.2534 L
428.207 474.2534 L
428.207 478.146 l
428.207 478.6655 428.1172 479.022 427.9336 479.2129 c
427.751 479.4053 427.4932 479.5015 427.1582 479.5015 c
426.7227 479.5015 426.3643 479.3496 426.083 479.0488 c
425.8037 478.7485 425.6631 478.1865 425.6631 477.3618 c
425.6631 474.2534 L
424.6484 474.2534 L
424.6484 480.2393 L
425.5615 480.2393 L
425.5615 479.4053 L
425.584 479.4053 L
425.9902 480.0522 426.5859 480.376 427.373 480.376 c
427.8125 480.376 428.1748 480.2871 428.46 480.1123 c
428.7422 479.9385 428.9492 479.6753 429.0762 479.3262 C
429.5205 480.0254 430.1348 480.376 430.9209 480.376 c
431.543 480.376 432.0068 480.2085 432.3193 479.873 c
432.6289 479.5381 432.7832 479.0356 432.7832 478.3672 c
432.7832 474.2534 L
f
*u
435.2539 479.4668 m
435.6357 480.0718 436.2051 480.376 436.9639 480.376 c
437.75 480.376 438.3721 480.0908 438.8271 479.521 c
439.2813 478.9507 439.5088 478.2095 439.5088 477.2944 c
439.5088 476.3198 439.2578 475.5459 438.7539 474.9736 c
438.249 474.3999 437.6309 474.1128 436.8965 474.1128 c
436.2539 474.1128 435.7373 474.3691 435.3506 474.8794 C
435.3232 474.8794 L
435.3232 471.9521 L
434.3066 471.9521 L
434.3066 480.2393 L
435.2324 480.2393 L
435.2324 479.4668 L
435.2539 479.4668 L
435.2539 479.4668 L
f
1 D
436.8301 474.9468 m
437.3037 474.9468 437.6963 475.1431 438.0059 475.5381 c
438.3164 475.9312 438.4707 476.5166 438.4707 477.2944 c
438.4707 478.0283 438.3223 478.5923 438.0215 478.9873 c
437.7227 479.3823 437.3398 479.5806 436.874 479.5806 c
436.3926 479.5806 435.998 479.3589 435.6875 478.9199 c
435.375 478.479 435.2217 477.9087 435.2217 477.21 c
435.2217 476.4683 435.3701 475.9058 435.666 475.5225 c
435.9648 475.1392 436.3516 474.9468 436.8301 474.9468 c
f
*U
0 D
441.7383 474.2534 m
440.7217 474.2534 L
440.7217 482.5254 L
441.7383 482.5254 L
441.7383 474.2534 L
f
*u
448.4932 476.9902 m
444.0059 476.9902 L
444.0479 476.3276 444.2363 475.8213 444.5732 475.4727 c
444.9111 475.1221 445.3301 474.9468 445.835 474.9468 c
446.2227 474.9468 446.5479 475.0508 446.8115 475.2549 c
447.0732 475.459 447.2754 475.769 447.4141 476.1831 C
448.458 476.0542 L
448.2891 475.4282 447.9785 474.9487 447.5283 474.6152 c
447.0752 474.2803 446.5107 474.1128 445.835 474.1128 c
444.9355 474.1128 444.2324 474.3882 443.7266 474.939 c
443.2217 475.4902 442.9678 476.2427 442.9678 477.1982 c
442.9678 478.1436 443.2139 478.9087 443.7051 479.4961 c
444.1963 480.0811 444.8857 480.376 445.7773 480.376 c
446.2148 480.376 446.6348 480.2798 447.0391 480.0874 c
447.4434 479.8965 447.7861 479.5688 448.0693 479.1089 c
448.3506 478.6484 448.4932 477.9419 448.4932 476.9902 C
448.4932 476.9902 L
f
1 D
447.4492 477.8262 m
447.4063 478.4346 447.2178 478.8735 446.8809 479.1431 c
446.5439 479.4111 446.1758 479.5459 445.7773 479.5459 c
445.2998 479.5459 444.9072 479.3857 444.5986 479.0664 c
444.29 478.7466 444.1113 478.3325 444.0635 477.8262 C
447.4492 477.8262 L
f
*U
0 D
455.2627 474.2651 m
454.9619 474.2051 454.708 474.1743 454.502 474.1743 c
454.0566 474.1743 453.7334 474.2534 453.5313 474.4092 c
453.3271 474.5654 453.2041 474.7637 453.1572 475.0049 c
453.1133 475.2456 453.0898 475.5786 453.0898 476.0078 c
453.0898 479.4556 L
452.3525 479.4556 L
452.3525 480.2393 L
453.0898 480.2393 L
453.0898 481.73 L
454.1064 482.3442 L
454.1064 480.2393 L
455.1221 480.2393 L
455.1221 479.4556 L
454.1064 479.4556 L
454.1064 475.9521 l
454.1064 475.6519 454.1377 475.438 454.1992 475.3105 c
454.2607 475.1855 454.4189 475.1221 454.6709 475.1221 c
454.8174 475.1221 454.9678 475.1377 455.1221 475.1685 C
455.2627 474.2651 L
f
*u
461.3408 476.9902 m
456.8535 476.9902 L
456.8955 476.3276 457.084 475.8213 457.4219 475.4727 c
457.7588 475.1221 458.1777 474.9468 458.6826 474.9468 c
459.0703 474.9468 459.3955 475.0508 459.6592 475.2549 c
459.9209 475.459 460.123 475.769 460.2627 476.1831 C
461.3057 476.0542 L
461.1367 475.4282 460.8262 474.9487 460.376 474.6152 c
459.9229 474.2803 459.3594 474.1128 458.6826 474.1128 c
457.7832 474.1128 457.0811 474.3882 456.5742 474.939 c
456.0693 475.4902 455.8154 476.2427 455.8154 477.1982 c
455.8154 478.1436 456.0615 478.9087 456.5527 479.4961 c
457.0439 480.0811 457.7334 480.376 458.625 480.376 c
459.0625 480.376 459.4824 480.2798 459.8867 480.0874 c
460.291 479.8965 460.6338 479.5688 460.917 479.1089 c
461.1982 478.6484 461.3408 477.9419 461.3408 476.9902 C
461.3408 476.9902 L
f
1 D
460.2969 477.8262 m
460.2539 478.4346 460.0654 478.8735 459.7285 479.1431 c
459.3916 479.4111 459.0234 479.5459 458.625 479.5459 c
458.1475 479.5459 457.7549 479.3857 457.4463 479.0664 c
457.1387 478.7466 456.959 478.3325 456.9111 477.8262 C
460.2969 477.8262 L
f
*U
0 D
467.4902 474.2534 m
466.2383 474.2534 L
464.6797 476.6226 L
463.1064 474.2534 L
461.8701 474.2534 L
464.0654 477.3735 L
462.0459 480.2393 L
463.3027 480.2393 L
464.124 479.0029 464.5703 478.3115 464.6455 478.1689 C
466.1133 480.2393 L
467.3262 480.2393 L
465.2559 477.4292 L
467.4902 474.2534 L
f
470.6777 474.2651 m
470.377 474.2051 470.123 474.1743 469.916 474.1743 c
469.4717 474.1743 469.1484 474.2534 468.9463 474.4092 c
468.7422 474.5654 468.6182 474.7637 468.5723 475.0049 c
468.5273 475.2456 468.5049 475.5786 468.5049 476.0078 c
468.5049 479.4556 L
467.7676 479.4556 L
467.7676 480.2393 L
468.5049 480.2393 L
468.5049 481.73 L
469.5215 482.3442 L
469.5215 480.2393 L
470.5371 480.2393 L
470.5371 479.4556 L
469.5215 479.4556 L
469.5215 475.9521 l
469.5215 475.6519 469.5527 475.438 469.6143 475.3105 c
469.6758 475.1855 469.834 475.1221 470.0859 475.1221 c
470.2324 475.1221 470.3828 475.1377 470.5371 475.1685 C
470.6777 474.2651 L
f
479.6543 474.2534 m
478.6328 474.2534 L
478.6328 478.0342 l
478.6328 478.5234 478.5273 478.8892 478.3174 479.1338 c
478.1074 479.3784 477.793 479.5015 477.376 479.5015 c
476.9609 479.5015 476.5918 479.3574 476.2666 479.0684 c
475.9404 478.7813 475.7793 478.2671 475.7793 477.5254 c
475.7793 474.2534 L
474.7617 474.2534 L
474.7617 482.5254 L
475.7793 482.5254 L
475.7793 479.5576 L
476.2607 480.1025 476.8613 480.376 477.584 480.376 c
477.9707 480.376 478.3428 480.2969 478.6943 480.1392 c
479.0488 479.9814 479.2979 479.7388 479.4404 479.4111 c
479.583 479.0835 479.6543 478.6274 479.6543 478.0459 c
479.6543 474.2534 L
f
*u
486.3926 476.9902 m
481.9053 476.9902 L
481.9473 476.3276 482.1367 475.8213 482.4736 475.4727 c
482.8105 475.1221 483.2305 474.9468 483.7344 474.9468 c
484.1221 474.9468 484.4473 475.0508 484.7109 475.2549 c
484.9736 475.459 485.1758 475.769 485.3145 476.1831 C
486.3584 476.0542 L
486.1885 475.4282 485.8779 474.9487 485.4277 474.6152 c
484.9756 474.2803 484.4111 474.1128 483.7344 474.1128 c
482.835 474.1128 482.1328 474.3882 481.626 474.939 c
481.1211 475.4902 480.8672 476.2427 480.8672 477.1982 c
480.8672 478.1436 481.1133 478.9087 481.6045 479.4961 c
482.0957 480.0811 482.7852 480.376 483.6777 480.376 c
484.1143 480.376 484.5342 480.2798 484.9385 480.0874 c
485.3428 479.8965 485.6855 479.5688 485.9688 479.1089 c
486.25 478.6484 486.3926 477.9419 486.3926 476.9902 C
486.3926 476.9902 L
f
1 D
485.3486 477.8262 m
485.3066 478.4346 485.1182 478.8735 484.7813 479.1431 c
484.4434 479.4111 484.0762 479.5459 483.6777 479.5459 c
483.1992 479.5459 482.8066 479.3857 482.498 479.0664 c
482.1904 478.7466 482.0117 478.3325 481.9629 477.8262 C
485.3486 477.8262 L
f
*U
0 D
490.8438 480.0542 m
490.4951 479.1162 L
490.2422 479.2646 489.9961 479.3379 489.7549 479.3379 c
489.374 479.3379 489.0869 479.1665 488.8906 478.8276 c
488.6963 478.4868 488.5977 478.0093 488.5977 477.3965 c
488.5977 474.2534 L
487.583 474.2534 L
487.583 480.2393 L
488.5068 480.2393 L
488.5068 479.3379 L
488.5303 479.3379 L
488.8535 480.0293 489.2773 480.376 489.7998 480.376 c
490.1465 480.376 490.4951 480.2681 490.8438 480.0542 C
f
*u
496.667 476.9902 m
492.1797 476.9902 L
492.2227 476.3276 492.4111 475.8213 492.748 475.4727 c
493.085 475.1221 493.5049 474.9468 494.0098 474.9468 c
494.3965 474.9468 494.7227 475.0508 494.9863 475.2549 c
495.248 475.459 495.4502 475.769 495.5889 476.1831 C
496.6328 476.0542 L
496.4629 475.4282 496.1533 474.9487 495.7021 474.6152 c
495.25 474.2803 494.6855 474.1128 494.0098 474.1128 c
493.1104 474.1128 492.4072 474.3882 491.9004 474.939 c
491.3965 475.4902 491.1416 476.2427 491.1416 477.1982 c
491.1416 478.1436 491.3887 478.9087 491.8799 479.4961 c
492.3711 480.0811 493.0605 480.376 493.9521 480.376 c
494.3887 480.376 494.8086 480.2798 495.2129 480.0874 c
495.6172 479.8965 495.9609 479.5688 496.2441 479.1089 c
496.5254 478.6484 496.667 477.9419 496.667 476.9902 C
496.667 476.9902 L
f
1 D
495.624 477.8262 m
495.5811 478.4346 495.3926 478.8735 495.0557 479.1431 c
494.7188 479.4111 494.3506 479.5459 493.9521 479.5459 c
493.4746 479.5459 493.0811 479.3857 492.7734 479.0664 c
492.4648 478.7466 492.2861 478.3325 492.2383 477.8262 C
495.624 477.8262 L
f
*U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
