%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 12.0.0
%%For: (misha) (home)
%%Title: (048.eps)
%%CreationDate: 12/21/2008 11:32 PM
%%BoundingBox: 0 0 596 596
%%HiResBoundingBox: 0 0 595.2754 595.2754
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKCustomColor: 1 1 1 1 ([\721\756\742\754\745\771\745\755\750\745])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 297 297 297 297
%AI3_TileBox: -0.600098 -123.96 594.5999 717.96
%AI3_DocumentPreview: Header
%AI5_ArtSize: 595 595
%AI5_RulerUnits: 2
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -329.5 703.5 1 1270 830 26 0 0 4 96 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\312\340\353\353\350\343\360\340\364\350\367\345\361\352\340\377 \352\350\361\362\374") (\310\355\361\362\360\363\354\345\355\362 \312\340\353\350\343\360\340\364 \352\350\361\362\374.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (\317\356\361\362\360\356\367\355\373\351 \352\356\354\357\356\355\356\342\371\350\352 Adobe) (\310\355\361\362\360\363\354\345\355\362 \312\350\361\362\374 \360\340\361\361\345\350\342\340\355\350\377.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (\317\356\361\362\360\356\367\355\373\351 \352\356\354\357\356\355\356\342\371\350\352 Adobe) (\310\355\361\362\360\363\354\345\355\362 \312\350\361\362\374 \360\340\361\361\345\350\342\340\355\350\377.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\301\356\360\344\376\360\355\340\377 \352\350\361\362\374") (\310\355\361\362\360\363\354\345\355\362 \325\363\344\356\346 \352\350\361\362\374.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\301\356\360\344\376\360\355\340\377 \352\350\361\362\374") (\310\355\361\362\360\363\354\345\355\362 \325\363\344\356\346 \352\350\361\362\374.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\325\363\344\356\346\345\361\362\342\345\355\355\340\377 \352\350\361\362\374") (\310\355\361\362\360\363\354\345\355\362 \325\363\344\356\346 \352\350\361\362\374.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\325\363\344\356\346\345\361\362\342\345\355\355\340\377 \352\350\361\362\374") (\310\355\361\362\360\363\354\345\355\362 \325\363\344\356\346 \352\350\361\362\374.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\317\345\360\345\365\356\344") (\306\350\342\373\345 \355\340\353\356\346\345\355\350\377.aip)
%AI8_PluginGroupInfo
(Adobe Tracing Object) (\322\360\340\361\361\350\360\356\342\352\340) (\317\340\352\345\362 \362\360\340\361\361\350\360\356\342\356\352.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe Envelope) (\316\341\356\353\356\367\352\340 \350 \344\345\364\356\360\354\340\366\350\377.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (\321\356\361\362\340\342\355\373\345 \364\350\343\363\360\373 Adobe) (\316\341\360\340\341\356\362\352\340 \352\356\355\362\363\360\356\342S.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\301\373\361\362\360\340\377 \347\340\353\350\342\352\340") (\306\350\342\373\345 \352\360\340\361\352\350.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (\310\355\361\362\360\363\354\345\355\362\340\360\350\351 Adobe \357\356 \360\340\341\356\362\345 \361 \361\350\354\342\356\353\340\354\350) (\321\350\361\362\345\354\340 \367\340\361\362\350\366.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (\301\353\350\352.aip)
%AI5_End_NonPrinting--
6 Bn
%AI5_BeginGradient: (GradientFill 1)
(GradientFill 1) 1 2 Bd
[
<
00000101010102020203030304040404050505060606070707070808080909090A0A0A0A0B0B0B0C
0C0C0C0D0D0D0E0E0E0F0F0F0F1010101111111212
>
<
00000000000001010101010101010101010102020202020202020202020203030303030303030303
030304040404040404040404040505050505050505
>
<
000102030405060708090A0B0C0D0E0F1011121314151617181A1B1C1D1E1F202122232425262728
292A2B2C2D2E2F303132333435363738393A3B3C3D
>
0
1 %_Br
[
0 0 0 0 1 50 0 %_BS
%_0 0 0 0 1 50 0 Bs
0.07 0.02 0.24 0 1 50 100 %_BS
%_0.07 0.02 0.24 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 2)
(GradientFill 2) 1 2 Bd
[
<
080707070706060606050505050504040404030303030202020201010101000000
>
<
050505050404040404040403030303030302020202020201010101010100000000
>
<
21201F1E1D1C1B1A191817161514131211100F0D0C0B0A09080706050403020100
>
0
1 %_Br
[
0.03 0.02 0.13 0 1 50 0 %_BS
%_0.03 0.02 0.13 0 1 50 0 Bs
0 0 0 0 1 50 100 %_BS
%_0 0 0 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 3)
(GradientFill 3) 1 2 Bd
[
0.11
<
000101020203040405060607070809090A0B0B0C0C0D0E0E0F0F1011111213131414151616171718
19191A1B1B1C1C1D1E1E1F20202121222323242425262627282829
>
<
5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E80818283848586
8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1
>
0
1 %_Br
[
0.11 0 0.37 0 1 50 0 %_BS
%_0.11 0 0.37 0 1 50 0 Bs
0.11 0.16 0.63 0 1 50 100 %_BS
%_0.11 0.16 0.63 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 4)
(GradientFill 4) 0 2 Bd
[
<
5E5F606162636465666768696A6B6C6D6E6F6F707172737475767778797A7B7C7D7E7F8081828384
8485868788898A8B8C8D8E8F90919293949596979898999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AA
ABACACADAEAFB0B1B2B3B4B5
>
<
05060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C
2D2E2F3031323435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455
565758595A5B5C5D5E5F6061
>
<
EDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0
F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4
F4F4F4F4F4F4F4F4F5F5F5F5
>
<
00000000010101010101010202020202020203030303030303040404040404040405050505050505
060606060606060707070707070708080808080808090909090909090A0A0A0A0A0A0A0B0B0B0B0B
0B0B0B0C0C0C0C0C0C0C0D0D
>
1 %_Br
[
0.71 0.38 0.96 0.05 1 50 100 %_BS
%_0.71 0.38 0.96 0.05 1 50 100 Bs
0.37 0.02 0.93 0 1 50 0 %_BS
%_0.37 0.02 0.93 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 5)
(GradientFill 5) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
1
1
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
1 %_Br
[
0 1 1 0 1 50 0 %_BS
%_0 1 1 0 1 50 0 Bs
1 1 1 1 1 50 100 %_BS
%_1 1 1 1 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 6)
(GradientFill 6) 1 2 Bd
[
<
05050505050505050505050505050505050505050504040404040404040404040404040404040404
04040404040404040404040404040404030303030303030303030303030303030303030303030303
03030303030303030303020202020202020202020202020202020202020202020202020202020202
02020202020101010101010101010101010101010101010101010101010101010101010101010100
0000000000000000000000000000000000
>
<
030303040404050506060607070708080909090A0A0A0B0B0C0C0C0D0D0D0E0E0F0F0F1010101111
1212121313141414151515161617171718181819191A1A1A1B1B1B1C1C1D1D1D1E1E1E1F1F202020
2121212222232323242424252526262627272728282929292A2A2A2B2B2C2C2C2D2D2D2E2E2F2F2F
30303131313232323333343434353535363637373738383839393A3A3A3B3B3B3C3C3D3D3D3E3E3E
3F3F404040414141424243434344444445
>
<
12131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343536373839
3A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061
62636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F80818283848586878889
8A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1
B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2
>
0
1 %_Br
[
0.02 0.01 0.07 0 1 50 0 %_BS
%_0.02 0.01 0.07 0 1 50 0 Bs
0 0.27 0.76 0 1 50 100 %_BS
%_0 0.27 0.76 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([\721\756\742\754\745\771\745\755\750\745]) 0 Xs
([\721\756\742\754\745\771\745\755\750\745])
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 -1 31 26 23 0 100 Lb
(Layer 1) Ln
0 A
0 O
0 J 0 j 1 w 4 M []0 d1 XR
0.000488 0 m
595.2754 0 L
595.2754 595.2754 L
0.000488 595.2754 L
0.000488 0 L
Bb
0 0 0 0 Bh
1 (GradientFill 1) 327.4014 202.3936 -139 511.4174 1 0 0 1 0 0 Bg
-385.9716 -335.52 -335.52 385.9716 327.4014 202.3936 Bm
f
0 BB
*u
0 g
162.5229 490.1084 m
162.5229 490.1084 L
162.5229 490.1084 L
f
1 D
202.1152 311.2344 m
204.3945 310.8823 206.707 310.4683 209.0254 310.0815 C
211.9307 315.1064 215.5762 319.6821 219.8379 323.6411 C
228.4839 332.8022 240.1284 339.251 253.5327 341.2954 C
293.4868 347.3882 331.21 319.9307 336.8867 279.835 C
342.8574 208.3613 285.085 175.4531 264.269 106.4033 C
266.9336 113.5615 270.1216 120.5254 273.8267 127.2178 C
286.1387 149.7939 304.0303 169.3076 325.3779 183.5566 C
326.6963 184.6162 328.0352 185.6504 329.3926 186.6582 C
333.8867 191.3984 337.8545 196.0605 341.3369 200.6553 C
343.9258 207.2373 345.875 214.2676 351.542 216.3691 C
351.9951 217.207 352.4326 218.043 352.8545 218.876 C
346.4219 224.1592 346.7813 236.9004 338.8223 245.2041 C
344.5938 242.1133 353.9854 244.9424 361.6777 244.6816 C
365.8496 256.8076 377.6279 262.9922 375.6055 270.6006 C
382.3271 266.7363 386.332 260.5137 386.5322 252.5391 C
387.625 253.043 388.7441 253.5508 389.8711 254.085 C
390.7549 265.3486 388.252 276.8623 382.1895 286.5068 C
374.8438 298.1504 361.8262 305.6904 348.252 306.8232 C
362.3926 306.0483 376.1016 298.3369 383.7383 286.2334 C
389.6045 276.9014 392.168 265.835 391.583 254.9189 C
394.4277 256.3477 397.2646 258.0205 399.8086 260.3008 C
397.2949 244.4102 410.2646 236.3887 399.2852 227.5654 C
412.4277 233.8418 420.0166 215.708 430.9531 213.8604 C
425.3496 212.3643 420.9365 208 416.5859 204.3047 C
451.4385 200.3916 484.5156 181.6104 504.792 152.9307 C
517.8984 134.541 526.7393 112.3252 526.6143 89.3457 C
526.6182 88.8076 526.6182 88.2695 526.6133 87.7305 C
526.7402 65.1113 518.6777 42.6406 504.4453 25.1895 C
495.9883 14.8623 485.4609 6.16406 473.623 0 C
595.2754 0 L
595.2754 595.2754 L
0 595.2754 L
0 441.0259 L
21.915 475.7876 59.772 500.0093 103.8735 503.0454 C
125.0576 504.5034 145.2188 499.6567 162.5259 490.1069 C
195.0576 474.2676 218.4521 441.9531 221.1162 403.2671 C
221.2334 401.5605 221.2993 399.8633 221.314 398.1753 C
221.564 393.4932 221.0781 389.0791 220.3867 384.7866 C
220.3105 384.3159 L
218.7969 375.4482 216.4448 367.0142 214.1167 358.6216 C
209.6636 342.79 204.9644 327.1489 202.1152 311.2344 C
Bb
0 0 0 0 Bh
1 (GradientFill 2) 565.5117 17.8584 -139 808.2167 1 0 0 1 0 0 Bg
-609.9689 -530.2378 -530.2378 609.9689 565.5117 17.8584 Bm
f
0 BB
*U
*u
0 D
0 g
109.0059 104.4854 m
108.4321 104.3643 L
108.2192 104.4893 108.0093 104.6172 107.7891 104.7432 C
108.2031 104.6465 108.6064 104.5625 109.0059 104.4854 C
109.0059 104.4854 L
f
1 D
0 g
537.8984 0 m
543.4346 4.70313 548.543 9.91016 553.1387 15.5225 C
570.1074 36.3291 579.7207 63.1221 579.5693 90.0869 C
579.8076 117.2422 569.3838 143.5049 553.8994 165.2295 C
529 200.4492 487.6865 222.9707 444.7217 226.1602 C
445.0752 226.418 445.4307 226.6855 445.7832 226.958 C
488.3457 223.3369 529.1162 200.8496 553.8076 165.9268 C
569.0596 144.5244 579.4199 118.7334 579.5693 92.0146 C
579.7197 119.4121 569.1777 145.9014 553.5508 167.8262 C
529.375 202.0234 489.9326 224.4082 448.376 229.0713 C
453.5674 233.4775 458.8301 238.6875 465.5146 240.4717 C
452.4756 242.6748 443.4268 264.2959 427.7559 256.8135 C
440.8477 267.332 425.3848 276.8945 428.3809 295.8418 C
425.3477 293.123 421.9629 291.1279 418.5713 289.4258 C
419.2686 302.439 416.2148 315.6348 409.2207 326.7612 C
400.1152 341.1914 383.7705 350.3857 366.9102 351.311 C
383.0947 349.959 398.6152 340.9702 407.374 327.0879 C
414.6035 315.5889 417.584 301.8599 416.5293 288.4287 C
415.1865 287.792 413.8535 287.1865 412.5498 286.5869 C
412.3115 296.0938 407.5391 303.5151 399.5244 308.1235 C
401.9365 299.0503 387.8926 291.6738 382.9189 277.2168 C
373.7461 277.5283 362.5498 274.1563 355.668 277.8428 C
365.1563 267.9434 364.7285 252.751 372.3965 246.4531 C
371.8916 245.4561 371.3682 244.457 370.8271 243.4551 C
364.0781 240.9463 361.751 232.5752 358.667 224.7324 C
354.5127 219.25 349.7773 213.6865 344.416 208.0303 C
342.791 206.8252 341.1924 205.5889 339.6162 204.3223 C
314.1738 187.3359 292.8506 164.0771 278.1738 137.1689 C
273.7515 129.1807 269.9473 120.8672 266.7686 112.3203 C
291.5801 194.668 360.4805 233.9053 353.3604 319.1309 C
346.5918 366.938 301.6143 399.6753 253.9785 392.4111 C
237.9902 389.9736 224.1025 382.2764 213.7925 371.3467 C
208.7173 366.6299 204.3765 361.1792 200.9165 355.1943 C
198.1504 355.6558 195.3916 356.1475 192.6724 356.5688 C
196.0703 375.5435 201.6733 394.1924 206.9824 413.0693 C
209.7583 423.0747 212.5635 433.1304 214.3682 443.7036 C
214.3999 443.8896 214.4292 444.0781 214.459 444.2656 C
215.2832 449.3838 215.8618 454.6465 215.5645 460.2285 C
215.562 460.2534 L
215.5454 462.2568 215.4678 464.2734 215.3286 466.2988 C
212.1519 512.4238 184.2593 550.9526 145.4722 569.8374 C
145.4678 569.8394 L
124.8369 581.2227 100.7979 587.002 75.541 585.2642 C
47.7012 583.3472 21.9497 574.3496 0 560.1553 C
0 557.4766 L
22.2832 572.521 48.7134 582.0801 77.3794 584.0547 C
98.4165 585.502 118.5967 581.6787 136.6333 573.7173 C
119.9375 580.2974 101.5552 583.3623 82.4609 582.0474 C
51.5371 579.9189 23.2378 568.8906 0 551.6421 C
0 543.0513 L
0.385742 543.3594 0.772461 543.666 1.16211 543.9702 C
42.4917 577.0889 104.5923 588.6367 151.5601 560.7583 C
174.8374 547.4355 193.48 526.0239 203.3867 500.895 C
213.2119 475.8433 215.2476 447.0054 204.5601 421.9849 C
194.728 397.6982 174.4038 377.814 149.7246 368.4229 C
141.3296 375.0562 128.5132 375.0449 122.0493 385.4907 C
121.915 379.645 114.0254 371.728 108.8125 362.5029 C
94.7295 363.8804 81.0649 368.8423 69.6675 377.728 C
67.7222 379.1714 65.8496 380.7163 64.0508 382.3491 C
57.2432 388.751 51.7778 396.5679 48.2388 405.2163 C
42.4419 419.4111 41.3892 436.0439 46.8394 450.4966 C
47.9873 453.9644 49.5146 457.3115 51.4429 460.4653 C
60.6626 475.9756 78.71 485.7529 96.8501 484.7803 C
101.0669 484.6548 105.229 483.8413 109.1797 482.4268 C
114.7241 480.7271 119.9302 477.9028 124.3418 474.1626 C
127.9038 471.106 130.918 467.4497 133.2749 463.4116 C
130.7427 468.5015 127.2144 473.1025 122.8828 476.8188 C
115.6875 482.9214 106.4072 486.6138 96.9561 486.9878 C
78.041 488.1904 58.98 478.1724 49.0894 461.9082 C
38.936 445.6104 38.9858 424.6143 46.0791 407.2393 C
46.9287 405.1665 47.8887 403.1396 48.9487 401.1694 C
40.4761 415.8774 36.6807 433.3232 39.561 450.2002 C
43.7837 476.9429 67.416 498.9517 94.5518 501.9019 C
94.5449 501.9019 94.5366 501.9019 94.5293 501.9004 C
60.5938 498.2788 35.3306 468.4209 37.6953 434.0869 C
40.3696 395.2603 70.4092 364.8501 107.6812 360.3872 C
107.4805 359.9839 L
89.1382 361.7598 71.332 368.7886 57.207 380.8662 C
39.3071 396.2222 29.7778 420.1665 31.2461 443.4541 C
29.0303 419.2954 38.6777 394.1372 57.2837 378.1733 C
69.8467 367.4341 85.2935 360.6489 101.4541 357.9614 C
64.5845 356.9409 30.2109 360.2749 12.6021 332.042 C
33.0317 351.2104 70.1709 335.9253 108.0933 336.0283 C
109.1484 334.4458 110.4404 332.8481 112.0186 331.2393 C
87.2583 347.0771 76.8701 314.5449 54.8369 308.002 C
73.6519 305.3589 87.5132 274.6709 109.7192 286.043 C
91.3379 270.4111 113.9297 257.2949 110.3828 229.9648 C
128.3296 246.9785 155.7891 245.6484 154.271 272.0078 C
155.3667 268.6865 156.8804 266.1377 158.7212 264.1973 C
162.4766 239.291 177.3389 226.666 196.7036 226.3525 C
189.7852 233.5527 194.8491 245.8604 196.4009 260.5469 C
203.0269 261.165 209.2524 261.1475 214.0967 258.7246 C
208.1499 264.5908 204.7266 271.8936 201.896 279.0273 C
209.5342 270.1318 219.5913 264.0615 230.5088 261.1777 C
240.7886 257.8438 251.9434 257.2725 262.479 260.0684 C
277.2163 264.0059 289.4072 275.5146 294.6763 289.6582 C
289.2227 276.2041 277.4258 265.3438 263.2485 261.5566 C
260.5132 260.8301 257.7334 260.334 254.9399 260.0566 C
261.7158 261.1963 268.4009 263.5664 274.6592 267.2441 C
296.6162 280.1523 303.9521 308.415 291.0444 330.3716 C
281.7471 346.1909 262.481 352.5244 245.9121 346.0835 C
244.0845 345.374 242.2896 344.5083 240.5439 343.4814 C
226.4912 335.2207 221.7964 317.1318 230.0562 303.0815 C
236.5093 292.0986 250.4697 288.2617 261.5918 294.2461 C
261.5928 294.248 261.5957 294.249 261.5977 294.252 C
252.6934 289.4805 240.875 291.2637 233.9951 298.5493 C
226.8511 305.9287 224.749 317.4316 228.042 326.9761 C
230.7891 335.5933 237.8535 342.1411 246.1821 345.2495 C
247.314 345.6709 248.4722 346.0303 249.6465 346.3228 C
259.3896 348.957 270.1577 347.1904 278.4941 341.6567 C
286.9868 336.2485 292.3945 327.0146 294.6309 317.3101 C
296.856 307.5625 295.6362 297.1245 291.313 288.1914 C
282.7939 269.8574 261.4126 260.4043 241.8682 261.8799 C
230.0815 262.6328 218.8262 267.4629 210.0205 275.0654 C
204.6724 279.8721 200.2344 285.6787 196.9312 292.0762 C
196.5991 292.7715 196.2817 293.4746 195.98 294.1865 C
194.0527 298.5825 192.6382 303.1411 191.6538 307.8086 C
192.021 307.979 192.3784 308.1611 192.7275 308.355 C
197.6001 282.0361 220.4941 263.3008 246.6094 263.0508 C
249.5562 263.0225 252.5439 263.2285 255.5503 263.6865 C
279.7568 267.3691 296.3955 289.9805 292.7109 314.187 C
289.8306 333.1035 272.5054 346.2427 253.6533 344.0947 C
253.6479 344.0938 253.6455 344.0933 253.6411 344.0923 C
268.7217 345.7813 284.2134 336.7017 289.7446 322.7041 C
295.5942 308.4258 292.1113 291.21 282.1929 279.7324 C
273.5557 269.2461 260.0488 264.0557 246.7031 264.3662 C
244.8843 264.4082 243.0693 264.5527 241.2695 264.7988 C
226.21 266.5605 212.1777 275.0293 203.6372 287.3965 C
198.8779 294.0137 195.9888 301.6792 194.6953 309.6558 C
206.5723 318.813 205.9297 343.8574 219.3433 353.7949 C
214.2974 353.3608 209.0195 353.9258 203.7319 354.7407 C
206.9883 360.0605 210.978 364.9243 215.5767 369.1182 C
237.6826 389.938 272.7769 391.1978 299.2148 378.2383 C
304.4111 375.7661 309.2871 372.7227 313.7822 369.2139 C
306.5576 374.3281 298.416 378.166 289.8418 380.4131 C
273.6035 384.6763 255.5146 383.4683 240.4551 375.9639 C
232.46 371.9648 225.4946 366.0405 220.1074 358.9077 C
225.2959 365.2012 231.7437 370.4438 239.041 374.0928 C
254.2402 381.6665 272.4932 382.8882 288.8804 378.585 C
305.3574 374.2646 320.2539 364.1348 330.1846 350.3574 C
340.3643 336.6831 344.8252 319.4253 345.0264 302.4287 C
345.0869 298.4873 344.8643 294.5566 344.3916 290.6621 C
341.3936 266.7559 330.8633 243.6162 317.6211 222.9707 c
278.1348 161.4092 253.6543 139.9902 239.4233 74.5566 C
254.8716 182.2754 346.2871 215.0498 341.7588 310.7925 C
341.1582 323.4927 336.5088 335.146 330.4199 345.3945 C
334.8242 335.3823 338.4063 322.1982 334.4033 312.6206 C
335.3389 310.9971 337.6543 310.3589 339.4375 310.2627 C
340.0664 302.7998 339.5127 294.6729 338.502 287.2773 C
329.7969 218.0156 269.4966 182.0234 245.7427 107.1865 C
258.1392 153.1104 275.7051 163.5566 266.5879 209.7637 C
270.5664 172.1875 219.0737 123.6846 238.8521 77.9609 C
238.5552 76.0908 238.2739 74.2061 238.0239 72.2871 C
231.9058 80.6973 225.2134 88.2666 218.355 95.4834 C
218.0044 95.8555 217.6499 96.2256 217.2969 96.5938 C
197.1372 117.417 175.542 135.5605 154.0815 153.6328 C
111.1118 189.5625 67.7974 224.4346 29.7314 264.1973 C
19.4116 275.0244 9.36084 286.3125 0 298.0845 C
0 282.4971 L
70.2793 197.1504 180.1367 126.5898 224.2393 68.9521 C
224.2314 68.958 L
180.6772 125.7412 72.0962 194.0996 0 276.9854 C
0 270.1377 L
59.9844 201.1143 143.3936 141.7959 194.3223 91.1934 C
188.4619 94.4873 182.3721 97.3379 176.0898 99.6631 C
176.0908 99.6631 L
175.8975 99.7324 L
175.1528 100.0068 174.4048 100.2734 173.6553 100.5332 C
166.543 103.0156 159.2393 105.0391 151.8345 106.5273 C
143.8901 109.624 136.667 112.9385 130.1084 116.459 C
133.3667 122.4893 136.0518 129.5117 140.4263 134.5957 C
127.8291 130.584 111.6162 144.7305 101.5386 136.6875 C
100.7222 137.4629 99.9258 138.2441 99.1455 139.0322 C
98.0303 148.584 86.4209 157.3545 84.3818 170.4922 C
83.7764 166.7559 81.2422 163.2207 78.1816 159.7178 C
69.2222 164.8408 60.1719 167.0029 58.9185 173.8701 C
51.1792 162.7646 52.2617 149.1748 64.8447 136.8643 C
65.1919 135.0273 66.0171 133.125 67.4526 131.1455 C
53.1299 142.7842 42.6558 126.6719 25.6729 123.4551 C
42.6162 114.292 40.8159 96.1201 57.1924 100.1494 C
46.6016 94.7344 48.6943 83.5166 49.1289 73.2051 C
35.9248 60.7236 25.4395 45.3418 19.4824 28.3047 C
16.3115 19.1963 14.5947 9.62695 14.2813 0 C
14.9429 0 L
15.5605 8.31152 17.2241 16.5391 19.9663 24.4229 C
25.8726 41.3115 36.1851 56.5879 49.1763 69.0625 C
49.1304 67.4688 48.9917 65.9238 48.7017 64.4512 C
37.8662 52.0439 29.5313 37.1084 24.7261 20.2139 C
22.811 13.4795 21.6978 6.70898 21.3291 0 C
40.7798 0 L
41.2583 4.24219 42.1172 8.43066 43.3379 12.5137 C
45.7402 20.666 49.4897 28.7529 54.0283 35.9814 C
58.2856 42.8096 63.4526 48.9609 69.2856 54.3369 C
69.3125 52.4912 69.4214 50.7012 69.5967 48.9854 C
61.4634 40.4102 55.0073 30.2695 51.1318 19.1855 C
48.9785 13 47.728 6.5293 47.3511 0 C
47.9199 0 L
48.4722 5.54785 49.6572 11.0283 51.4927 16.3027 C
55.376 27.4092 61.8252 37.5762 69.9492 46.1904 C
70.9517 39.5498 72.9331 34.3945 74.8862 32.2598 C
74.6689 50.8086 93.7725 50.3154 101.7949 68.2236 C
101.7993 68.2256 L
108.6445 67.7207 115.4932 68.6221 118.6138 66.4785 C
117.6699 68.7617 117.4326 70.9902 117.5659 73.1807 C
129.1587 75.7246 141.2256 76.0596 152.8921 74.0078 C
173.7441 70.6699 192.6177 59.209 207.4854 44.2998 C
211.8726 39.9277 215.8477 35.1846 219.4087 30.1553 C
220.4272 28.6816 221.4121 27.1816 222.3579 25.6631 C
227.4355 17.5791 231.3965 8.93555 234.2329 0 C
268.7603 0 L
257.7324 44.5527 263.8193 93.1094 286.0146 133.1963 C
303.9805 166.1406 332.2568 193.4209 365.8789 209.8906 C
364.085 210.248 L
330.7891 193.6689 302.7959 166.5088 284.9453 133.7764 C
262.8203 93.8193 257.7451 44.6982 268.8384 0 C
282.6533 0 L
282.7607 7.90039 286.3262 16.8115 292.6372 23.2227 C
286.0732 20.207 282.041 14.3203 280.5425 7.88184 C
279.0132 17.2793 282.9854 28.6543 288.8687 35.8232 C
295.4419 43.833 296.1494 55.2637 283.6011 55.4473 C
305.875 63.4727 288.3442 83.8389 294.3237 104.8701 C
295.5596 108.4014 297.541 111.7041 300.1953 114.4805 C
302.9229 117.3545 306.3057 119.6309 310.0469 121.0996 C
313.8047 122.5371 317.9648 123.252 321.7344 122.8213 C
329.4727 122.0791 336.7607 116.5254 339.5957 108.8867 C
340.3008 107.001 340.7852 104.9531 340.9521 102.9551 C
341.126 101.0068 340.9619 99.0322 340.4521 97.126 C
339.4688 93.3086 337.0645 89.792 333.7725 87.4111 C
330.5664 85.043 326.166 83.7148 322.291 84.0918 C
318.332 84.457 314.5029 86.6729 312.1289 90.0527 C
310.6982 92.0996 309.7588 94.5898 309.5479 97.0869 C
309.415 98.6846 309.5811 100.2861 310.1094 101.7744 C
311.4092 105.6631 314.9951 108.791 319.2266 109.4678 C
323.333 110.2939 327.8125 107.9766 329.5479 103.9658 C
330.3896 101.9746 330.6553 99.7139 329.9053 97.7119 C
329.1963 95.6953 327.5771 93.9639 325.5254 93.1436 C
323.4697 92.2852 321.0742 92.3398 319.2021 93.6123 C
317.6309 94.6367 316.5322 96.4512 316.3535 98.3633 C
316.3223 98.7129 316.3193 99.0654 316.3516 99.418 C
316.5547 101.6904 318.4482 103.7607 320.8311 104.0938 C
323.1797 104.5811 325.7539 102.7129 325.9688 100.1748 C
325.7764 102.6846 323.5889 104.5635 321.0791 104.375 C
317.9395 104.1406 315.585 101.4033 315.8174 98.2627 C
316.1133 94.3369 319.5332 91.3926 323.46 91.6865 C
328.3672 92.0537 332.0469 96.3291 331.6807 101.2383 C
331.2197 107.3721 325.876 111.9727 319.7412 111.5137 C
312.0723 110.9395 306.3232 104.2568 306.8965 96.5898 C
307.6143 87.0039 315.9668 79.8164 325.5518 80.5332 C
337.5332 81.4316 346.5186 91.8711 345.6201 103.8525 C
344.498 118.8291 331.4492 130.0596 316.4727 128.9375 C
316.0518 128.9072 315.6328 128.8643 315.2168 128.8184 C
321.8203 133.7246 318.4902 141.3213 309.9004 136.2314 C
311.8936 142.6182 335.8691 149.1416 343.6201 157.042 C
352.9736 166.5781 345.1318 176.248 330.6846 165.5635 C
341.459 183.2939 371.6934 176.2578 390.3408 182.2207 c
398.3594 184.7861 403.9063 190.8232 404.0986 196.8887 C
408.957 194.7109 414.2412 193.0449 417.251 187.8643 C
417.4043 190.8984 420.5879 194.6523 423.7764 198.9873 C
435.7109 199.3252 447.4209 203.877 460.9316 204.2373 c
472.6914 204.5518 482.9609 200.5918 484.8125 192.1045 C
484.9746 191.2568 485.0723 190.3965 485.1074 189.5273 C
485.1611 186.5566 484.3008 183.126 482.3008 179.2275 C
482.2979 179.2217 L
481.9707 178.71 481.6201 178.2158 481.2432 177.7393 C
479.584 175.6777 477.458 173.8945 475.1719 172.8926 C
470.5313 170.751 464.5518 171.4941 460.4141 174.8955 C
459.3877 175.7324 458.4346 176.7354 457.6777 177.8154 C
456.9355 178.8643 456.374 180.041 456.0322 181.291 C
455.3281 183.7861 455.5303 186.5801 456.6104 189.0215 C
457.6484 191.4297 459.708 193.6396 462.0361 194.709 C
464.4043 195.8125 467.3125 195.8232 469.7803 194.6865 C
471.2715 193.998 472.6299 192.8965 473.5762 191.5469 C
474.1807 190.6826 474.6162 189.7188 474.8086 188.6973 C
475.3584 186.0586 474.3564 183.0928 472.1768 181.3086 C
470.1172 179.4785 466.8047 179.3135 464.4922 181.0166 C
463.3555 181.8691 462.4551 183.0635 462.2197 184.4521 C
461.9531 185.833 462.2988 187.3516 463.1943 188.4961 C
464.0762 189.6641 465.4551 190.4268 466.9414 190.3252 C
468.1738 190.2617 469.3984 189.5947 470.1318 188.5684 C
470.2656 188.3799 470.3838 188.1807 470.4824 187.9697 C
471.1201 186.6113 470.7295 184.8076 469.4873 183.8291 C
468.3135 182.7754 466.2324 182.9854 465.2695 184.3535 C
466.21 182.9941 468.0742 182.6504 469.4375 183.5869 C
471.1445 184.7617 471.5762 187.0947 470.4023 188.8018 C
468.9365 190.9346 466.0186 191.4746 463.8848 190.0088 C
461.2178 188.1748 460.5439 184.5264 462.3779 181.8604 C
464.6689 178.5283 469.2285 177.6846 472.5615 179.9756 C
476.7285 182.8408 477.7822 188.541 474.917 192.707 C
471.3369 197.9121 464.2119 199.2324 459.0039 195.6504 C
452.4941 191.1748 450.8477 182.2686 455.3232 175.7588 C
460.9199 167.6221 472.0518 165.5645 480.1885 171.1582 C
481.7578 172.2383 483.1465 173.4844 484.3477 174.8535 C
484.3477 174.8525 L
484.3477 174.8545 L
490.4746 181.8486 491.6982 192.1123 487.0566 200.4355 C
485.0928 204.0693 482.0332 207.3203 478.2803 210.501 C
505.7324 201.5469 530.5381 184.2158 547.5664 160.6299 C
561.1904 141.8828 570.749 119.7012 572.3037 96.6074 C
572.3877 94.9502 572.4336 93.2881 572.4336 91.623 C
572.835 65.9375 563.9209 40.1943 547.8359 20.0664 C
541.8613 12.582 534.8711 5.79883 527.1406 0 C
527.9941 0 L
535.5137 5.68457 542.3174 12.3105 548.1465 19.6113 C
564.0742 39.5439 572.9023 65.0352 572.5029 90.4688 C
572.5029 92.3867 572.4424 94.2969 572.3301 96.2041 C
572.46 94.1572 572.5283 92.1045 572.5283 90.0449 C
572.9258 64.7041 564.1299 39.3057 548.2607 19.4453 C
542.4854 12.2119 535.75 5.64355 528.3086 0 C
537.8984 0 L
537.8984 0 L
f
0 D
0 g
412.248 0 m
405.3125 0 L
387.6533 17.0371 376.0801 41.2441 377.9082 66.1553 C
379.5938 93.0566 396.8896 118.1689 421.3916 129.1191 C
433.4854 134.877 447.5498 136.3564 460.5898 133.4502 C
473.6406 130.457 485.5283 122.9902 493.9668 112.6572 C
502.1748 102.2676 507.4346 88.9951 506.1719 75.5635 C
505.1484 62.2539 498.2646 49.5215 487.6152 41.5254 C
477.2061 33.3555 462.7646 29.8564 450.0498 34.3262 C
437.4424 38.4814 427.3057 49.623 424.9854 62.7295 C
422.751 75.4648 429.6963 89.0342 441.2324 94.6357 C
443.2783 95.8232 445.5293 96.6992 447.917 97.1982 C
444.2598 95.1348 441.0352 92.3945 438.4102 89.1504 C
437.9316 89.9297 437.543 90.7832 437.2715 91.7217 C
428.5244 85.1914 423.7529 73.6387 425.7617 62.8604 C
428.1426 50.1074 438.1611 39.332 450.418 35.4395 C
462.793 31.2441 476.6309 34.751 486.6543 42.7646 C
496.8789 50.5957 503.3662 62.9424 504.2188 75.7148 C
505.3066 88.5771 500.1396 101.2344 492.1426 111.1729 C
483.9434 121.0186 472.4805 128.0439 459.9922 130.7773 C
447.498 133.4131 434.2139 131.8936 422.7129 126.2822 C
399.334 115.5527 383.1514 91.4102 381.8115 65.8984 C
380.166 40.6816 393.2344 16.0898 412.248 0 C
412.248 0 L
f
0 g
404.7764 0 m
403.3193 0 L
385.2109 17.2852 373.3066 41.9854 375.1738 67.4092 C
376.8818 94.6738 394.4121 120.1279 419.2471 131.2275 C
431.5029 137.0625 445.7588 138.5635 458.9746 135.6162 C
472.2041 132.584 484.2529 125.0156 492.8057 114.54 C
494.5313 112.3555 496.127 110.0439 497.5635 107.6328 C
496.3555 109.5498 495.0479 111.3984 493.6553 113.1621 C
485.1855 123.5342 473.2549 131.0273 460.1543 134.0322 C
447.0684 136.9482 432.9541 135.4629 420.8154 129.6855 C
396.2246 118.6953 378.8662 93.4902 377.1748 66.4922 C
375.3359 41.4434 386.9961 17.1035 404.7764 0 C
404.7764 0 L
f
0 g
175.1255 0 m
163.9268 0 L
158.3389 9.38672 149.6294 17.0771 139.0811 21.0557 C
122.7368 27.9824 102.165 22.1738 91.5513 7.00098 C
90.0303 4.78906 88.6943 2.44043 87.6021 0 C
81.1655 0 L
89.272 23.5254 114.4609 36.8721 138.6875 29.9844 C
155.124 25.3105 167.9375 14.1133 175.1255 0 C
175.1255 0 L
f
0 g
130.981 0 m
128.1602 0 L
128.0566 0.039063 127.9536 0.076172 127.8491 0.113281 C
123.5156 1.97949 118.5513 1.78125 114.1689 0 C
112.751 0 L
116.9951 2.2373 122.0742 2.9082 127.0527 1.49316 C
128.4268 1.10254 129.7373 0.600586 130.981 0 C
130.981 0 L
f
0 g
0 522.1289 m
0 525.2114 L
10.4185 530.9121 21.8589 534.7754 33.6328 536.4634 C
56.0088 539.6816 80.0186 535.2935 99.0186 522.9468 C
109.1016 516.374 117.5132 507.3799 123.6279 497.0142 C
117.6504 506.2271 109.8276 514.2271 100.6265 520.2285 C
81.4517 532.688 57.2202 537.1157 34.6401 533.8696 C
22.4946 532.1289 10.7007 528.0938 0 522.1289 C
0 522.1289 L
f
0 g
0 530.4189 m
0 534.6406 L
4.34033 537.5933 8.8667 540.2725 13.5518 542.6475 C
38.854 555.4858 69.1646 559.9453 96.7231 552.9248 C
111.3564 549.1733 124.9795 541.8711 136.4238 532.0132 C
125.606 540.5557 113.084 546.915 99.7271 550.3398 C
71.9146 557.4268 41.3267 552.9258 15.793 539.9697 C
10.2983 537.1841 5.01807 533.9854 0 530.4189 C
0 530.4189 L
f
0 g
117.8853 75.8193 m
118.0166 76.5732 118.1753 77.3271 118.3491 78.0762 C
125.5518 79.1846 132.8477 79.3955 140.0376 78.625 C
145.939 78.1045 151.9287 76.8906 157.8594 75.1074 C
155.7964 75.6064 153.7134 76.0273 151.6089 76.3652 C
140.4771 78.3223 128.9785 78.0879 117.8853 75.8193 C
117.8853 75.8193 L
f
0 g
125.3638 109.4111 m
125.5459 109.6143 125.7275 109.8223 125.9038 110.0352 C
127.1357 109.7764 128.3853 109.5293 129.6504 109.2852 C
128.2217 109.3496 126.7915 109.3906 125.3638 109.4111 C
125.3638 109.4111 L
f
0 g
155.0527 102.3701 m
155.5376 102.29 156.0215 102.208 156.5044 102.124 C
171.6475 99.7002 186.0146 94.0938 199.1802 86.2939 C
199.3389 86.1309 199.5034 85.9648 199.6636 85.8037 C
189.6265 91.5791 178.7334 96.2344 167.0918 99.5449 C
162.5054 100.8477 157.9053 101.8535 153.313 102.5742 C
153.8921 102.5098 154.4722 102.4404 155.0527 102.3701 C
155.0527 102.3701 L
f
0 g
133.813 107.082 m
133.4907 107.0811 133.1655 107.0771 132.8413 107.0742 C
131.4019 107.1504 129.9629 107.2109 128.522 107.2529 C
130.2861 107.2314 132.0498 107.1719 133.813 107.082 C
133.813 107.082 L
f
0 g
359.1582 211.1611 m
331.0898 196.5605 306.916 174.4785 289.5605 147.9355 C
300.5205 165.1904 314.2842 180.6621 330.1045 193.5762 C
338.8945 200.5156 348.4043 206.5332 358.4814 211.2686 C
359.1582 211.1611 L
359.1582 211.1611 L
f
0 g
255.3906 60.75 m
260.8247 179.3115 357.4814 216.6191 349.1211 316.4639 C
342.4043 363.8149 297.7666 396.2397 250.4873 389.0449 C
237.1001 387.0078 225.1948 381.2598 215.6543 373.0142 C
225.5454 382.6284 238.3574 389.355 252.9385 391.603 C
299.9521 398.8501 344.3369 366.1885 351.0176 318.4922 C
358.5088 227.8594 280.7861 189.335 261.3457 95.3125 C
258.3193 84.0107 256.3281 72.4258 255.3906 60.75 C
255.3906 60.75 L
f
0 g
151.8662 366.4668 m
158.8027 369.1494 165.3467 372.5811 171.4072 376.6543 C
165.3765 372.4688 158.8789 368.9639 152.0698 366.2524 C
152.0029 366.3247 151.9351 366.396 151.8662 366.4668 C
151.8662 366.4668 L
f
0 g
157.6992 344.9932 m
159.3286 346.5029 160.9277 348.042 162.4932 349.6123 C
160.5859 347.3408 158.8735 344.4829 157.3906 340.9077 C
157.5396 342.3398 157.6367 343.6943 157.6992 344.9932 C
157.6992 344.9932 L
f
0 g
164.9727 352.1528 m
175.6519 363.3213 184.7886 375.9194 192.4375 389.4268 C
190.3638 385.5469 188.1675 381.7275 185.8457 377.9761 C
181.0845 370.2256 175.8789 362.7046 170.252 355.5156 C
168.3911 354.6973 166.624 353.5972 164.9727 352.1528 C
164.9727 352.1528 L
f
0 g
177.5171 357.3916 m
178.688 359.0649 179.834 360.7588 180.9531 362.4692 C
180.1792 360.7969 179.4229 359.1396 178.6909 357.4985 C
178.2974 357.4707 177.9058 357.4351 177.5171 357.3916 C
177.5171 357.3916 L
f
0 g
196.1021 389.6699 m
196.3188 390.5146 L
196.3242 390.5283 L
196.1021 389.6699 L
196.1021 389.6699 L
f
0 g
492.4707 203.002 m
510.9297 194.1338 549.4785 167.4307 541.8389 127.2705 C
544.7979 144.9082 537.4668 161.543 519.9111 174.6191 c
503.2598 187.0195 499.3154 198.1162 492.4707 203.002 C
492.4707 203.002 L
f
0 g
281.4214 13.75 m
283.085 30.4502 291.3535 34.4102 298.915 35.834 C
300.1416 24.375 285.4932 25.0908 281.4214 13.75 C
281.4214 13.75 L
f
0 g
488.502 205.5332 m
515.9111 193.2861 560.0195 163.4385 541.75 118.4336 C
541.7559 129.0342 517.8555 128.5332 508.3809 143.1299 C
491.7373 168.7666 505.0029 192.127 488.502 205.5332 C
488.502 205.5332 L
f
198.6943 400.8687 m
192.9595 387.5068 185.9614 374.7002 177.6533 362.8652 C
179.7104 365.897 181.6982 368.9712 183.6113 372.0859 C
189.1367 381.0151 193.9541 390.3291 198.0791 399.9277 C
198.2871 400.2397 198.4917 400.5527 198.6943 400.8687 C
Bb
0 0 0 0 Bh
1 (GradientFill 3) 266.6025 199.0928 -139 497.3037 1 0 0 1 0 0 Bg
-375.3199 -326.2605 -326.2605 375.3199 266.6025 199.0928 Bm
f
0 BB
*U
317.6465 301.8613 m
322.7529 293.2656 326.6523 283.4922 327.1563 272.8398 C
331.3223 184.7646 238.6689 160.2344 239.4722 46.6035 C
239.1694 46.8213 238.8706 47.0273 238.5747 47.2275 C
238.187 151.3662 315.2773 180.333 324.4238 253.1172 C
325.2725 259.3203 325.7373 266.1357 325.21 272.3955 C
323.7129 272.4766 321.7715 273.0117 320.9873 274.373 C
324.3438 282.4063 321.3408 293.4639 317.6465 301.8613 C
Bb
1 (GradientFill 4) 264.167 249.6133 -78 155.277 1 0 0 1 0 0 Bg
32.2839 -151.8838 -136.2316 -28.9569 332.7969 264.2012 Xm
1705.2197 -8022.4292 -136.2316 -28.9569 -1372.4229 8286.6299 Bc
32.2839 -151.8838 -136.2316 -28.9569 332.7969 264.2012 Bm
1705.2197 -8022.4292 -136.2316 -28.9569 365.0811 112.3174 Bc
f
0 BB
*u
0 g
372.4404 203.7461 m
360.5107 200.875 348.9658 196.1318 338.2803 190.0957 C
336.0342 188.8359 333.833 187.5068 331.6758 186.1113 C
343.2334 193.1963 355.917 198.3008 369.3213 200.4814 C
370.165 200.6318 371.0098 200.7695 371.8564 200.8984 C
371.7002 200.042 371.5566 199.1836 371.4365 198.3213 C
370.2344 198.1504 369.0361 197.9609 367.8408 197.7471 C
348.1104 194.5381 329.9277 185.0498 314.5635 172.2402 C
313.502 172.8281 L
313.6885 173.0156 L
329.9844 189.4414 350.5059 202.2461 373.2178 206.7256 C
372.9346 205.7373 372.6729 204.7451 372.4404 203.7461 C
372.4404 203.7461 L
f
1 D
325.2002 181.8545 m
330.2051 185.7842 335.5088 189.3438 341.0869 192.4717 C
342.9443 193.5215 344.8291 194.5293 346.7363 195.4961 C
338.3857 191.4297 330.5107 186.3145 323.2393 180.4512 C
323.8887 180.9248 324.543 181.3926 325.2002 181.8545 C
Bb
1 (GradientFill 4) 367.4551 205.332 -143 57.5672 1 0 0 1 0 0 Bg
-45.9752 -34.6448 -13.1525 17.454 373.4697 197.3496 Xm
-6605.0327 -4977.2476 -13.1525 17.454 6978.502 5174.5967 Bc
-45.9752 -34.6448 -13.1525 17.454 373.4697 197.3496 Bm
-6605.0327 -4977.2476 -13.1525 17.454 327.4941 162.7051 Bc
f
0 BB
*U
0 D
209.8521 309.2822 m
218.0415 325.8579 233.8999 338.3013 253.5327 341.2954 C
293.4868 347.3882 331.21 319.9307 336.8867 279.835 C
344.3789 190.1484 251.5024 161.1855 257.2212 45.3408 C
256.9023 45.5488 256.5898 45.7471 256.2793 45.9385 C
250.9844 161.0156 342.3037 189.9727 334.9219 279.2979 C
329.3193 319.3018 292.0918 346.6963 252.6611 340.6172 C
233.522 337.667 218.0176 325.5176 209.8521 309.2822 C
Bb
1 (GradientFill 4) 271.002 283.6523 -78 176.9777 1 0 0 1 0 0 Bg
36.7957 -173.1103 -131.3255 -27.9141 337.9414 297.8809 Xm
1711.0442 -8049.832 -131.3255 -27.9141 -1373.103 8347.7129 Bc
36.7957 -173.1103 -131.3255 -27.9141 337.9414 297.8809 Bm
1711.0442 -8049.832 -131.3255 -27.9141 374.7373 124.7705 Bc
f
0 BB
306.9111 199.1816 m
320.623 220.5576 330.8691 245.123 330.04 270.1504 C
329.583 295.0039 314.1221 318.6318 291.4741 329.4077 C
269.2998 340.2783 239.8652 339.2207 221.3242 321.7593 C
212.0845 313.3296 205.7778 301.6904 203.8232 289.248 C
201.8984 276.8486 203.9033 263.5176 211.3105 253.2168 C
218.4736 242.8447 230.2437 235.7412 242.8735 234.2646 C
244.3828 234.0576 245.9053 233.9365 247.4307 233.9014 C
258.6245 233.6416 269.9531 237.9941 277.1973 246.7881 C
285.5151 256.416 288.4375 270.8545 283.5313 282.8301 C
278.8916 294.5713 265.8984 302.1855 253.25 300.77 C
253.2534 300.77 253.2568 300.7705 253.2607 300.771 C
269.0723 302.5728 283.604 291.5527 286.0186 275.6875 C
289.1084 255.3838 275.1538 236.4199 254.8506 233.3301 C
252.3291 232.9463 249.8237 232.7734 247.353 232.7969 C
224.957 233.0137 205.3838 249.4326 201.9053 272.29 C
197.0776 304.0137 218.8813 333.644 250.605 338.4717 C
290.2593 344.5063 327.6982 317.3105 333.332 277.5977 C
340.7695 188.7666 249.0835 158.9688 254.7583 44.2295 C
237.5205 55.4658 231.7505 43.3008 239.813 67.3232 C
251.4951 128.0898 272.3506 145.2998 306.9111 199.1816 c
Bb
1 (GradientFill 4) 281.7305 275.0605 -117 161.3785 1 0 0 1 0 0 Bg
-73.2643 -143.7893 -164.2584 83.6938 365.29 232.4844 Xm
-3743.1431 -7346.3296 -164.2584 83.6938 4108.4336 7578.814 Bc
-73.2643 -143.7893 -164.2584 83.6938 365.29 232.4844 Bm
-3743.1431 -7346.3296 -164.2584 83.6938 292.0259 88.6953 Bc
f
0 BB
203.0459 342.5977 m
159.4688 253.7998 82.1895 319.8462 51.0845 290.6621 C
78.6738 334.8975 155.3281 286.7324 203.0459 342.5977 C
Bb
1 (GradientFill 4) 80.7148 285.1162 27 111.2118 1 0 0 1 0 0 Bg
99.0904 50.4891 51.2731 -100.6291 59.249 327.2446 Xm
7129.9219 3632.8767 51.2731 -100.6291 -7070.6729 -3305.6318 Bc
99.0904 50.4891 51.2731 -100.6291 59.249 327.2446 Bm
7129.9219 3632.8767 51.2731 -100.6291 158.3394 377.7339 Bc
f
0 BB
*u
0 g
162.9487 288.2578 m
175.9463 300.1685 187.1572 314.1646 196.3887 329.1875 C
198.3354 332.3345 200.1777 335.5371 201.917 338.7915 C
192.3198 321.8433 179.9292 306.6001 164.5977 294.5313 C
163.6426 293.7549 162.6763 292.9932 161.7017 292.2422 C
161.3018 293.4277 160.8853 294.6074 160.4355 295.7754 C
161.8276 296.8252 163.2021 297.8984 164.5557 298.998 C
187.1235 316.7627 203.3765 341.3423 213.7754 368.1357 C
215.5181 368.1357 L
215.4146 367.771 L
206.3613 335.7832 189.4775 305.4072 164.0459 283.9707 C
163.7144 285.4102 163.3525 286.8398 162.9487 288.2578 C
162.9487 288.2578 L
f
1 D
207.0957 348.6489 m
203.5391 340.2271 199.3491 332.0625 194.5142 324.2476 C
192.9092 321.6362 191.2422 319.0576 189.5181 316.5142 C
197.1841 327.4375 203.5234 339.3472 208.583 351.7773 C
208.0972 350.73 207.6011 349.687 207.0957 348.6489 C
Bb
1 (GradientFill 4) 219.0884 348.7935 -143 77.069 1 0 0 1 0 0 Bg
-61.55 -46.3813 -24.8485 32.9751 231.5127 332.3057 Xm
-6489.2158 -4889.9731 -24.8485 32.9751 6720.7285 5222.2788 Bc
-61.55 -46.3813 -24.8485 32.9751 231.5127 332.3057 Bm
-6489.2158 -4889.9731 -24.8485 32.9751 169.9629 285.9248 Bc
f
0 BB
*U
*u
0 D
0 g
154.937 458.3828 m
145.8643 465.5483 135.3618 470.8813 124.1592 473.7539 C
100.8315 479.6973 75.1772 475.9233 53.7617 465.0557 C
32.2246 454.1382 14.6182 435.6426 4.9834 413.5806 C
2.96436 409.1455 1.31299 404.5781 0 399.9185 C
0 407.2661 L
1.0249 410.3271 2.2041 413.3413 3.54883 416.2959 C
13.0947 438.1572 30.5415 456.4829 51.8818 467.3013 C
73.103 478.0703 98.5239 481.8101 121.6387 475.9219 C
133.9126 472.7754 145.3379 466.6509 154.937 458.3828 C
154.937 458.3828 L
f
0 337.2607 m
1.2666 332.1846 2.85742 327.2031 4.74023 322.3379 C
2.91748 326.6523 1.33154 331.0688 0 335.5688 C
0 337.2607 L
Bb
1 (GradientFill 4) 147.6919 482.3569 216 209.8345 1 0 0 1 0 0 Bg
-169.7596 -123.3376 -57.2268 78.7659 175.5723 443.9829 Xm
-6502.0386 -4724.0088 -57.2268 78.7659 6677.6104 5167.9912 Bc
-169.7596 -123.3376 -57.2268 78.7659 175.5723 443.9829 Bm
-6502.0386 -4724.0088 -57.2268 78.7659 5.8125 320.6455 Bc
f
0 BB
*U
198.9414 277.0273 m
199.5269 262.2031 207.0708 247.9063 218.8765 239.043 C
230.5972 230.125 246.3145 226.4893 260.6626 230.2959 C
273.0229 233.5986 283.248 243.251 287.667 255.1143 C
283.0933 243.8301 273.1982 234.7217 261.3076 231.5449 C
247.0898 227.7725 231.5161 231.375 219.9019 240.2119 C
208.4087 248.8408 200.9927 262.665 200.1855 277.0781 C
198.9414 277.0273 L
Bb
1 (GradientFill 4) 280.3311 226.6875 143 90.7443 1 0 0 1 0 0 Bg
-72.4716 54.6113 35.0875 46.5627 262.7671 203.3789 Xm
-6525.0063 4916.9434 35.0875 46.5627 6787.7734 -4713.5645 Bc
-72.4716 54.6113 35.0875 46.5627 262.7671 203.3789 Bm
-6525.0063 4916.9434 35.0875 46.5627 190.2954 257.9902 Bc
f
0 BB
144.2051 429.0278 m
139.1914 436.7549 132.6309 443.4658 124.9126 448.498 C
108.8306 458.9492 88.5073 462.6631 69.5684 459.9399 C
50.5249 457.21 32.5098 447.7573 19.5967 433.5742 C
10.1348 423.4976 3.74414 410.9697 0 397.6558 C
0 401.1323 L
3.73682 414.0513 10.0073 426.1899 19.2085 435.9902 C
32.0034 450.0444 49.855 459.4097 68.7241 462.1152 C
87.4917 464.8135 107.6294 461.1338 123.5649 450.7788 C
132.022 445.2651 139.0762 437.7222 144.2051 429.0278 C
Bb
1 (GradientFill 4) 131.1855 470.6616 -143 142.9471 1 0 0 1 0 0 Bg
-114.1626 -86.0277 -53.1458 70.5269 157.1152 436.2515 Xm
-6401.1953 -4823.6445 -53.1458 70.5269 6558.3105 5259.896 Bc
-114.1626 -86.0277 -53.1458 70.5269 157.1152 436.2515 Bm
-6401.1953 -4823.6445 -53.1458 70.5269 42.9526 350.2236 Bc
f
0 BB
210.502 354.0752 m
199.333 333.0088 178.4521 317.5518 155.1797 312.9316 C
131.9927 308.1738 106.6948 313.8496 88.561 329.354 C
72.9551 342.7437 64.8638 363.8438 66.7222 384.106 C
65.4912 364.5742 73.4834 344.4917 88.4961 331.6123 C
106.4648 316.2485 131.5322 310.6245 154.5083 315.3389 C
177.1641 319.8369 197.5322 334.6992 208.7354 355.0146 C
210.502 354.0752 L
Bb
1 (GradientFill 4) 188.9517 402.3647 -143 146.4161 1 0 0 1 0 0 Bg
-116.9331 -88.1154 -74.9953 99.5221 227.2495 351.5415 Xm
-6448.6641 -4859.415 -74.9953 99.5221 6675.9141 5210.9565 Bc
-116.9331 -88.1154 -74.9953 99.5221 227.2495 351.5415 Bm
-6448.6641 -4859.415 -74.9953 99.5221 110.3164 263.4258 Bc
f
0 BB
206.0098 342.8701 m
153.5601 249.5869 171.041 202.5752 205.4951 202.0186 C
196.9653 210.8945 210.1553 229.0273 203.7764 249.1436 c
195.856 274.124 195.5879 304.4028 206.0098 342.8701 C
Bb
1 (GradientFill 4) 222.3604 261.5352 152 68.3593 1 0 0 1 0 0 Bg
-60.3577 32.0927 67.74 127.4004 185.6704 192.5313 Xm
-7180.9341 3818.1704 67.74 127.4004 7366.6045 -3625.6387 Bc
-60.3577 32.0927 67.74 127.4004 185.6704 192.5313 Bm
-7180.9341 3818.1704 67.74 127.4004 125.3125 224.624 Bc
f
0 BB
*u
0 g
265.7217 0 m
252.1011 40.9658 256.2666 88.1406 277.0625 125.6992 C
298.9756 165.8809 338.9326 196.1572 384.4619 203.5879 C
430.0352 210.9434 478.3213 190.3721 504.792 152.9307 C
517.8984 134.541 526.7393 112.3252 526.6143 89.3457 C
526.4883 111.7549 517.7988 133.3867 505.0059 151.3379 C
478.7939 188.4121 430.9805 208.7813 385.8535 201.498 C
340.7695 194.1406 301.2041 164.1602 279.5059 124.373 C
258.917 87.1885 255.9282 40.542 269.5386 0 C
280.5947 0 L
279.7759 2.14941 279.0132 4.31836 278.3042 6.50391 C
276.0835 14.1133 279.0723 24.6553 285.9575 31.6475 C
280.4512 29.1191 277.0698 24.1826 275.8135 18.7822 C
274.5303 26.6641 277.8618 36.2041 282.7964 42.2168 C
288.3096 48.9336 288.9028 58.5215 278.3779 58.6768 C
304.0518 67.9268 266.6641 96.7236 304.0664 119.6553 C
310.6855 123.7129 307.9756 130.8994 300.4355 126.4307 C
302.1074 131.7881 322.2168 137.2588 328.7178 143.8857 C
336.5625 151.8838 329.9854 159.9941 317.8691 151.0322 C
326.9043 165.9043 352.2627 160.002 367.9023 165.0039 c
378.6035 168.4268 384.0645 179.2246 374.5234 185.7539 C
393.1914 172.4521 408.001 182.959 427.1094 183.4697 c
436.9727 183.7334 445.5859 180.4121 447.1387 173.293 C
447.2734 172.583 447.3564 171.8604 447.3857 171.1328 C
447.4316 168.6406 446.71 165.7637 445.0322 162.4932 C
445.0293 162.4883 L
444.7559 162.0605 444.4609 161.6455 444.1445 161.2451 C
442.7529 159.5166 440.9697 158.0205 439.0537 157.1807 C
435.1611 155.3848 430.1465 156.0068 426.6748 158.8594 C
425.8145 159.5625 425.0156 160.4033 424.3809 161.3086 C
423.7578 162.1885 423.2871 163.1748 423.001 164.2246 C
422.4092 166.3174 422.5781 168.6602 423.4854 170.708 C
424.3555 172.7275 426.083 174.5811 428.0352 175.4785 C
430.0225 176.4033 432.4619 176.4111 434.5313 175.46 C
435.7813 174.8818 436.9209 173.957 437.7139 172.8252 C
438.2217 172.1006 438.5869 171.292 438.749 170.4355 C
439.209 168.2217 438.3691 165.7354 436.541 164.2383 C
434.8145 162.7051 432.0361 162.5645 430.0957 163.9941 C
429.1416 164.709 428.3877 165.7119 428.1885 166.875 C
427.9668 168.0322 428.2568 169.3066 429.0068 170.2666 C
429.7471 171.2461 430.9043 171.8867 432.1494 171.7998 C
433.1836 171.748 434.2109 171.1885 434.8262 170.3271 C
434.9385 170.1699 435.0371 170.002 435.1201 169.8252 C
435.6543 168.6865 435.3271 167.1738 434.2852 166.3535 C
433.3008 165.4688 431.5557 165.6445 430.748 166.7939 C
431.5361 165.6523 433.1006 165.3643 434.2441 166.1504 C
435.6748 167.1348 436.0371 169.0928 435.0527 170.5234 C
433.8232 172.3125 431.375 172.7656 429.5859 171.5352 C
427.3506 169.9971 426.7842 166.9375 428.3223 164.7021 C
430.2441 161.9063 434.0684 161.1992 436.8643 163.1211 C
440.3584 165.5244 441.2422 170.3047 438.8398 173.7988 C
435.8359 178.166 429.8604 179.2715 425.4932 176.2676 C
420.0332 172.5137 418.6514 165.0439 422.4063 159.585 C
427.0996 152.7607 436.4365 151.0332 443.2607 155.7266 C
444.5771 156.6318 445.7412 157.6758 446.748 158.8252 C
446.748 158.8242 L
446.749 158.8262 L
451.8877 164.6914 452.9131 173.2998 449.0205 180.2822 C
447.375 183.3291 444.8076 186.0557 441.6592 188.7236 C
464.6846 181.2129 485.4902 166.6768 499.7725 146.8955 C
511.1982 131.1709 519.2158 112.5674 520.5195 93.1982 C
520.5898 91.8076 520.6279 90.4141 520.6279 89.0166 C
520.9658 67.4746 513.4883 45.8828 499.998 29 C
489.8057 16.2354 476.0977 5.89941 460.7959 0 C
461.6885 0 L
476.7412 5.85742 490.2217 16.0488 500.2588 28.6201 C
513.6162 45.3369 521.0205 66.7178 520.6875 88.0498 C
520.6865 89.6582 520.6357 91.2607 520.542 92.8604 C
520.6504 91.1426 520.708 89.4209 520.709 87.6943 C
521.041 66.4395 513.6641 45.1367 500.3545 28.4805 C
490.374 15.9805 476.9766 5.8418 462.0166 0 C
473.623 0 L
485.4609 6.16406 495.9883 14.8623 504.4453 25.1895 C
518.6777 42.6406 526.7402 65.1113 526.6133 87.7305 C
526.8135 110.5049 518.0703 132.5322 505.084 150.752 C
478.9678 187.6924 431.3271 207.9883 386.3643 200.7305 C
341.4443 193.4004 302.0225 163.5293 280.4023 123.8857 C
259.7437 86.5742 255.7197 40.5107 269.4946 0 C
265.7217 0 L
265.7217 0 L
f
0 g
406.6533 0 m
396.9844 0 L
392.5635 2.4248 388.377 5.27344 384.5117 8.51855 C
367.4561 22.8662 355.8066 44.9131 357.4766 67.6572 C
358.8896 90.2197 373.3965 111.2822 393.9473 120.4668 C
404.0898 125.2949 415.8857 126.5361 426.8213 124.0986 C
437.7695 121.5889 447.7393 115.3262 454.8164 106.6582 C
461.7012 97.9443 466.1123 86.8125 465.0527 75.5479 C
464.1953 64.3848 458.4209 53.7051 449.4893 46.999 C
440.7598 40.1465 428.6465 37.2129 417.9834 40.96 C
407.4082 44.4463 398.9072 53.792 396.9609 64.7842 C
395.0859 75.4658 400.9111 86.8457 410.5879 91.5449 C
412.3037 92.541 414.1904 93.2754 416.1934 93.6934 C
413.126 91.9629 410.4219 89.665 408.2207 86.9424 C
407.8184 87.5977 407.4932 88.3125 407.2656 89.1006 C
399.9287 83.623 395.9268 73.9326 397.6113 64.8936 C
399.6094 54.1982 408.0107 45.1592 418.291 41.8945 C
428.6719 38.377 440.2773 41.3174 448.6846 48.0381 C
457.2588 54.6064 462.7002 64.9619 463.415 75.6748 C
464.3281 86.4619 459.9932 97.0791 453.2871 105.415 C
446.4092 113.6719 436.7959 119.5645 426.3213 121.8564 C
415.8418 124.0674 404.7012 122.793 395.0547 118.0869 C
375.4453 109.0869 361.873 88.8389 360.749 67.4414 C
359.3486 45.9678 370.6689 25.0322 387.0146 11.5537 C
392.918 6.69922 399.5762 2.81543 406.6533 0 C
406.6533 0 L
f
0 g
396.5771 0 m
395.4697 0 L
390.8994 2.48633 386.5732 5.41797 382.584 8.76758 C
365.2969 23.3105 353.4893 45.6553 355.1816 68.708 C
356.6143 91.5762 371.3184 112.9248 392.1475 122.2344 C
402.4277 127.1289 414.3838 128.3867 425.4678 125.916 C
436.5645 123.3711 446.6699 117.0244 453.8428 108.2393 C
455.29 106.4063 456.6289 104.4678 457.834 102.4453 C
456.8203 104.0527 455.7236 105.6035 454.5547 107.083 C
447.4521 115.7822 437.4463 122.0674 426.458 124.5869 C
415.4824 127.0332 403.6436 125.7871 393.4639 120.9414 C
372.8379 111.7227 358.2783 90.584 356.8604 67.9385 C
355.1846 45.1133 366.877 22.9863 383.9951 8.58496 C
387.8936 5.3125 392.1172 2.44141 396.5771 0 C
396.5771 0 L
f
0 g
453.5615 182.4336 m
469.0439 174.9961 501.375 152.5996 494.9688 118.915 C
497.4502 133.709 491.3008 147.6611 476.5771 158.627 c
462.6113 169.0283 459.3027 178.3359 453.5615 182.4336 C
453.5615 182.4336 L
f
0 g
276.5493 23.7041 m
277.9458 37.71 284.8809 41.0322 291.2222 42.2256 C
292.251 32.6143 279.9648 33.2148 276.5493 23.7041 C
276.5493 23.7041 L
f
450.2334 184.5557 m
473.2217 174.2852 510.2168 149.25 494.8936 111.5039 C
494.8984 120.3955 474.8525 119.9746 466.9053 132.2168 C
452.9463 153.7197 464.0732 173.3125 450.2334 184.5557 C
Bb
1 (GradientFill 4) 533.6533 190.0488 -143 331.2574 1 0 0 1 0 0 Bg
-264.554 -199.3556 -146.7936 194.8018 605.7832 94.3291 Xm
-6698.8623 -5047.9526 -146.7936 194.8018 7304.6455 5142.2817 Bc
-264.554 -199.3556 -146.7936 194.8018 605.7832 94.3291 Bm
-6698.8623 -5047.9526 -146.7936 194.8018 341.2295 -105.0264 Bc
f
0 BB
*U
305.9482 120.3145 m
290.2466 119.1387 278.4717 105.457 279.6475 89.7559 C
286.2769 90.2529 L
286.2466 90.4961 286.2207 90.7402 286.1992 90.9854 C
285.6577 97.1367 287.8564 103.5469 292.2959 108.1885 C
294.583 110.5996 297.4214 112.5088 300.5596 113.7402 C
303.7109 114.9463 307.2002 115.5469 310.3613 115.1836 C
316.8516 114.5615 322.9648 109.9033 325.3418 103.4971 C
325.9336 101.915 326.3398 100.1973 326.4805 98.5215 C
326.625 96.8887 326.4883 95.2314 326.0615 93.6328 C
325.2354 90.4307 323.2188 87.4814 320.458 85.4844 C
317.7686 83.498 314.0791 82.3857 310.8271 82.7012 C
307.5078 83.0068 304.2959 84.8652 302.3066 87.7012 C
301.1055 89.417 300.3164 91.5059 300.1406 93.5996 C
300.0283 94.9404 300.168 96.2832 300.6113 97.5322 C
301.7012 100.7939 304.709 103.417 308.2578 103.9844 C
311.7021 104.6768 315.46 102.7334 316.9141 99.3691 C
317.6211 97.6992 317.8438 95.8047 317.2139 94.124 C
316.6191 92.4326 315.2627 90.9805 313.541 90.293 C
311.8184 89.5732 309.8076 89.6182 308.2373 90.6855 C
306.9189 91.5449 305.998 93.0674 305.8486 94.6699 C
305.8213 94.9639 305.8193 95.2598 305.8467 95.5547 C
306.0166 97.4609 307.6055 99.1982 309.6035 99.4775 C
311.5742 99.8857 313.7324 98.3184 313.9131 96.1904 C
313.752 98.2949 311.917 99.8711 309.8125 99.7129 C
307.1777 99.5156 305.2021 97.2207 305.4004 94.5859 C
305.6465 91.293 308.5156 88.8242 311.8086 89.0703 C
315.9248 89.3789 319.0117 92.9648 318.7031 97.0811 C
318.3174 102.2266 313.834 106.085 308.6895 105.6992 C
302.2578 105.2178 297.4351 99.6143 297.917 93.1826 C
298.5186 85.1436 305.5234 79.1143 313.5625 79.7168 C
323.6113 80.4697 331.1475 89.2256 330.3955 99.2744 C
329.4541 111.8359 318.5088 121.2559 305.9482 120.3145 C
Bb
1 (GradientFill 4) 301.9033 120.0195 -83 40.4492 1 0 0 1 0 0 Bg
4.92952 -40.1477 -55.7079 -6.84007 330.04 123.4746 Xm
999.3223 -8138.8281 -55.7079 -6.84007 -669.2822 8262.3027 Bc
4.92952 -40.1477 -55.7079 -6.84007 330.04 123.4746 Bm
999.3223 -8138.8281 -55.7079 -6.84007 334.9697 83.3271 Bc
f
0 BB
214.1167 358.6216 m
209.4082 341.8833 204.4253 325.3574 201.644 308.4966 C
198.9302 291.8096 198.1909 274.1787 204.8887 258.9131 C
211.3159 243.6641 226.7124 232.8789 243.376 231.8164 C
259.7681 230.5781 277.7012 238.5068 284.8462 253.8838 C
288.4727 261.377 289.4951 270.1318 287.6289 278.3066 C
285.7534 286.4463 281.2183 294.1904 274.0942 298.7261 C
267.1025 303.3672 258.0713 304.8491 249.8989 302.6396 C
248.915 302.3945 247.9434 302.0938 246.9941 301.7393 C
240.0083 299.1323 234.0835 293.6416 231.7793 286.4131 C
229.0166 278.4082 230.7803 268.7598 236.7729 262.5713 C
242.5425 256.4609 252.4551 254.9648 259.9229 258.9658 C
259.9219 258.9648 259.9199 258.9639 259.9185 258.9629 C
250.5898 253.9424 238.8828 257.1611 233.4688 266.3721 C
226.5415 278.1563 230.479 293.3281 242.2651 300.2568 C
243.729 301.1187 245.2344 301.8442 246.7671 302.4395 C
260.665 307.8418 276.8228 302.5293 284.6216 289.2607 C
295.4473 270.8457 289.2944 247.1406 270.8789 236.3154 C
247.8584 222.7852 217.9941 230.3398 204.6968 253.4951 C
187.5435 283.3604 202.0405 327.6636 211.2065 362.0522 C
216.519 370.2871 219.8013 381.6143 219.8013 394.1172 c
219.8013 399.4551 219.2007 404.5767 218.1016 409.3374 C
220.3394 405.7705 221.1147 401.6812 221.314 398.1753 C
221.564 393.4932 221.0781 389.0791 220.3867 384.7866 C
220.3618 384.6294 220.3369 384.4722 220.3105 384.3159 C
218.7969 375.4482 216.4448 367.0142 214.1167 358.6216 C
Bb
1 (GradientFill 4) 295.2495 282.7227 152 126.1718 1 0 0 1 0 0 Bg
-111.4031 59.2341 76.0994 143.1222 255.5693 208.0957 Xm
-7243.875 3851.637 76.0994 143.1222 7499.4443 -3643.541 Bc
-111.4031 59.2341 76.0994 143.1222 255.5693 208.0957 Bm
-7243.875 3851.637 76.0994 143.1222 144.166 267.3301 Bc
f
0 BB
*u
0 g
169.7466 141.0273 m
133.7075 171.1621 97.3784 200.4082 65.4517 233.7598 C
36.9805 263.6289 10.9292 297.6797 0 336.6104 C
0 313.9585 L
42.7725 210.3438 186.7827 128.9307 231.4482 66.1572 C
188.0083 127.209 49.0337 204.4541 0 303.2969 C
0 296.4336 L
51.1309 198.8193 184.8472 121.29 227.9102 60.7686 C
233.813 52.4727 238.0107 44.4971 240.0591 36.832 C
240.3418 36.708 243.1396 36.9805 244.4878 37.0156 C
244.6133 36.0078 244.6982 35.0059 244.7397 34.0107 C
248.3267 31.1611 250.9058 27.21 251.8955 22.707 C
252.3711 22.5889 L
252.3018 22.1699 252.2266 21.75 252.145 21.3301 C
252.2739 20.4336 252.3428 19.5166 252.3428 18.5859 C
252.3408 18.4453 L
252.5693 19.7979 252.7329 21.1406 252.8379 22.4717 C
254.9014 21.958 L
258.6348 38.0459 252.7471 52.8994 246.1514 63.8135 C
239.5659 74.6387 231.7476 83.7393 223.6553 92.2549 C
223.3604 92.5674 223.0635 92.8779 222.7676 93.1875 C
205.8579 110.6514 187.7466 125.8691 169.7466 141.0273 C
169.7466 141.0273 L
f
0 g
0 407.1968 m
0 425.3784 L
19.4761 466.9258 60.647 496.9727 109.6772 500.3477 C
125.6924 501.4507 141.1099 498.8799 155.1128 493.3613 C
139.9849 500.0391 123.0591 503.2451 105.4155 502.0303 C
59.9639 498.9009 21.208 473.0381 0 436.3306 C
0 441.0259 L
21.915 475.7876 59.772 500.0093 103.8735 503.0454 C
125.0576 504.5034 145.2188 499.6567 162.5229 490.1084 C
162.5259 490.1069 L
195.0576 474.2676 218.4521 441.9531 221.1162 403.2671 C
223.9712 361.7793 196.0508 325.2813 156.8213 316.1216 C
152.4937 315.1099 148.0273 314.4326 143.4507 314.1177 C
106.5991 311.5806 74.6689 339.3979 72.1309 376.2495 C
70.1479 405.0474 91.3364 430.0889 119.7988 433.1255 C
119.8052 433.1274 119.8125 433.1279 119.8184 433.1274 C
97.0591 430.6533 77.2373 412.1934 73.6963 389.7646 C
69.7798 366.8193 80.5698 342.6187 98.9468 328.98 C
115.1104 316.3809 136.7046 313.1841 156.252 318.0278 C
158.9155 318.6875 161.541 319.4976 164.1104 320.4521 C
185.7012 327.9971 203.5762 345.083 212.0845 366.0991 C
221.0483 387.0845 219.3408 411.2715 211.0996 432.2832 C
202.7915 453.3589 187.1553 471.3184 167.6318 482.4912 C
128.2383 505.8745 76.1543 496.1895 41.4902 468.4126 C
21.5747 452.8325 7.2085 431.0483 0 407.1968 C
0 407.1968 L
f
1 D
231.4482 66.1572 m
231.6304 65.9014 231.8105 65.6455 231.9907 65.3887 C
231.8115 65.6445 231.6309 65.9004 231.4482 66.1572 C
Bb
1 (GradientFill 4) 44.4722 499.8662 -65 503.8314 1 0 0 1 0 0 Bg
212.9283 -456.6263 -238.7977 -111.3532 167.0088 557.0059 Xm
3353.7441 -7192.1284 -238.7977 -111.3532 -3186.7354 7749.1343 Bc
212.9283 -456.6263 -238.7977 -111.3532 167.0088 557.0059 Bm
3353.7441 -7192.1284 -238.7977 -111.3532 379.9375 100.3799 Bc
f
0 BB
*U
0 D
142.8804 335.4902 m
151.9419 320.8491 175.8911 330.7129 172.5229 298.0977 C
182.6221 322.4644 205.5073 307.2769 224.4834 308.9072 C
210.2729 298.3789 214.8779 267.6318 193.3638 269.0645 C
208.6436 265.2842 206.3882 242.6816 220.0825 229.1699 C
205.7744 236.3271 177.1128 218.4697 169.9058 240.3105 C
171.1792 218.2021 148.1484 219.3174 133.0967 205.0479 C
136.0708 227.9697 117.1226 238.9717 132.5391 252.082 C
113.915 242.5439 102.2891 268.2832 86.5088 270.5 C
104.9873 275.9873 113.7007 303.2725 134.4688 289.9893 C
116.0815 308.7222 142.6558 325.623 142.8804 335.4902 C
Bb
1 (GradientFill 4) 227.3979 305.7261 -153 160.3251 1 0 0 1 0 0 Bg
-142.8507 -72.786 -60.7353 119.1999 257.7656 246.126 Xm
-7238.3105 -3688.1023 -60.7353 119.1999 7496.0762 3934.228 Bc
-142.8507 -72.786 -60.7353 119.1999 257.7656 246.126 Bm
-7238.3105 -3688.1023 -60.7353 119.1999 114.915 173.3398 Bc
f
0 BB
143.9297 331.7949 m
152.4272 318.0659 173.2134 330.9766 171.2822 293.5352 C
183.2095 319.7842 203.1348 306.1963 220.9292 307.7251 C
207.6035 297.8525 213.3589 268.71 188.1377 270.0615 C
207.6753 264.0332 202.8154 244.5771 215.6567 231.9063 C
202.2393 238.6182 178.9966 218.5918 168.0381 246.8887 C
170.6733 219.1797 149.5127 222.498 135.3984 209.1172 C
138.187 230.6123 117.4639 239.2822 138.7598 256.041 C
113.124 243.5156 105.8667 268.7734 91.0688 270.8525 C
108.3965 275.998 118.3467 302.6157 140.7646 284.8701 C
117.7925 306.7544 143.7192 322.542 143.9297 331.7949 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 155.999 270.4561 0 73.2438 1 0 0 1 0 0 Bg
73.2438 0 0 -73.2438 155.999 270.4561 Bm
f
0 BB
*u
0 g
160.2837 317.1792 m
172.6294 306.5859 166.8477 288.9092 159.8477 276.3506 C
165.2251 289.708 170.5635 305.2891 160.2837 317.1792 C
160.2837 317.1792 L
f
1 D
0 g
145.7632 324.5356 m
147.1924 311.6665 154.3906 288.4961 158.7769 276.9473 C
165.3896 289.6719 163.8105 312.2715 152.0718 322.2827 C
161.2085 310.665 163.1201 289.9424 158.7769 276.9473 C
157.6929 288.3496 149.562 313.1611 145.7632 324.5356 C
145.7632 324.5356 L
f
0 D
0 g
141.7017 319.5801 m
140.1455 305.8804 148.9658 285 158.666 276.9131 C
147.1797 283.6719 137.229 305.6885 141.7017 319.5801 C
141.7017 319.5801 L
f
136.6289 310.4624 m
134.1509 295.0645 146.6904 284.377 158.2188 275.8877 C
145.7222 282.8613 131.73 295.0811 136.6289 310.4624 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 151.2471 300.2119 -15 29.2514 1 0 0 1 0 0 Bg
28.2547 -7.57081 -7.57081 -28.2547 151.2471 300.2119 Bm
f
0 BB
*U
*u
0 g
204.7061 283.3086 m
197.6895 268.6318 180.5376 270.6865 166.5898 274.1787 C
180.8862 272.4609 195.8999 270.2891 204.7061 283.3086 C
204.7061 283.3086 L
f
1 D
0 g
208.0313 299.2432 m
195.978 294.5156 176.8975 282.6074 166.8877 275.3682 C
180.8945 272.293 200.8853 278.627 207.4976 292.5654 C
198.6572 280.7217 180.5654 274.5547 166.8877 275.3682 C
177.6157 279.3809 198.0371 292.6162 208.0313 299.2432 C
208.0313 299.2432 L
f
0 g
202.1904 301.876 m
187.6133 302.5806 170.3638 288.3145 166.8262 275.4658 C
172.1104 286.9355 188.5571 299.814 202.1904 301.876 C
202.1904 301.876 L
f
192.0664 304.4019 m
175.9404 305.1299 169.2012 289.5107 165.7192 275.6309 C
170.917 288.9707 176.5547 302.7886 192.0664 304.4019 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 186.0288 287.3867 59 27.8273 1 0 0 1 0 0 Bg
14.3321 23.8527 23.8527 -14.3321 186.0288 287.3867 Bm
f
0 BB
*U
*u
0 D
0 g
115.9434 282.7979 m
129.3218 292.0537 144.606 282.6025 154.979 272.6455 C
143.4224 281.2354 130.0522 289.7266 115.9434 282.7979 C
115.9434 282.7979 L
f
1 D
0 g
105.145 270.6182 m
117.9551 268.7363 141.8462 270.4482 154.1299 271.7617 C
143.4985 281.3857 121.585 284.9648 108.9243 276.1494 C
122.479 282.04 142.6611 279.2588 154.1299 271.7617 C
142.8252 273.6055 117.1108 271.4072 105.145 270.6182 C
105.145 270.6182 L
f
0 D
0 g
108.9082 265.4326 m
121.7651 260.4521 143.8525 264.3145 154.1348 271.6455 C
144.6836 262.249 121.2109 257.583 108.9082 265.4326 C
108.9082 265.4326 L
f
116.4409 258.2129 m
130.7065 251.9111 143.8774 261.9551 155.0132 270.9531 C
145.0986 260.6338 130.0771 249.5732 116.4409 258.2129 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 130.0791 270.8418 -91 29.4834 1 0 0 1 0 0 Bg
-0.514558 -29.4789 -29.4789 0.514558 130.0791 270.8418 Bm
f
0 BB
*U
*u
0 g
133.8672 233.7686 m
129.9453 249.5557 143.3311 260.0811 156.3149 266.2588 C
144.1909 258.4902 132.3804 249.416 133.8672 233.7686 C
133.8672 233.7686 L
f
1 D
0 g
141.437 219.3574 m
147.7305 230.6729 153.7227 253.1982 156.8413 265.1514 C
144.0776 258.6143 133.8369 239.8115 137.6016 224.8496 C
136.8887 239.6123 145.771 257.0781 156.8413 265.1514 C
151.1162 255.2314 144.9336 230.8291 141.437 219.3574 C
141.437 219.3574 L
f
0 g
147.6191 221.042 m
159.3145 229.7715 162.395 252.9502 156.9517 265.1152 C
160.1699 252.9033 156.8267 231.3047 147.6191 221.042 C
147.6191 221.042 L
f
0 D
157.0371 225.5322 m
167.9805 236.6445 162.3848 252.0928 157.9102 265.6924 C
164.0527 252.7666 169.9434 235.2285 157.0371 225.5322 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 151.1641 242.8086 -160 29.5566 1 0 0 1 0 0 Bg
-27.7741 -10.1089 -10.1089 27.7741 151.1641 242.8086 Bm
f
0 BB
*U
*u
0 g
186.5308 233.4971 m
170.3545 235.2188 164.8735 252.4258 163.5146 266.7393 C
166.6626 252.6885 171.3203 237.458 186.5308 233.4971 C
186.5308 233.4971 L
f
1 D
0 g
202.6621 235.6748 m
194.186 245.4629 174.8984 259.832 164.7358 266.8555 C
166.5073 252.624 180.8428 235.5381 196.1885 233.9521 C
182.0747 238.3369 168.5298 253.6895 164.7358 266.8555 C
172.0957 258.0791 193.082 242.8877 202.6621 235.6748 C
202.6621 235.6748 L
f
0 g
203.1963 242.0596 m
199.0005 256.0371 178.1011 267.8945 164.8076 266.9463 C
177.3828 265.7881 196.707 254.2246 203.1963 242.0596 C
203.1963 242.0596 L
f
202.2026 252.4463 m
197.5122 267.8926 178.8413 269.3896 164.5938 268.0439 C
178.9038 267.5918 195.5098 266.5322 202.2026 252.4463 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 184.1489 251.6611 129 27.4898 1 0 0 1 0 0 Bg
-17.2999 21.3636 21.3636 17.2999 184.1489 251.6611 Bm
f
0 BB
*U
0 D
0.78 0.81 0.81 0.64 k
151.0518 276.0029 m
151.8325 276.2246 152.6221 276.2559 153.3711 276.124 C
153.353 276.1855 L
152.5679 278.9512 154.1733 281.8311 156.9385 282.6152 c
159.7041 283.4004 162.5835 281.7949 163.3691 279.0293 c
163.3789 278.9932 163.3887 278.957 163.3979 278.9209 C
164.0459 279.7012 164.9287 280.3008 165.978 280.5986 c
168.7432 281.3838 171.6226 279.7783 172.4077 277.0127 c
173.1929 274.248 171.5869 271.3682 168.8218 270.583 c
168.6636 270.5381 168.5049 270.502 168.3457 270.4727 C
169.3652 269.8105 170.1582 268.79 170.5166 267.5303 c
171.3018 264.7646 169.6958 261.8857 166.9302 261.0996 c
164.8672 260.5137 162.7402 261.2598 161.4673 262.8242 C
160.8491 261.5068 159.6855 260.4551 158.1768 260.0264 c
155.4111 259.2412 152.5317 260.8467 151.7466 263.6123 c
151.5317 264.3682 151.4966 265.1328 151.6143 265.8604 C
149.6934 266.1836 148.0332 267.5752 147.4658 269.5732 c
146.6807 272.3379 148.2866 275.2178 151.0518 276.0029 c
f
158.9937 276.1836 m
161.7148 276.9561 164.5479 275.376 165.3203 272.6553 c
166.0933 269.9336 164.5132 267.1006 161.792 266.3281 c
159.0708 265.5557 156.2373 267.1357 155.4648 269.8564 c
154.6924 272.5781 156.2725 275.4111 158.9937 276.1836 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 160.3926 271.2559 0 6.3746 1 0 0 1 0 0 Bg
6.3746 0 0 -6.3746 160.3926 271.2559 Bm
f
0 BB
152.5444 275.2793 m
154.8711 275.9404 157.2939 274.5889 157.9546 272.2617 c
158.6152 269.9355 157.2637 267.5127 154.937 266.8516 c
152.6104 266.1914 150.1875 267.542 149.5273 269.8691 c
148.8667 272.1963 150.2178 274.6191 152.5444 275.2793 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 153.7412 271.0664 0 5.45131 1 0 0 1 0 0 Bg
5.45131 0 0 -5.45131 153.7412 271.0664 Bm
f
0 BB
156.146 270.2637 m
158.4727 270.9248 160.8955 269.5732 161.5566 267.2471 c
162.2173 264.9199 160.8657 262.4971 158.5391 261.8369 c
156.2124 261.1758 153.7896 262.5273 153.1289 264.8535 c
152.4683 267.1807 153.8193 269.6035 156.146 270.2637 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 157.3428 266.0508 0 5.45131 1 0 0 1 0 0 Bg
5.45131 0 0 -5.45131 157.3428 266.0508 Bm
f
0 BB
165.103 279.1465 m
167.4297 279.8066 169.8525 278.4561 170.5132 276.1289 c
171.1738 273.8027 169.8228 271.3799 167.4961 270.7188 c
165.1689 270.0586 162.7466 271.4092 162.0859 273.7363 c
161.4253 276.0625 162.7764 278.4854 165.103 279.1465 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 166.2998 274.9326 0 5.4507 1 0 0 1 0 0 Bg
5.4507 0 0 -5.4507 166.2998 274.9326 Bm
f
0 BB
157.4976 280.8428 m
159.8242 281.5039 162.2471 280.1523 162.9077 277.8262 c
163.5684 275.499 162.2173 273.0762 159.8906 272.416 c
157.564 271.7549 155.1411 273.1064 154.4805 275.4336 c
153.8198 277.7598 155.1709 280.1826 157.4976 280.8428 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 158.6943 276.6289 0 5.45009 1 0 0 1 0 0 Bg
5.45009 0 0 -5.45009 158.6943 276.6289 Bm
f
0 BB
163.5117 271.167 m
165.8384 271.8281 168.2612 270.4766 168.9214 268.1504 c
169.5825 265.8232 168.231 263.4004 165.9043 262.7402 c
163.5776 262.0791 161.1548 263.4307 160.4946 265.7568 c
159.834 268.084 161.1851 270.5068 163.5117 271.167 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 164.708 266.9531 0 5.45009 1 0 0 1 0 0 Bg
5.45009 0 0 -5.45009 164.708 266.9531 Bm
f
0 BB
159.2065 275.4961 m
161.5332 276.1572 163.9561 274.8057 164.6167 272.4785 c
165.2773 270.1523 163.9263 267.7295 161.5996 267.0693 c
159.2729 266.4082 156.8501 267.7598 156.1895 270.0859 c
155.5283 272.4131 156.8799 274.8359 159.2065 275.4961 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 160.4028 271.2832 0 5.45131 1 0 0 1 0 0 Bg
5.45131 0 0 -5.45131 160.4028 271.2832 Bm
f
0 BB
94.2935 332.8027 m
87.7173 338.4932 82.458 345.6875 79.1641 353.7324 C
73.2139 368.3052 73.1724 385.9146 81.688 399.5845 C
89.9829 413.2256 105.9707 421.6279 121.835 420.6191 C
129.7617 420.3062 137.5444 417.2075 143.5801 412.0908 C
147.2134 408.9727 150.1724 405.1143 152.2964 400.8452 C
150.3188 404.2319 147.7915 407.2988 144.8037 409.8623 C
141.103 412.9995 136.7373 415.3677 132.0874 416.7939 C
128.7739 417.98 125.2822 418.6616 121.7456 418.7671 C
106.5308 419.583 91.394 411.3833 83.6626 398.3745 C
82.0444 395.7285 80.7632 392.9209 79.8008 390.0127 C
75.23 377.8906 76.1123 363.9414 80.9741 352.0347 C
83.9526 344.7583 88.5566 338.1821 94.2935 332.8027 C
Bb
1 (GradientFill 4) 150.2778 415.0195 -143 104.6037 1 0 0 1 0 0 Bg
-83.5402 -62.9521 -42.6222 56.5615 170.7212 387.8901 Xm
-6422.4141 -4839.6343 -42.6222 56.5615 6593.1348 5227.5244 Bc
-83.5402 -62.9521 -42.6222 56.5615 170.7212 387.8901 Bm
-6422.4141 -4839.6343 -42.6222 56.5615 87.1812 324.938 Bc
f
0 BB
225.1245 313.1958 m
229.4761 318.4736 234.8838 322.8706 241.0039 325.9316 C
253.7529 332.2842 269.0615 333.3076 282.8057 329.6987 C
296.626 326.0757 309.1201 317.5796 317.4492 306.0239 C
325.9873 294.5547 329.7285 280.0801 329.8975 265.8252 C
329.96 261.6152 329.6445 257.4209 328.9922 253.2842 C
329.9033 258.1016 330.3486 263.0107 330.2744 267.9404 C
330.1074 282.0664 326.3994 296.4092 317.9395 307.7734 C
309.6865 319.2241 297.3062 327.6426 283.6118 331.2324 C
269.9927 334.8086 254.8232 333.7949 242.1909 327.5005 C
235.4854 324.147 229.6431 319.1772 225.1245 313.1958 C
Bb
1 (GradientFill 4) 333.0771 265.791 143 121.5442 1 0 0 1 0 0 Bg
-97.0695 73.1471 35.9314 47.6826 315.5596 242.5439 Xm
-6576.6372 4955.8496 35.9314 47.6826 6892.1973 -4713.3057 Bc
-97.0695 73.1471 35.9314 47.6826 315.5596 242.5439 Bm
-6576.6372 4955.8496 35.9314 47.6826 218.4902 315.6909 Bc
f
0 BB
262.207 0 m
248.3501 41.6826 252.6157 88.9082 273.8267 127.2178 C
296.2002 168.2432 336.9961 199.1553 383.4824 206.7412 C
390.2725 207.8379 397.1201 208.3213 403.9512 208.2373 C
398.5313 208.1143 393.1094 207.6328 387.7246 206.7637 C
341.2334 199.1768 300.4336 168.2607 278.0576 127.2314 C
256.8438 88.917 252.582 41.6875 266.4409 0 C
262.207 0 L
Bb
1 (GradientFill 4) 407.9121 176.3398 -143 212.8564 1 0 0 1 0 0 Bg
-169.9947 -128.1001 -72.5737 96.3085 442.6318 130.2656 Xm
-6645.8022 -5007.9692 -72.5737 96.3085 7088.4346 5138.2349 Bc
-169.9947 -128.1001 -72.5737 96.3085 442.6318 130.2656 Bm
-6645.8022 -5007.9692 -72.5737 96.3085 272.6372 2.16504 Bc
f
0 BB
241.3423 76.4287 m
223.3936 115.1084 267.4785 156.2783 264.1084 188.1045 C
273.2114 141.9707 250.6021 138.3496 241.3423 76.4287 C
Bb
1 (GradientFill 4) 245.8936 187.8193 -84 111.7009 1 0 0 1 0 0 Bg
11.6759 -111.089 -56.0441 -5.89047 270.1357 190.3672 Xm
851.0467 -8097.1714 -56.0441 -5.89047 -580.9111 8287.5391 Bc
11.6759 -111.089 -56.0441 -5.89047 270.1357 190.3672 Bm
851.0467 -8097.1714 -56.0441 -5.89047 281.8115 79.2783 Bc
f
0 BB
*u
0 g
180.6592 95.6611 m
226.8066 82.5391 259.0229 44.3076 266.7017 0 C
239.9736 0 L
237.8726 11.7969 233.543 23.2979 227.0117 33.6953 C
219.5703 45.6504 209.4111 55.9932 197.4341 63.7803 C
185.374 71.4678 171.3999 76.9307 157.9678 78.1152 C
130.4941 81.0586 101.1519 66.9219 85.8296 42.3496 C
82.0234 36.2871 78.8779 29.5039 76.8643 22.666 C
74.873 16.0098 74.0317 9.01367 74.4453 2.01563 C
74.479 1.34375 74.5249 0.671875 74.5825 0 C
58.7026 0 L
57.7129 9.51074 58.479 19.3652 61.2539 29.125 C
75.8535 80.4707 129.313 110.2607 180.6592 95.6611 C
180.6592 95.6611 L
f
1 D
0 g
182.833 0 m
191.7153 0 L
188.0156 17.3496 175.0874 32.1299 156.8354 37.3193 C
135.8042 43.2988 113.9072 31.0977 107.9272 10.0664 C
106.9712 6.70215 106.5981 3.31152 106.7446 0 C
111.3032 0 L
111.2329 6.36719 113.6157 12.6855 117.3018 18.043 C
126.2031 30.7686 143.4575 35.6406 157.166 29.8311 C
170.272 24.8877 179.9951 13.1123 182.833 0 C
182.833 0 L
f
159.2832 0 m
160.874 0 L
158.8931 6.28613 153.8911 11.4854 147.0776 13.4229 C
138.4746 15.8682 129.5186 10.8877 127.0547 2.29395 C
129.6206 10.9727 139.9121 15.6406 147.7456 12.2656 C
153.3877 10.2617 157.5874 5.46387 159.2832 0 C
Bb
1 (GradientFill 4) 68.563 89.5498 -36 198.8668 1 0 0 1 0 0 Bg
160.8866 -116.891 -99.6793 -137.1968 121.0767 161.8281 Xm
6435.5908 -4675.7305 -99.6793 -137.1968 -6314.5142 4837.5586 Bc
160.8866 -116.891 -99.6793 -137.1968 121.0767 161.8281 Bm
6435.5908 -4675.7305 -99.6793 -137.1968 281.9634 44.9375 Bc
f
0 BB
*U
0 D
80.6177 0.818359 m
79.9185 9.2627 80.9175 17.8389 83.7031 25.8447 C
89.5273 42.5 102.2285 56.6387 117.5449 65.3135 C
132.9409 74.042 151.3716 77.2998 168.75 74.2432 C
186.2393 71.4434 202.0684 61.832 214.5381 49.3262 C
218.2324 45.6445 221.5771 41.6504 224.5737 37.4141 C
221.2183 42.4766 217.3706 47.2188 213.0444 51.5303 C
200.6885 63.9219 185.0029 73.4453 167.6733 76.2197 C
150.4531 79.249 132.1904 76.0205 116.9351 67.3721 C
101.7583 58.7754 89.1719 44.7656 83.4009 28.2627 C
80.3481 19.4912 79.4585 10.0313 80.6177 0.818359 C
Bb
1 (GradientFill 4) 132.8955 87.8193 -74 104.4377 1 0 0 1 0 0 Bg
28.7869 -100.392 -146.5603 -42.0255 206.1758 108.832 Xm
2210.4036 -7708.5957 -146.5603 -42.0255 -2004.2275 7817.4277 Bc
28.7869 -100.392 -146.5603 -42.0255 206.1758 108.832 Bm
2210.4036 -7708.5957 -146.5603 -42.0255 234.9629 8.44043 Bc
f
0 BB
354.3496 204.7744 m
369.9883 210.3291 382.749 223.1396 388.291 238.6963 C
393.918 254.1797 392.5752 272.1748 383.7383 286.2334 C
376.1016 298.3369 362.3926 306.0483 348.252 306.8232 C
361.8262 305.6904 374.8438 298.1504 382.1895 286.5068 C
390.9463 272.5762 392.2773 254.7451 386.7012 239.4023 C
381.3066 224.2578 369.0068 211.7402 353.8818 206.0859 C
354.3496 204.7744 L
Bb
1 (GradientFill 4) 401.7451 223.6172 -216 89.2675 1 0 0 1 0 0 Bg
-72.2189 52.4701 54.3579 74.8172 375.2344 187.1289 Xm
-6702.0234 4869.3062 54.3579 74.8172 7077.2578 -4682.1777 Bc
-72.2189 52.4701 54.3579 74.8172 375.2344 187.1289 Bm
-6702.0234 4869.3062 54.3579 74.8172 303.0156 239.5986 Bc
f
0 BB
327.8096 185.0078 m
391.1934 224.1279 396.3975 258.6475 375.6055 270.6006 C
377.8066 262.3203 363.6631 255.7266 360.7656 241.3262 c
357.167 223.4453 347.123 204.917 327.8096 185.0078 C
Bb
1 (GradientFill 4) 378.4619 252.627 -119 64.069 1 0 0 1 0 0 Bg
-31.0613 -56.036 -37.9566 21.0397 402.0342 239.5605 Xm
-4019.217 -7250.8564 -37.9566 21.0397 4421.251 7490.417 Bc
-31.0613 -56.036 -37.9566 21.0397 402.0342 239.5605 Bm
-4019.217 -7250.8564 -37.9566 21.0397 370.9727 183.5244 Bc
f
0 BB
390.4736 169.7363 m
384.4531 180.0986 367.5996 173.7002 370.5752 196.3262 C
363.0762 179.5693 347.4492 190.5791 334.2148 189.8125 C
344.3057 196.8623 341.6973 218.3438 356.6377 216.9307 C
346.0801 219.8564 348.0879 235.5381 338.8223 245.2041 C
348.6387 239.9463 368.9248 251.8154 373.5156 236.4805 C
373.0586 251.8867 389.0596 250.6641 399.8086 260.3008 C
397.2949 244.4102 410.2646 236.3887 399.2852 227.5654 C
412.4277 233.8418 420.0166 215.708 430.9531 213.8604 C
417.9902 210.4004 411.3994 191.5859 397.208 201.2305 C
409.6367 187.8408 390.8213 176.5977 390.4736 169.7363 C
Bb
1 (GradientFill 4) 433.5205 241.0615 206 114.4082 1 0 0 1 0 0 Bg
-102.8294 -50.1533 -41.414 84.9113 454.2275 198.6055 Xm
-7475.0796 -3645.8413 -41.414 84.9113 7929.3066 3844.4468 Bc
-102.8294 -50.1533 -41.414 84.9113 454.2275 198.6055 Bm
-7475.0796 -3645.8413 -41.414 84.9113 351.3984 148.4521 Bc
f
0 BB
389.8154 172.3281 m
384.1689 182.0449 369.457 173.4648 371.5264 199.4766 C
362.7197 181.4453 349.1201 191.2852 336.7109 190.5664 C
346.1729 197.1768 342.7334 217.5635 360.2549 216.1348 C
346.7783 220.708 350.5371 234.1504 341.8477 243.2139 C
351.0527 238.2842 367.6123 251.7666 374.6875 231.8672 C
373.3916 251.1963 388.0498 248.4775 398.1289 257.5137 C
395.7715 242.6133 410.0215 236.1797 394.8799 224.9326 C
412.959 233.1504 417.5186 215.4365 427.7734 213.7031 C
415.6182 210.459 408.1797 192.1328 392.9268 204.9141 C
408.4854 189.2432 390.1406 178.7617 389.8154 172.3281 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 382.2422 214.9209 0 51.1251 1 0 0 1 0 0 Bg
51.1251 0 0 -51.1251 382.2422 214.9209 Bm
f
0 BB
*u
0 g
378.7207 182.8135 m
370.3359 190.4229 374.7012 202.6094 379.8154 211.2109 C
375.8154 202.0225 371.7988 191.2852 378.7207 182.8135 C
378.7207 182.8135 L
f
1 D
0 g
388.6797 177.4141 m
387.9355 186.3945 383.377 202.6553 380.5488 210.7744 C
375.7012 202.0508 376.3623 186.2959 384.335 179.1035 C
378.2031 187.3633 377.2754 201.8184 380.5488 210.7744 C
381.0811 202.8213 386.2578 185.4014 388.6797 177.4141 C
388.6797 177.4141 L
f
0 D
0 g
391.6016 180.7832 m
392.9502 190.2842 387.2188 204.9824 380.626 210.7969 C
388.4863 205.8711 394.9834 190.3613 391.6016 180.7832 C
391.6016 180.7832 L
f
395.3076 187.0283 m
397.3311 197.6924 388.8135 205.3711 380.957 211.501 C
389.5166 206.4072 399.0146 197.6348 395.3076 187.0283 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 384.1865 194.457 344 20.8123 1 0 0 1 0 0 Bg
20.0061 -5.73664 -5.73664 -20.0061 384.1865 194.457 Bm
f
0 BB
*U
*u
0 g
348.4707 207.2393 m
353.6367 217.3145 365.5303 215.5527 375.166 212.8535 C
365.2529 214.3242 354.8496 216.127 348.4707 207.2393 C
348.4707 207.2393 L
f
1 D
0 g
345.8477 196.2178 m
354.3262 199.2734 367.832 207.1885 374.9355 212.0313 C
365.251 214.4424 351.2197 210.4229 346.3496 200.8535 C
352.7295 208.9219 365.4355 212.8613 374.9355 212.0313 C
367.3945 209.4473 352.9297 200.6348 345.8477 196.2178 C
345.8477 196.2178 L
f
0 g
349.8613 194.2734 m
359.9893 193.5 372.2666 203.0908 374.9775 211.9619 C
371.0781 204.084 359.3867 195.4434 349.8613 194.2734 C
349.8613 194.2734 L
f
356.8555 192.3193 m
368.0615 191.5 373.0527 202.2363 375.7441 211.8262 C
371.8691 202.6455 367.6797 193.1406 356.8555 192.3193 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 360.1982 204.7451 59 19.9287 1 0 0 1 0 0 Bg
10.264 17.0822 17.0822 -10.264 360.1982 204.7451 Bm
f
0 BB
*U
*u
0 D
0 g
410.2354 205.874 m
400.749 199.6943 390.2979 206.5654 383.2744 213.6943 C
391.1484 207.4941 400.2861 201.3271 410.2354 205.874 C
410.2354 205.874 L
f
1 D
0 g
417.9854 214.1387 m
409.1084 215.6963 392.4531 214.9688 383.8818 214.293 C
391.0918 207.3916 406.2686 204.4766 415.248 210.3643 C
405.7031 206.5283 391.7158 208.8545 383.8818 214.293 C
391.7119 212.791 409.6445 213.8223 417.9854 214.1387 C
417.9854 214.1387 L
f
0 D
0 g
415.4668 217.8193 m
406.6182 221.5342 391.1768 219.2754 383.8809 214.374 C
390.6387 220.7275 407.0596 223.5195 415.4668 217.8193 C
415.4668 217.8193 L
f
410.3662 222.9893 m
400.5635 227.6504 391.2051 220.917 383.2832 214.8721 C
390.3809 221.8604 401.0469 229.2637 410.3662 222.9893 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 400.6299 214.4141 268 20.5162 1 0 0 1 0 0 Bg
-0.716002 -20.5037 -20.5037 0.716002 400.6299 214.4141 Bm
f
0 BB
*U
*u
0 g
398.7158 240.333 m
401.1387 229.2734 391.6211 222.21 382.4688 218.1641 C
391.0537 223.334 399.4473 229.418 398.7158 240.333 C
398.7158 240.333 L
f
1 D
0 g
393.7285 250.5059 m
389.1309 242.7559 384.5254 227.2002 382.124 218.9443 C
391.1309 223.2451 398.6201 236.1289 396.291 246.6104 C
396.5 236.3262 389.9824 224.3467 382.124 218.9443 C
386.2988 225.7354 391.0732 242.5928 393.7285 250.5059 C
393.7285 250.5059 L
f
0 g
389.3945 249.4541 m
381.0889 243.6074 378.4961 227.541 382.0479 218.9717 C
380.0459 227.5303 382.79 242.4922 389.3945 249.4541 C
389.3945 249.4541 L
f
382.7559 246.5127 m
373.5879 240.0166 377.3467 227.7002 381.3701 218.5889 C
378.5205 228.1377 374.9268 238.9932 382.7559 246.5127 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 388.0879 234.335 199 19.5608 1 0 0 1 0 0 Bg
-18.4951 -6.36836 -6.36836 18.4951 388.0879 234.335 Bm
f
0 BB
*U
*u
0 D
0 g
362.0811 241.543 m
373.3027 240.0322 376.7822 227.9541 377.4502 217.9688 C
375.5322 227.8057 372.5869 238.4922 362.0811 241.543 C
362.0811 241.543 L
f
1 D
0 g
350.8164 240.3408 m
356.5234 233.3662 369.6641 222.9951 376.5986 217.9121 C
375.6416 227.8467 365.999 240.0127 355.3535 241.4141 C
365.0879 238.0889 374.2139 227.1455 376.5986 217.9121 C
371.6475 224.1611 357.3418 235.1367 350.8164 240.3408 C
350.8164 240.3408 L
f
0 g
350.3203 235.9082 m
352.9688 226.1025 367.2793 217.4482 376.5469 217.8506 C
367.8203 218.8994 354.5996 227.3193 350.3203 235.9082 C
350.3203 235.9082 L
f
350.8105 228.6631 m
353.7744 217.8262 366.7354 216.4229 376.6738 217.082 C
366.7266 217.6748 355.1943 218.7324 350.8105 228.6631 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 364.4268 229.2441 129 18.7162 1 0 0 1 0 0 Bg
-11.7785 14.5452 14.5452 11.7785 364.4268 229.2441 Bm
f
0 BB
*U
0 D
0.78 0.81 0.81 0.64 k
385.9414 211.2822 m
385.3936 211.1436 384.8447 211.1367 384.3252 211.2432 C
384.3369 211.2002 L
384.8301 209.2607 383.6563 207.2891 381.7178 206.7959 c
379.7783 206.3027 377.8057 207.4766 377.3135 209.415 c
377.3066 209.4404 377.3008 209.4658 377.2949 209.4912 C
376.8291 208.9609 376.2041 208.5605 375.4678 208.374 c
373.5283 207.8809 371.5566 209.0547 371.0635 210.9941 c
370.5713 212.9326 371.7441 214.9053 373.6836 215.3975 c
373.7939 215.4258 373.9053 215.4482 374.0166 215.4658 C
373.3203 215.9463 372.7881 216.6709 372.5635 217.5547 c
372.0703 219.4941 373.2441 221.4658 375.1826 221.959 c
376.6299 222.3262 378.0947 221.7666 378.9502 220.6533 C
379.4063 221.5576 380.2363 222.2676 381.2939 222.5361 c
383.2334 223.0283 385.2051 221.8555 385.6982 219.917 c
385.833 219.3867 385.8428 218.8535 385.7471 218.3496 C
387.0771 218.0879 388.2051 217.0869 388.5605 215.6865 c
389.0537 213.7471 387.8809 211.7754 385.9414 211.2822 c
f
380.4121 211.3105 m
378.5049 210.8262 376.5635 211.9805 376.0791 213.8887 c
375.5938 215.7959 376.748 217.7373 378.6563 218.2217 c
380.5645 218.7061 382.5059 217.5527 382.9902 215.6445 c
383.4746 213.7363 382.3203 211.7949 380.4121 211.3105 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 379.5352 214.7656 0 4.43668 1 0 0 1 0 0 Bg
4.43668 0 0 -4.43668 379.5352 214.7656 Bm
f
0 BB
384.917 211.8145 m
383.2852 211.4004 381.626 212.3867 381.2109 214.0186 c
380.7969 215.6504 381.7842 217.3096 383.416 217.7246 c
385.0469 218.1387 386.707 217.1523 387.1211 215.5205 c
387.5352 213.8887 386.5488 212.2295 384.917 211.8145 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 384.166 214.7695 0 3.7947 1 0 0 1 0 0 Bg
3.7947 0 0 -3.7947 384.166 214.7695 Bm
f
0 BB
382.5078 215.374 m
380.877 214.959 379.2168 215.9463 378.8027 217.5781 c
378.3887 219.21 379.375 220.8691 381.0068 221.2842 c
382.6387 221.6982 384.2979 220.7109 384.7129 219.0801 c
385.127 217.4482 384.1396 215.7881 382.5078 215.374 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 381.7578 218.3291 0 3.7947 1 0 0 1 0 0 Bg
3.7947 0 0 -3.7947 381.7578 218.3291 Bm
f
0 BB
376.1045 209.3682 m
374.4727 208.9531 372.8135 209.9404 372.3994 211.5723 c
371.9844 213.2031 372.9717 214.8623 374.6025 215.2773 c
376.2344 215.6914 377.8936 214.7051 378.3086 213.0732 c
378.7227 211.4414 377.7363 209.7822 376.1045 209.3682 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 375.3535 212.3223 0 3.7947 1 0 0 1 0 0 Bg
3.7947 0 0 -3.7947 375.3535 212.3223 Bm
f
0 BB
381.3633 208.04 m
379.7314 207.625 378.0723 208.6123 377.6572 210.2441 c
377.2432 211.876 378.2295 213.5352 379.8613 213.9492 c
381.4932 214.3643 383.1523 213.377 383.5674 211.7451 c
383.9814 210.1143 382.9941 208.4541 381.3633 208.04 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 380.6123 210.9941 0 3.7947 1 0 0 1 0 0 Bg
3.7947 0 0 -3.7947 380.6123 210.9941 Bm
f
0 BB
377.3662 214.8887 m
375.7344 214.4736 374.0752 215.4609 373.6611 217.0918 c
373.2461 218.7236 374.2334 220.3828 375.8652 220.7979 c
377.4961 221.2119 379.1563 220.2256 379.5703 218.5938 c
379.9854 216.9619 378.998 215.3027 377.3662 214.8887 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 376.6152 217.8438 0 3.79531 1 0 0 1 0 0 Bg
3.79531 0 0 -3.79531 376.6152 217.8438 Bm
f
0 BB
380.2773 211.793 m
378.6465 211.3779 376.9873 212.3652 376.5723 213.9971 c
376.1582 215.6289 377.1445 217.2881 378.7764 217.7021 c
380.4072 218.1172 382.0674 217.1299 382.4814 215.499 c
382.8965 213.8672 381.9092 212.207 380.2773 211.793 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 379.5273 214.748 0 3.7947 1 0 0 1 0 0 Bg
3.7947 0 0 -3.7947 379.5273 214.748 Bm
f
0 BB
168.6284 99.1318 m
87.2085 112.9922 95.5586 47.7227 103.3237 39.2266 C
103.1421 54.7861 119.1646 54.3721 125.8936 69.3926 c
132.8164 84.8477 143.0381 97.0264 168.6284 99.1318 C
Bb
1 (GradientFill 4) 94.3105 43.8105 48 91.7633 1 0 0 1 0 0 Bg
61.4016 68.1934 54.8301 -49.3692 54.501 79.6553 Xm
5345.8086 5937.123 54.8301 -49.3692 -5291.3076 -5857.4678 Bc
61.4016 68.1934 54.8301 -49.3692 54.501 79.6553 Bm
5345.8086 5937.123 54.8301 -49.3692 115.9028 147.8486 Bc
f
0 BB
*u
0 g
121.4272 98.6172 m
133.4941 101.1162 146.0127 101.749 158.3042 100.8398 C
160.8843 100.6572 163.4531 100.3926 166.0098 100.0479 C
152.4771 101.5361 138.769 100.7451 125.6582 96.9873 C
124.8276 96.7637 124.0005 96.5264 123.1763 96.2813 C
123.6851 95.5703 124.1831 94.8516 124.6616 94.1191 C
125.8262 94.4785 126.9966 94.8193 128.1733 95.1367 C
147.4717 100.668 168.0522 99.832 187.4941 94.7725 C
188.2065 95.7607 L
187.9575 95.8506 L
166.1206 103.7979 141.9966 106.6455 119.4458 100.9922 C
120.126 100.2158 120.7886 99.4258 121.4272 98.6172 C
121.4272 98.6172 L
f
173.7153 98.9531 m
167.4863 100.3809 161.144 101.3428 154.7373 101.7969 C
152.6006 101.9551 150.457 102.0645 148.3101 102.127 C
157.6372 102.0068 166.981 100.7314 176.0972 98.5166 C
175.3042 98.6699 174.5103 98.8154 173.7153 98.9531 C
Bb
1 (GradientFill 4) 172.627 83.1748 -216 49.0618 1 0 0 1 0 0 Bg
-39.6918 28.8378 25.086 34.5279 160.084 65.9111 Xm
-6533.0854 4746.5654 25.086 34.5279 6693.1689 -4680.6543 Bc
-39.6918 28.8378 25.086 34.5279 160.084 65.9111 Bm
-6533.0854 4746.5654 25.086 34.5279 120.3921 94.749 Bc
f
0 BB
*U
169.9951 100.7002 m
95.6655 109.1064 76.1602 138.2383 89.9321 157.999 C
91.4771 149.5342 107.1494 149.5977 115.9463 137.7568 c
126.8696 123.0527 143.9253 110.5195 169.9951 100.7002 C
Bb
1 (GradientFill 4) 143.0947 153.1758 -119 56.394 1 0 0 1 0 0 Bg
-27.3404 -49.3233 -91.1955 50.5505 187.6729 128.4658 Xm
-3888.1931 -7014.4829 -91.1955 50.5505 4075.8662 7142.9487 Bc
-27.3404 -49.3233 -91.1955 50.5505 187.6729 128.4658 Bm
-3888.1931 -7014.4829 -91.1955 50.5505 160.3325 79.1426 Bc
f
0 BB
53.0288 0 m
52.251 11.0332 53.6265 22.2051 57.2622 32.6553 C
65.1045 55.082 82.2075 74.1201 102.8306 85.8008 C
123.5615 97.5547 148.3789 101.9404 171.7793 97.8252 C
195.3281 94.0557 216.6436 81.1123 233.4341 64.2744 C
238.4077 59.3174 242.9116 53.9385 246.9468 48.2344 C
242.4287 55.0508 237.248 61.4355 231.4229 67.2422 C
214.7847 83.9268 193.6641 96.751 170.3296 100.4863 C
147.1421 104.5654 122.5513 100.2178 102.0093 88.5723 C
81.5737 76.9971 64.626 58.1328 56.8555 35.9111 C
52.8599 24.4316 51.6167 12.0752 52.9839 0 C
53.0288 0 L
Bb
1 (GradientFill 4) 109.4277 119.6162 -67 157.8109 1 0 0 1 0 0 Bg
61.6616 -145.2657 -185.3809 -78.6895 202.1191 158.9609 Xm
3119.5747 -7349.2588 -185.3809 -78.6895 -2917.4556 7508.2197 Bc
61.6616 -145.2657 -185.3809 -78.6895 202.1191 158.9609 Bm
3119.5747 -7349.2588 -185.3809 -78.6895 263.7808 13.6953 Bc
f
0 BB
139.999 67.9287 m
135.4038 79.0518 150.7876 88.5957 130.9209 100.0215 C
148.8638 95.7852 149.6108 114.9688 158.2939 125.0605 C
146.5146 121.3086 130.9663 136.4912 122.9819 123.709 C
127.0869 133.917 113.3506 141.8789 111.2891 155.168 C
109.4971 144.1289 87.6538 135.1816 97.0898 122.166 C
85.0767 131.9277 76.292 118.415 62.0483 115.7158 C
76.2593 108.0303 74.749 92.79 88.4849 96.1689 C
75.4624 89.5107 85.3008 72.3955 80.1055 62.543 C
90.772 70.7744 109.8032 64.5586 110.7642 81.7637 C
113.8667 63.6797 134.313 71.835 139.999 67.9287 C
Bb
1 (GradientFill 4) 158.1255 78.4072 -206 112.9097 1 0 0 1 0 0 Bg
-101.4826 49.4964 44.2408 90.707 136.0049 33.0537 Xm
-7230.4058 3526.5056 44.2408 90.707 7366.4102 -3493.4521 Bc
-101.4826 49.4964 44.2408 90.707 136.0049 33.0537 Bm
-7230.4058 3526.5056 44.2408 90.707 34.5225 82.5498 Bc
f
0 BB
138.3335 70.0342 m
134.0239 80.4648 149.8428 86.9707 127.8262 101.1846 C
147.5845 97.2139 148.0278 114.0654 156.1704 123.5283 C
145.125 120.0107 130.9565 135.1895 121.4102 120.3379 C
125.9814 133.8789 112.9639 139.0791 111.0313 151.54 C
109.3506 141.1885 88.4937 136.2002 100.0552 118.418 C
85.4233 131.2412 78.6528 117.8877 65.2964 115.3574 C
78.6221 108.1494 75.0645 92.8555 93.2725 98.0771 C
75.6899 88.665 87.0415 74.2236 82.1699 64.9834 C
92.1719 72.7031 111.3306 67.4609 110.436 87.4258 C
113.4507 65.4541 133.0015 73.6982 138.3335 70.0342 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 110.7334 108.2617 0 51.4545 1 0 0 1 0 0 Bg
51.4545 0 0 -51.4545 110.7334 108.2617 Bm
f
0 BB
*u
0 g
136.7339 85.2813 m
135.7759 96.6123 123.3911 100.5615 113.4087 101.7285 C
123.1802 99.3154 134.1963 95.9717 136.7339 85.2813 C
136.7339 85.2813 L
f
0 g
134.9673 74.042 m
128.2559 80.1133 118.0635 93.668 113.3096 100.877 C
123.2271 99.4229 135.3936 89.2871 136.2695 78.5391 C
133.4189 88.4688 122.4526 98.0254 113.3096 100.877 C
119.3306 95.6006 130.0718 80.8457 134.9673 74.042 C
134.9673 74.042 L
f
0 g
130.4976 73.7646 m
120.793 76.9092 112.3799 91.5527 113.2446 100.8281 C
113.8633 92.0225 122.0942 78.4844 130.4976 73.7646 C
130.4976 73.7646 L
f
123.2539 74.6172 m
112.5313 78.1289 111.3247 91.0576 112.4805 100.9941 C
112.5801 90.9873 113.5117 79.5078 123.2539 74.6172 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 123.4463 87.7461 15 19.2879 1 0 0 1 0 0 Bg
18.6307 4.99207 4.99207 -18.6307 123.4463 87.7461 Bm
f
0 BB
*U
*u
0 g
135.6953 124.3145 m
124.5059 126.3379 118.6572 115.7734 114.9341 106.4385 C
119.8062 115.2451 124.7134 124.6455 135.6953 124.3145 C
135.6953 124.3145 L
f
0 g
146.0884 119.6846 m
138.4795 114.7842 123.9272 108.8359 115.73 106.1211 C
119.7144 115.3193 131.4785 124.0625 142.0845 122.1123 C
131.7549 121.9424 120.8618 114.208 115.73 106.1211 C
122.3916 110.5625 138.2451 116.7275 146.0884 119.6846 C
146.0884 119.6846 L
f
0 g
145.1924 115.2969 m
139.6318 106.7441 124.4912 102.7979 115.7607 106.0459 C
124.4238 104.3525 138.4497 108.4102 145.1924 115.2969 C
145.1924 115.2969 L
f
142.4854 108.5244 m
136.3047 99.084 124.6948 101.6494 115.4014 105.3516 C
125.0894 102.8438 135.228 100.3896 142.4854 108.5244 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 129.8882 113.0615 -59 19.868 1 0 0 1 0 0 Bg
10.2328 -17.0302 -17.0302 -10.2328 129.8882 113.0615 Bm
f
0 BB
*U
*u
0 g
99.1133 74.2012 m
109.8301 78.002 110.7217 90.5313 109.3179 100.4824 C
109.4624 90.4189 108.8091 79.3672 99.1133 74.2012 C
99.1133 74.2012 L
f
0 g
87.7925 73.0596 m
91.9634 81.0918 102.7021 93.9365 108.4692 100.3633 C
109.5786 90.4004 102.6479 76.5137 92.4736 72.9404 C
101.3555 78.2168 108.0308 90.7959 108.4692 100.3633 C
104.8926 93.2002 93.1328 79.5205 87.7925 73.0596 C
87.7925 73.0596 L
f
0 g
86.3911 77.3135 m
86.9717 87.498 99.2144 98.8965 108.4058 100.4131 C
100.0449 97.5811 88.8252 86.6387 86.3911 77.3135 C
86.3911 77.3135 L
f
85.3784 84.5361 m
86.0557 95.7988 98.4678 99.793 108.3726 101.1943 C
98.7178 98.5605 87.6382 95.2002 85.3784 84.5361 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 98.0938 87.0674 91 19.0063 1 0 0 1 0 0 Bg
-0.331707 19.0034 19.0034 0.331707 98.0938 87.0674 Bm
f
0 BB
*U
*u
0 g
78.6455 104.4092 m
85.9922 95.7314 97.4321 99.0166 106.2432 103.8516 C
96.8818 100.1553 86.9082 97.1689 78.6455 104.4092 C
78.6455 104.4092 L
f
0 g
73.5708 114.5938 m
82.5591 113.5342 97.7793 107.7227 105.8311 104.6025 C
96.9058 100.0391 82.0586 101.9219 75.1162 110.1729 C
83.1938 103.7334 96.7275 101.627 105.8311 104.6025 C
97.8657 105.4131 81.5034 111.8857 73.5708 114.5938 C
73.5708 114.5938 L
f
1 D
0 g
77.0532 117.4092 m
86.6362 118.4336 100.248 111.4971 105.855 104.6797 C
101.1846 112.7402 86.7837 120.4717 77.0532 117.4092 C
77.0532 117.4092 L
f
83.4502 120.9131 m
94.2241 122.5732 100.6938 113.085 106.5742 104.9873 C
101.7583 113.7549 94.2241 124.2656 83.4502 120.9131 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 91.062 110.0586 160 20.9292 1 0 0 1 0 0 Bg
-19.667 7.15822 7.15822 19.667 91.062 110.0586 Bm
f
0 BB
*U
*u
0 D
0 g
100.0244 134.377 m
94.3862 124.5029 101.8999 114.3594 109.4595 107.7373 C
102.7808 115.2666 96.0508 124.1338 100.0244 134.377 C
100.0244 134.377 L
f
0 g
107.8545 142.6318 m
109.938 133.8242 110.1982 117.0146 110.0244 108.3818 C
102.6807 115.2041 98.8555 130.3184 104.231 139.666 C
100.9463 129.8721 104.1113 115.916 110.0244 108.3818 C
108.0581 116.1426 108.0264 134.252 107.8545 142.6318 C
107.8545 142.6318 L
f
1 D
0 g
111.6929 140.3242 m
115.9365 131.6709 114.5908 115.9873 110.1055 108.3848 C
116.0786 115.5332 117.9014 132.2305 111.6929 140.3242 C
111.6929 140.3242 L
f
0 D
117.1748 135.5137 m
124.0137 126.5391 117.2285 115.3428 110.6406 107.8154 C
116.2344 116.1133 122.4243 125.96 117.1748 135.5137 C
Bb
0 0 0 0 Bh
1 (GradientFill 5) 109.6973 125.5332 230 21.2649 1 0 0 1 0 0 Bg
-13.6688 -16.2899 -16.2899 13.6688 109.6973 125.5332 Bm
f
0 BB
*U
0.78 0.81 0.81 0.64 k
109.6157 96.8838 m
110.0605 97.2354 110.4009 97.6699 110.6323 98.1484 C
110.6602 98.1133 L
111.9067 96.5371 114.1958 96.2705 115.7715 97.5176 c
117.3472 98.7637 117.6143 101.0527 116.3677 102.6289 c
116.3511 102.6494 116.3345 102.6699 116.3179 102.6895 C
117.0254 102.7383 117.7261 102.9932 118.3237 103.4658 c
119.8999 104.7129 120.1665 107.002 118.9199 108.5781 c
117.6733 110.1533 115.3843 110.4209 113.8086 109.1738 c
113.7183 109.1025 113.6328 109.0273 113.5513 108.9492 C
113.5923 109.7979 113.3389 110.665 112.7705 111.3828 c
111.5239 112.959 109.2349 113.2256 107.6592 111.9785 c
106.4834 111.0488 106.0361 109.5381 106.4028 108.1768 C
105.4033 108.3652 104.3306 108.1357 103.4712 107.4551 c
101.895 106.209 101.6284 103.9199 102.875 102.3438 c
103.2158 101.9131 103.6348 101.5801 104.0952 101.3496 C
103.4932 100.1289 103.6035 98.6182 104.5039 97.4795 c
105.7505 95.9033 108.0396 95.6367 109.6157 96.8838 c
f
112.9653 101.3115 m
114.5156 102.5391 114.7783 104.791 113.5518 106.3418 c
112.3247 107.8926 110.0723 108.1553 108.522 106.9277 c
106.9712 105.7021 106.7085 103.4492 107.9355 101.8984 c
109.1621 100.3477 111.4146 100.085 112.9653 101.3115 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 110.7432 104.1201 0 4.4555 1 0 0 1 0 0 Bg
4.4555 0 0 -4.4555 110.7432 104.1201 Bm
f
0 BB
109.8154 98.0254 m
111.1416 99.0742 111.3657 101.001 110.3169 102.3262 c
109.2681 103.6523 107.3423 103.877 106.0161 102.8281 c
104.6904 101.7793 104.4658 99.8525 105.5146 98.5273 c
106.5635 97.2012 108.4893 96.9766 109.8154 98.0254 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 107.916 100.4268 0 3.8092 1 0 0 1 0 0 Bg
3.8092 0 0 -3.8092 107.916 100.4268 Bm
f
0 BB
108.4448 102.1182 m
109.7705 103.167 109.9951 105.0938 108.9463 106.4189 c
107.8975 107.7451 105.9712 107.9697 104.6455 106.9209 c
103.3198 105.8721 103.0947 103.9453 104.144 102.6201 c
105.1929 101.2939 107.1191 101.0693 108.4448 102.1182 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 106.5449 104.5195 0 3.8095 1 0 0 1 0 0 Bg
3.8095 0 0 -3.8095 106.5449 104.5195 Bm
f
0 BB
117.1426 103.5645 m
118.4688 104.6133 118.6929 106.5391 117.6445 107.8652 c
116.5952 109.1914 114.6694 109.416 113.3433 108.3672 c
112.0176 107.3174 111.793 105.3916 112.8418 104.0654 c
113.8911 102.7402 115.8169 102.5156 117.1426 103.5645 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 115.2432 105.9658 0 3.8095 1 0 0 1 0 0 Bg
3.8095 0 0 -3.8095 115.2432 105.9658 Bm
f
0 BB
114.9951 98.5586 m
116.3208 99.6074 116.5454 101.5342 115.4966 102.8594 c
114.4478 104.1855 112.5215 104.4102 111.1958 103.3613 c
109.8701 102.3125 109.645 100.3857 110.6943 99.0605 c
111.7432 97.7344 113.6694 97.5098 114.9951 98.5586 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 113.0957 100.96 0 3.8092 1 0 0 1 0 0 Bg
3.8092 0 0 -3.8092 113.0957 100.96 Bm
f
0 BB
111.9683 105.9248 m
113.2944 106.9736 113.519 108.8994 112.4702 110.2256 c
111.4209 111.5508 109.4951 111.7754 108.1694 110.7266 c
106.8433 109.6777 106.6187 107.752 107.668 106.4258 c
108.7168 105.1006 110.6426 104.876 111.9683 105.9248 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 110.0693 108.3262 0 3.8089 1 0 0 1 0 0 Bg
3.8089 0 0 -3.8089 110.0693 108.3262 Bm
f
0 BB
112.6626 101.7139 m
113.9883 102.7627 114.2129 104.6885 113.1641 106.0146 c
112.1152 107.3408 110.189 107.5654 108.8633 106.5156 c
107.5376 105.4668 107.3125 103.541 108.3618 102.2148 c
109.4106 100.8896 111.3369 100.665 112.6626 101.7139 c
Bb
0 0 0 0 Bh
1 (GradientFill 6) 110.7627 104.1152 0 3.8092 1 0 0 1 0 0 Bg
3.8092 0 0 -3.8092 110.7627 104.1152 Bm
f
0 BB
0.709804 0.356863 1 0.231373 k
0 XR
308.3711 506.2144 m
308.2607 507.481 307.8076 508.4287 307.0039 509.0664 c
306.1992 509.7041 305.0479 510.0186 303.5508 510.0186 c
302.1963 510.0186 301.0957 509.769 300.2461 509.2607 c
299.3955 508.7568 298.9746 508.022 298.9746 507.0557 c
298.9746 506.1958 299.2979 505.5581 299.9551 505.1377 c
300.6104 504.7168 301.8633 504.3008 303.7129 503.8848 c
305.3535 503.5244 306.6934 503.1548 307.7334 502.7754 c
308.7734 502.3965 309.6611 501.8096 310.4004 501.0098 c
311.1406 500.2104 311.5098 499.1377 311.5098 497.7925 c
311.5098 496.0869 310.8301 494.668 309.4717 493.5405 c
308.1172 492.4126 306.3428 491.8486 304.1602 491.8486 c
301.3691 491.8486 299.2793 492.4727 297.8975 493.7158 c
296.5107 494.9639 295.7759 496.5771 295.6973 498.5649 C
298.1885 498.7822 L
298.3047 497.1919 298.9189 496.0361 300.0283 495.3062 c
301.1377 494.5806 302.4785 494.2148 304.0498 494.2148 c
305.5244 494.2148 306.7119 494.5205 307.6182 495.126 c
308.5244 495.7314 308.9814 496.5493 308.9814 497.5894 c
308.9814 498.6709 308.5059 499.4614 307.5576 499.9604 c
306.6104 500.4551 305.0205 500.9453 302.7832 501.4302 c
300.5508 501.9111 298.9424 502.5908 297.957 503.4644 c
296.9731 504.3423 296.4785 505.4795 296.4785 506.8799 c
296.4785 508.4653 297.1025 509.7832 298.3506 510.8184 c
299.5938 511.8584 301.29 512.376 303.4395 512.376 c
305.6445 512.376 307.415 511.8584 308.7549 510.8276 c
310.0957 509.792 310.8076 508.3223 310.8906 506.418 C
308.3711 506.2144 L
f
*u
327.2627 492.186 m
324.7021 492.186 L
324.4658 492.6392 324.2998 493.2305 324.2031 493.9609 C
322.5664 492.5513 320.8008 491.8486 318.9053 491.8486 c
317.3896 491.8486 316.1924 492.2275 315.3184 492.9858 c
314.4404 493.7437 314.0059 494.7471 314.0059 495.9902 c
314.0059 497.1826 314.4268 498.1626 315.2676 498.9346 c
316.1133 499.7065 317.5791 500.2192 319.6641 500.4736 c
321.9375 500.811 l
322.7881 500.9497 323.4863 501.1162 324.0361 501.3149 C
324.0361 502.0454 324.0176 502.563 323.9717 502.8633 c
323.9248 503.1636 323.791 503.478 323.5693 503.8066 c
323.3477 504.1299 322.9961 504.3936 322.5059 504.5923 c
322.0205 504.791 321.3643 504.8877 320.5459 504.8877 c
319.4971 504.8877 318.6699 504.6934 318.0596 504.3057 c
317.4492 503.917 317.0332 503.1963 316.8066 502.1377 C
314.4219 502.4521 L
314.6855 503.9219 315.3555 505.0269 316.4414 505.7661 c
317.5234 506.5103 319.0166 506.8799 320.9121 506.8799 c
322.6357 506.8799 323.9023 506.6255 324.7061 506.1128 c
325.5146 505.6045 326.0146 504.9897 326.1992 504.2637 c
326.3838 503.543 326.4766 502.6138 326.4766 501.4766 c
326.4766 498.1997 l
326.4766 496.2026 326.5137 494.8672 326.5918 494.1826 c
326.666 493.5034 326.8926 492.8379 327.2627 492.186 C
327.2627 492.186 L
f
1 D
324.0361 498.5093 m
324.0361 499.3921 L
322.7646 498.9668 321.207 498.6294 319.3672 498.3799 c
317.5234 498.1348 316.6035 497.3535 316.6035 496.0459 c
316.6035 495.3848 316.8535 494.8438 317.3477 494.4141 c
317.8467 493.9839 318.5586 493.7715 319.4883 493.7715 c
320.6895 493.7715 321.748 494.1274 322.6631 494.8481 c
323.5781 495.5649 324.0361 496.7852 324.0361 498.5093 c
f
*U
0 D
349.6992 492.186 m
347.2627 492.186 L
347.2627 501.2593 l
347.2627 501.9248 347.2168 502.498 347.1289 502.9746 c
347.0361 503.4458 346.8057 503.8667 346.4307 504.2314 c
346.0566 504.5967 345.4697 504.7813 344.6748 504.7813 c
343.7178 504.7813 342.8945 504.4443 342.1973 503.7788 c
341.5039 503.1084 341.1572 502.0269 341.1572 500.5293 c
341.1572 492.186 L
338.7158 492.186 L
338.7158 501.5273 l
338.7158 502.7754 338.499 503.6304 338.0605 504.0884 c
337.6211 504.5503 337.002 504.7813 336.1973 504.7813 c
335.1523 504.7813 334.293 504.4165 333.6182 503.6953 c
332.9482 502.9746 332.6104 501.6245 332.6104 499.6465 c
332.6104 492.186 L
330.1748 492.186 L
330.1748 506.5518 L
332.3652 506.5518 L
332.3652 504.5503 L
332.4209 504.5503 L
333.3965 506.1035 334.8242 506.8799 336.7148 506.8799 c
337.7686 506.8799 338.6377 506.6675 339.3223 506.2466 c
340.001 505.8311 340.4961 505.1978 340.8008 504.3608 C
341.8691 506.0391 343.3438 506.8799 345.2295 506.8799 c
346.7217 506.8799 347.8359 506.478 348.585 505.6738 c
349.3291 504.8691 349.6992 503.6631 349.6992 502.0591 c
349.6992 492.186 L
f
*u
355.6289 504.6982 m
356.5439 506.1499 357.9121 506.8799 359.7334 506.8799 c
361.6191 506.8799 363.1123 506.1958 364.2031 504.8276 c
365.2939 503.4595 365.8398 501.6802 365.8398 499.4844 c
365.8398 497.146 365.2383 495.2876 364.0273 493.915 c
362.8164 492.5371 361.333 491.8486 359.5713 491.8486 c
358.0283 491.8486 356.7891 492.4634 355.8604 493.6885 C
355.7949 493.6885 L
355.7949 486.6626 L
353.3555 486.6626 L
353.3555 506.5518 L
355.5781 506.5518 L
355.5781 504.6982 L
355.6289 504.6982 L
355.6289 504.6982 L
f
1 D
359.4102 493.8501 m
360.5469 493.8501 361.4902 494.3213 362.2344 495.269 c
362.9785 496.2119 363.3486 497.6172 363.3486 499.4844 c
363.3486 501.2456 362.9922 502.6001 362.2715 503.5474 c
361.5547 504.4951 360.6348 504.9712 359.5166 504.9712 c
358.3604 504.9712 357.4131 504.4395 356.6689 503.3857 c
355.9199 502.3271 355.5508 500.959 355.5508 499.2813 c
355.5508 497.5015 355.9063 496.1519 356.6182 495.2324 c
357.335 494.3125 358.2637 493.8501 359.4102 493.8501 c
f
*U
0 D
371.1924 492.186 m
368.752 492.186 L
368.752 512.0386 L
371.1924 512.0386 L
371.1924 492.186 L
f
*u
387.4023 498.7544 m
376.6328 498.7544 L
376.7344 497.1641 377.1865 495.9482 377.9961 495.1118 c
378.8047 494.2705 379.8125 493.8501 381.0234 493.8501 c
381.9521 493.8501 382.7344 494.0996 383.3672 494.5894 c
383.9961 495.0796 384.4814 495.8237 384.8135 496.8174 C
387.3193 496.5078 L
386.9121 495.0059 386.168 493.855 385.0869 493.0552 c
384 492.2505 382.6465 491.8486 381.0234 491.8486 c
378.8652 491.8486 377.1777 492.5093 375.9619 493.8315 c
374.751 495.1538 374.1416 496.9609 374.1416 499.2534 c
374.1416 501.5229 374.7324 503.3579 375.9111 504.7676 c
377.0898 506.1729 378.7451 506.8799 380.8848 506.8799 c
381.9346 506.8799 382.9414 506.6489 383.9121 506.1865 c
384.8828 505.729 385.7061 504.9434 386.3857 503.8389 c
387.0605 502.7339 387.4023 501.0376 387.4023 498.7544 C
387.4023 498.7544 L
f
1 D
384.8975 500.7603 m
384.7949 502.2212 384.3418 503.2744 383.5332 503.9219 c
382.7246 504.5645 381.8418 504.8877 380.8848 504.8877 c
379.7383 504.8877 378.7959 504.5044 378.0557 503.7368 c
377.3164 502.9697 376.8867 501.9756 376.7715 500.7603 C
384.8975 500.7603 L
f
*U
0 D
403.6494 492.2139 m
402.9277 492.0703 402.3184 491.9966 401.8232 491.9966 c
400.7559 491.9966 399.9795 492.186 399.4941 492.5605 c
399.0039 492.9351 398.708 493.4111 398.5977 493.9888 c
398.4912 494.5664 398.4355 495.3662 398.4355 496.397 c
398.4355 504.6709 L
396.665 504.6709 L
396.665 506.5518 L
398.4355 506.5518 L
398.4355 510.1294 L
400.876 511.604 L
400.876 506.5518 L
403.3115 506.5518 L
403.3115 504.6709 L
400.876 504.6709 L
400.876 496.2627 l
400.876 495.5415 400.9502 495.0288 401.0977 494.7236 c
401.2461 494.4229 401.625 494.2705 402.2305 494.2705 c
402.5811 494.2705 402.9424 494.3076 403.3115 494.3813 C
403.6494 492.2139 L
f
*u
418.2373 498.7544 m
407.4668 498.7544 L
407.5684 497.1641 408.0215 495.9482 408.8311 495.1118 c
409.6396 494.2705 410.6475 493.8501 411.8584 493.8501 c
412.7871 493.8501 413.5684 494.0996 414.2021 494.5894 c
414.8301 495.0796 415.3154 495.8237 415.6484 496.8174 C
418.1543 496.5078 L
417.7471 495.0059 417.0029 493.855 415.9209 493.0552 c
414.835 492.2505 413.4805 491.8486 411.8584 491.8486 c
409.7002 491.8486 408.0127 492.5093 406.7969 493.8315 c
405.5859 495.1538 404.9756 496.9609 404.9756 499.2534 c
404.9756 501.5229 405.5674 503.3579 406.7461 504.7676 c
407.9248 506.1729 409.5801 506.8799 411.7197 506.8799 c
412.7686 506.8799 413.7764 506.6489 414.7471 506.1865 c
415.7178 505.729 416.541 504.9434 417.2197 503.8389 c
417.8945 502.7339 418.2373 501.0376 418.2373 498.7544 C
418.2373 498.7544 L
f
1 D
415.7314 500.7603 m
415.6299 502.2212 415.1768 503.2744 414.3682 503.9219 c
413.5596 504.5645 412.6768 504.8877 411.7197 504.8877 c
410.5732 504.8877 409.6309 504.5044 408.8906 503.7368 c
408.1514 502.9697 407.7217 501.9756 407.6055 500.7603 C
415.7314 500.7603 L
f
*U
0 D
432.9961 492.186 m
429.9912 492.186 L
426.252 497.8716 L
422.4756 492.186 L
419.5078 492.186 L
424.7773 499.6738 L
419.9287 506.5518 L
422.9473 506.5518 L
424.916 503.5845 425.9883 501.9248 426.1689 501.583 C
429.6904 506.5518 L
432.6025 506.5518 L
427.6338 499.8081 L
432.9961 492.186 L
f
440.6455 492.2139 m
439.9238 492.0703 439.3145 491.9966 438.8193 491.9966 c
437.752 491.9966 436.9756 492.186 436.4902 492.5605 c
436 492.9351 435.7041 493.4111 435.5938 493.9888 c
435.4873 494.5664 435.4316 495.3662 435.4316 496.397 c
435.4316 504.6709 L
433.6611 504.6709 L
433.6611 506.5518 L
435.4316 506.5518 L
435.4316 510.1294 L
437.8721 511.604 L
437.8721 506.5518 L
440.3076 506.5518 L
440.3076 504.6709 L
437.8721 504.6709 L
437.8721 496.2627 l
437.8721 495.5415 437.9463 495.0288 438.0938 494.7236 c
438.2422 494.4229 438.6211 494.2705 439.2266 494.2705 c
439.5771 494.2705 439.9385 494.3076 440.3076 494.3813 C
440.6455 492.2139 L
f
462.1895 492.186 m
459.7393 492.186 L
459.7393 501.2593 l
459.7393 502.4336 459.4854 503.3115 458.9814 503.8989 c
458.4775 504.4858 457.7246 504.7813 456.7207 504.7813 c
455.7275 504.7813 454.8398 504.4346 454.0586 503.7417 c
453.2773 503.0527 452.8896 501.8188 452.8896 500.0391 c
452.8896 492.186 L
450.4492 492.186 L
450.4492 512.0386 L
452.8896 512.0386 L
452.8896 504.9155 L
454.0449 506.2236 455.4873 506.8799 457.2207 506.8799 c
458.1494 506.8799 459.042 506.6904 459.8877 506.3115 c
460.7383 505.9326 461.334 505.3501 461.6758 504.5645 c
462.0186 503.7788 462.1895 502.6831 462.1895 501.2871 c
462.1895 492.186 L
f
*u
478.3623 498.7544 m
467.5928 498.7544 L
467.6943 497.1641 468.1475 495.9482 468.9561 495.1118 c
469.7656 494.2705 470.7725 493.8501 471.9844 493.8501 c
472.9131 493.8501 473.6943 494.0996 474.3271 494.5894 c
474.9561 495.0796 475.4414 495.8237 475.7744 496.8174 C
478.2793 496.5078 L
477.873 495.0059 477.1279 493.855 476.0469 493.0552 c
474.9609 492.2505 473.6064 491.8486 471.9844 491.8486 c
469.8252 491.8486 468.1387 492.5093 466.9229 493.8315 c
465.7119 495.1538 465.1016 496.9609 465.1016 499.2534 c
465.1016 501.5229 465.6934 503.3579 466.8721 504.7676 c
468.0508 506.1729 469.7051 506.8799 471.8447 506.8799 c
472.8945 506.8799 473.9023 506.6489 474.873 506.1865 c
475.8438 505.729 476.666 504.9434 477.3457 503.8389 c
478.0205 502.7339 478.3623 501.0376 478.3623 498.7544 C
478.3623 498.7544 L
f
1 D
475.8574 500.7603 m
475.7559 502.2212 475.3027 503.2744 474.4941 503.9219 c
473.6846 504.5645 472.8018 504.8877 471.8447 504.8877 c
470.6992 504.8877 469.7559 504.5044 469.0166 503.7368 c
468.2773 502.9697 467.8477 501.9756 467.7314 500.7603 C
475.8574 500.7603 L
f
*U
0 D
489.0449 506.1079 m
488.208 503.8569 L
487.6025 504.2134 487.0107 504.3887 486.4326 504.3887 c
485.5176 504.3887 484.8291 503.9775 484.3574 503.1636 c
483.8906 502.3457 483.6553 501.1992 483.6553 499.7295 c
483.6553 492.186 L
481.2197 492.186 L
481.2197 506.5518 L
483.4375 506.5518 L
483.4375 504.3887 L
483.4932 504.3887 L
484.2695 506.0479 485.2871 506.8799 486.5391 506.8799 c
487.3711 506.8799 488.208 506.6211 489.0449 506.1079 C
f
*u
503.0225 498.7544 m
492.2529 498.7544 L
492.3545 497.1641 492.8066 495.9482 493.6162 495.1118 c
494.4248 494.2705 495.4326 493.8501 496.6436 493.8501 c
497.5723 493.8501 498.3535 494.0996 498.9873 494.5894 c
499.6152 495.0796 500.1016 495.8237 500.4336 496.8174 C
502.9395 496.5078 L
502.5322 495.0059 501.7881 493.855 500.707 493.0552 c
499.6201 492.2505 498.2656 491.8486 496.6436 491.8486 c
494.4854 491.8486 492.7979 492.5093 491.582 493.8315 c
490.3711 495.1538 489.7617 496.9609 489.7617 499.2534 c
489.7617 501.5229 490.3525 503.3579 491.5313 504.7676 c
492.71 506.1729 494.3652 506.8799 496.5049 506.8799 c
497.5547 506.8799 498.5615 506.6489 499.5322 506.1865 c
500.5029 505.729 501.3262 504.9434 502.0059 503.8389 c
502.6797 502.7339 503.0225 501.0376 503.0225 498.7544 C
503.0225 498.7544 L
f
1 D
500.5176 500.7603 m
500.415 502.2212 499.9619 503.2744 499.1533 503.9219 c
498.3447 504.5645 497.4619 504.8877 496.5049 504.8877 c
495.3584 504.8877 494.416 504.5044 493.6758 503.7368 c
492.9365 502.9697 492.5068 501.9756 492.3916 500.7603 C
500.5176 500.7603 L
f
*U
0 D
298.5625 476.6294 m
298.5166 476.957 298.3838 477.2036 298.1641 477.3672 c
297.9443 477.5308 297.6387 477.6118 297.2476 477.6118 c
296.8604 477.6118 296.5469 477.5464 296.3076 477.415 c
296.0693 477.2827 295.9497 477.0918 295.9497 476.8398 c
295.9497 476.6025 296.0459 476.4331 296.2344 476.3311 c
296.4253 476.229 296.8008 476.1055 297.3613 475.9595 c
297.9932 475.7974 298.4648 475.6533 298.7803 475.5298 c
299.0947 475.4067 299.3389 475.2314 299.5127 475.0083 c
299.6875 474.7847 299.7764 474.4727 299.7764 474.0737 c
299.7764 473.5405 299.5566 473.0898 299.1221 472.7261 c
298.6846 472.3599 298.1006 472.1787 297.373 472.1787 c
296.6123 472.1787 296.019 472.3389 295.5913 472.6602 c
295.1655 472.9819 294.9023 473.4653 294.8057 474.1089 C
295.8149 474.2607 L
295.8672 473.8428 296.0229 473.5308 296.2808 473.3228 c
296.5371 473.1167 296.897 473.0127 297.3613 473.0127 c
297.8047 473.0127 298.1455 473.1074 298.3818 473.292 c
298.6191 473.479 298.7383 473.7061 298.7383 473.9717 c
298.7383 474.1528 298.6826 474.2974 298.5742 474.4072 c
298.4648 474.5171 298.3281 474.5977 298.1641 474.6519 c
298.001 474.7075 297.6328 474.8037 297.061 474.9424 c
296.2119 475.1465 295.6514 475.3931 295.3779 475.6821 c
295.104 475.9712 294.9692 476.3179 294.9692 476.7202 c
294.9692 477.2207 295.1675 477.6328 295.5664 477.9565 c
295.9648 478.2803 296.5005 478.4419 297.1748 478.4419 c
297.8887 478.4419 298.4453 478.3013 298.8418 478.02 c
299.2393 477.7412 299.4766 477.3228 299.5547 476.7666 C
298.5625 476.6294 L
f
*u
306.1914 472.3193 m
305.125 472.3193 L
305.0264 472.5083 304.957 472.7544 304.917 473.0591 C
304.2354 472.4717 303.499 472.1787 302.71 472.1787 c
302.0781 472.1787 301.5791 472.3369 301.2148 472.6523 c
300.8496 472.9688 300.668 473.3862 300.668 473.9048 c
300.668 474.4014 300.8428 474.8096 301.1943 475.1309 c
301.5459 475.4531 302.1572 475.6665 303.0254 475.7725 c
303.9727 475.9131 l
304.3271 475.9712 304.6182 476.04 304.8467 476.123 C
304.8467 476.4272 304.8398 476.6431 304.8203 476.7686 c
304.8008 476.8936 304.7451 477.0244 304.6523 477.1611 c
304.5605 477.2959 304.4141 477.4058 304.21 477.4888 c
304.0078 477.5713 303.7344 477.6118 303.3936 477.6118 c
302.9561 477.6118 302.6113 477.5308 302.3564 477.3691 c
302.1025 477.2075 301.9297 476.9072 301.835 476.4658 C
300.8408 476.5967 L
300.9512 477.209 301.2305 477.6694 301.6826 477.9775 c
302.1338 478.2876 302.7559 478.4419 303.5449 478.4419 c
304.2637 478.4419 304.791 478.3359 305.126 478.1221 c
305.4629 477.9102 305.6719 477.6543 305.749 477.3516 c
305.8262 477.0513 305.8643 476.6646 305.8643 476.1904 c
305.8643 474.8252 l
305.8643 473.9932 305.8799 473.4365 305.9121 473.1514 c
305.9434 472.8682 306.0371 472.5908 306.1914 472.3193 C
306.1914 472.3193 L
f
1 D
304.8467 474.9541 m
304.8467 475.3218 L
304.3174 475.1445 303.6689 475.0039 302.9023 474.8999 c
302.1338 474.7979 301.75 474.4727 301.75 473.9277 c
301.75 473.6523 301.8545 473.4268 302.0605 473.248 c
302.2686 473.0684 302.5654 472.98 302.9521 472.98 c
303.4531 472.98 303.8936 473.1284 304.2754 473.4287 c
304.6563 473.7275 304.8467 474.2358 304.8467 474.9541 c
f
*U
0 D
315.54 472.3193 m
314.5254 472.3193 L
314.5254 476.1001 l
314.5254 476.377 314.5059 476.6162 314.4688 476.8145 c
314.4307 477.0112 314.334 477.186 314.1777 477.3384 c
314.0225 477.4902 313.7773 477.5674 313.4463 477.5674 c
313.0479 477.5674 312.7051 477.4268 312.4141 477.1499 c
312.125 476.8706 311.9805 476.4199 311.9805 475.7954 c
311.9805 472.3193 L
310.9639 472.3193 L
310.9639 476.2119 l
310.9639 476.7314 310.873 477.0879 310.6904 477.2788 c
310.5078 477.4712 310.249 477.5674 309.9141 477.5674 c
309.4785 477.5674 309.1211 477.415 308.8398 477.1147 c
308.5605 476.8145 308.4199 476.252 308.4199 475.4277 c
308.4199 472.3193 L
307.4053 472.3193 L
307.4053 478.3052 L
308.3174 478.3052 L
308.3174 477.4712 L
308.3408 477.4712 L
308.7471 478.1182 309.3418 478.4419 310.1299 478.4419 c
310.5693 478.4419 310.9307 478.3535 311.2158 478.1782 c
311.499 478.0044 311.7051 477.7412 311.833 477.3921 C
312.2773 478.0913 312.8916 478.4419 313.6777 478.4419 c
314.2998 478.4419 314.7637 478.2744 315.0762 477.939 c
315.3857 477.604 315.54 477.1016 315.54 476.4331 c
315.54 472.3193 L
f
*u
318.0107 477.5327 m
318.3916 478.1377 318.9619 478.4419 319.7207 478.4419 c
320.5068 478.4419 321.1289 478.1567 321.583 477.5869 c
322.0381 477.0166 322.2646 476.2754 322.2646 475.3604 c
322.2646 474.3857 322.0146 473.6118 321.5098 473.0396 c
321.0059 472.4658 320.3867 472.1787 319.6533 472.1787 c
319.0098 472.1787 318.4941 472.4351 318.1074 472.9453 C
318.0801 472.9453 L
318.0801 470.0181 L
317.0635 470.0181 L
317.0635 478.3052 L
317.9893 478.3052 L
317.9893 477.5327 L
318.0107 477.5327 L
318.0107 477.5327 L
f
1 D
319.5859 473.0127 m
320.0596 473.0127 320.4531 473.209 320.7627 473.604 c
321.0732 473.9971 321.2266 474.582 321.2266 475.3604 c
321.2266 476.0942 321.0781 476.6582 320.7783 477.0532 c
320.4795 477.4482 320.0967 477.6465 319.6309 477.6465 c
319.1484 477.6465 318.7539 477.4248 318.4443 476.9858 c
318.1318 476.5449 317.9775 475.9746 317.9775 475.2759 c
317.9775 474.5342 318.126 473.9717 318.4229 473.5884 c
318.7217 473.2051 319.1084 473.0127 319.5859 473.0127 c
f
*U
0 D
324.4951 472.3193 m
323.4785 472.3193 L
323.4785 480.5913 L
324.4951 480.5913 L
324.4951 472.3193 L
f
*u
331.249 475.0562 m
326.7617 475.0562 L
326.8047 474.3936 326.9932 473.8872 327.3301 473.5386 c
327.667 473.188 328.0869 473.0127 328.5918 473.0127 c
328.9785 473.0127 329.3047 473.1167 329.5684 473.3208 c
329.8301 473.5249 330.0322 473.835 330.1709 474.2495 C
331.2148 474.1201 L
331.0449 473.4941 330.7354 473.0146 330.2842 472.6816 c
329.832 472.3462 329.2676 472.1787 328.5918 472.1787 c
327.6924 472.1787 326.9893 472.4546 326.4824 473.0049 c
325.9785 473.5557 325.7236 474.3086 325.7236 475.2642 c
325.7236 476.2095 325.9707 476.9746 326.4619 477.562 c
326.9531 478.147 327.6426 478.4419 328.5342 478.4419 c
328.9707 478.4419 329.3906 478.3457 329.7949 478.1533 c
330.1992 477.9624 330.543 477.6348 330.8262 477.1748 c
331.1074 476.7144 331.249 476.0078 331.249 475.0562 C
331.249 475.0562 L
f
1 D
330.2061 475.8921 m
330.1631 476.5005 329.9746 476.9395 329.6377 477.209 c
329.3008 477.4771 328.9326 477.6118 328.5342 477.6118 c
328.0566 477.6118 327.6631 477.4517 327.3555 477.1323 c
327.0469 476.8125 326.8682 476.3984 326.8203 475.8921 C
330.2061 475.8921 L
f
*U
0 D
338.0186 472.3311 m
337.7188 472.271 337.4639 472.2402 337.2578 472.2402 c
336.8135 472.2402 336.4893 472.3193 336.2871 472.4751 c
336.084 472.6313 335.96 472.8296 335.9141 473.0708 c
335.8691 473.3115 335.8467 473.6445 335.8467 474.0737 c
335.8467 477.5215 L
335.1094 477.5215 L
335.1094 478.3052 L
335.8467 478.3052 L
335.8467 479.7959 L
336.8633 480.4102 L
336.8633 478.3052 L
337.8779 478.3052 L
337.8779 477.5215 L
336.8633 477.5215 L
336.8633 474.0181 l
336.8633 473.7178 336.8945 473.5039 336.9561 473.377 c
337.0176 473.2515 337.1758 473.188 337.4277 473.188 c
337.5742 473.188 337.7246 473.2036 337.8779 473.2344 C
338.0186 472.3311 L
f
*u
344.0967 475.0562 m
339.6094 475.0562 L
339.6523 474.3936 339.8408 473.8872 340.1777 473.5386 c
340.5146 473.188 340.9346 473.0127 341.4395 473.0127 c
341.8262 473.0127 342.1523 473.1167 342.416 473.3208 c
342.6777 473.5249 342.8799 473.835 343.0186 474.2495 C
344.0625 474.1201 L
343.8926 473.4941 343.583 473.0146 343.1318 472.6816 c
342.6797 472.3462 342.1152 472.1787 341.4395 472.1787 c
340.54 472.1787 339.8369 472.4546 339.3311 473.0049 c
338.8262 473.5557 338.5723 474.3086 338.5723 475.2642 c
338.5723 476.2095 338.8184 476.9746 339.3096 477.562 c
339.8008 478.147 340.4902 478.4419 341.3818 478.4419 c
341.8193 478.4419 342.2383 478.3457 342.6436 478.1533 c
343.0479 477.9624 343.3906 477.6348 343.6738 477.1748 c
343.9551 476.7144 344.0967 476.0078 344.0967 475.0562 C
344.0967 475.0562 L
f
1 D
343.0537 475.8921 m
343.0107 476.5005 342.8223 476.9395 342.4854 477.209 c
342.1484 477.4771 341.7803 477.6118 341.3818 477.6118 c
340.9043 477.6118 340.5107 477.4517 340.2031 477.1323 c
339.8945 476.8125 339.7158 476.3984 339.668 475.8921 C
343.0537 475.8921 L
f
*U
0 D
350.2461 472.3193 m
348.9951 472.3193 L
347.4365 474.6885 L
345.8633 472.3193 L
344.627 472.3193 L
346.8223 475.4395 L
344.8018 478.3052 L
346.0596 478.3052 L
346.8799 477.0684 347.3271 476.377 347.4023 476.2349 C
348.8691 478.3052 L
350.083 478.3052 L
348.0127 475.4956 L
350.2461 472.3193 L
f
353.4336 472.3311 m
353.1338 472.271 352.8789 472.2402 352.6729 472.2402 c
352.2285 472.2402 351.9043 472.3193 351.7021 472.4751 c
351.498 472.6313 351.375 472.8296 351.3291 473.0708 c
351.2842 473.3115 351.2617 473.6445 351.2617 474.0737 c
351.2617 477.5215 L
350.5234 477.5215 L
350.5234 478.3052 L
351.2617 478.3052 L
351.2617 479.7959 L
352.2783 480.4102 L
352.2783 478.3052 L
353.293 478.3052 L
353.293 477.5215 L
352.2783 477.5215 L
352.2783 474.0181 l
352.2783 473.7178 352.3086 473.5039 352.3711 473.377 c
352.4326 473.2515 352.5898 473.188 352.8428 473.188 c
352.9893 473.188 353.1387 473.2036 353.293 473.2344 C
353.4336 472.3311 L
f
362.4102 472.3193 m
361.3896 472.3193 L
361.3896 476.1001 l
361.3896 476.5894 361.2842 476.9551 361.0742 477.1997 c
360.8643 477.4443 360.5498 477.5674 360.1318 477.5674 c
359.7178 477.5674 359.3486 477.4233 359.0225 477.1343 c
358.6973 476.8472 358.5352 476.333 358.5352 475.5913 c
358.5352 472.3193 L
357.5186 472.3193 L
357.5186 480.5913 L
358.5352 480.5913 L
358.5352 477.623 L
359.0166 478.1685 359.6182 478.4419 360.3398 478.4419 c
360.7275 478.4419 361.0986 478.3628 361.4512 478.2051 c
361.8057 478.0469 362.0547 477.8047 362.1963 477.4771 c
362.3389 477.1499 362.4102 476.6934 362.4102 476.1118 c
362.4102 472.3193 L
f
*u
369.1494 475.0562 m
364.6621 475.0562 L
364.7041 474.3936 364.8926 473.8872 365.2295 473.5386 c
365.5674 473.188 365.9863 473.0127 366.4912 473.0127 c
366.8789 473.0127 367.2041 473.1167 367.4678 473.3208 c
367.7295 473.5249 367.9316 473.835 368.0703 474.2495 C
369.1143 474.1201 L
368.9453 473.4941 368.6348 473.0146 368.1846 472.6816 c
367.7314 472.3462 367.167 472.1787 366.4912 472.1787 c
365.5918 472.1787 364.8896 472.4546 364.3828 473.0049 c
363.8779 473.5557 363.624 474.3086 363.624 475.2642 c
363.624 476.2095 363.8701 476.9746 364.3613 477.562 c
364.8525 478.147 365.542 478.4419 366.4336 478.4419 c
366.8711 478.4419 367.291 478.3457 367.6953 478.1533 c
368.0996 477.9624 368.4424 477.6348 368.7256 477.1748 c
369.0068 476.7144 369.1494 476.0078 369.1494 475.0562 C
369.1494 475.0562 L
f
1 D
368.1055 475.8921 m
368.0625 476.5005 367.874 476.9395 367.5371 477.209 c
367.2002 477.4771 366.832 477.6118 366.4336 477.6118 c
365.9561 477.6118 365.5635 477.4517 365.2549 477.1323 c
364.9463 476.8125 364.7676 476.3984 364.7197 475.8921 C
368.1055 475.8921 L
f
*U
0 D
373.5996 478.1201 m
373.251 477.1821 L
372.999 477.3306 372.7529 477.4038 372.5117 477.4038 c
372.1309 477.4038 371.8438 477.2324 371.6475 476.8936 c
371.4521 476.5527 371.3545 476.0752 371.3545 475.4624 c
371.3545 472.3193 L
370.3398 472.3193 L
370.3398 478.3052 L
371.2637 478.3052 L
371.2637 477.4038 L
371.2871 477.4038 L
371.6104 478.0952 372.0342 478.4419 372.5557 478.4419 c
372.9023 478.4419 373.251 478.334 373.5996 478.1201 C
f
*u
379.4238 475.0562 m
374.9365 475.0562 L
374.9785 474.3936 375.168 473.8872 375.5049 473.5386 c
375.8418 473.188 376.2617 473.0127 376.7656 473.0127 c
377.1533 473.0127 377.4785 473.1167 377.7422 473.3208 c
378.0049 473.5249 378.207 473.835 378.3457 474.2495 C
379.3896 474.1201 L
379.2197 473.4941 378.9092 473.0146 378.459 472.6816 c
378.0068 472.3462 377.4424 472.1787 376.7656 472.1787 c
375.8662 472.1787 375.1641 472.4546 374.6572 473.0049 c
374.1523 473.5557 373.8984 474.3086 373.8984 475.2642 c
373.8984 476.2095 374.1445 476.9746 374.6357 477.562 c
375.127 478.147 375.8164 478.4419 376.709 478.4419 c
377.1455 478.4419 377.5654 478.3457 377.9697 478.1533 c
378.374 477.9624 378.7168 477.6348 379 477.1748 c
379.2813 476.7144 379.4238 476.0078 379.4238 475.0562 C
379.4238 475.0562 L
f
1 D
378.3799 475.8921 m
378.3379 476.5005 378.1494 476.9395 377.8125 477.209 c
377.4746 477.4771 377.1074 477.6118 376.709 477.6118 c
376.2305 477.6118 375.8379 477.4517 375.5293 477.1323 c
375.2217 476.8125 375.043 476.3984 374.9941 475.8921 C
378.3799 475.8921 L
f
*U
0 D
382.0703 472.3193 m
382.0703 471.8418 381.9775 471.4756 381.7969 471.2256 c
381.6133 470.9731 381.3887 470.7939 381.1211 470.688 C
380.8447 471.1177 L
381.2666 471.2988 381.4785 471.6992 381.4824 472.3193 C
380.9121 472.3193 L
380.9121 473.4766 L
382.0703 473.4766 L
382.0703 472.3193 l
f
390.4092 476.6294 m
390.3633 476.957 390.2305 477.2036 390.0107 477.3672 c
389.791 477.5308 389.4854 477.6118 389.0938 477.6118 c
388.707 477.6118 388.3926 477.5464 388.1543 477.415 c
387.915 477.2827 387.7959 477.0918 387.7959 476.8398 c
387.7959 476.6025 387.8926 476.4331 388.0811 476.3311 c
388.2715 476.229 388.6475 476.1055 389.208 475.9595 c
389.8389 475.7974 390.3115 475.6533 390.627 475.5298 c
390.9414 475.4067 391.1855 475.2314 391.3584 475.0083 c
391.5342 474.7847 391.623 474.4727 391.623 474.0737 c
391.623 473.5405 391.4033 473.0898 390.9678 472.7261 c
390.5303 472.3599 389.9473 472.1787 389.2188 472.1787 c
388.458 472.1787 387.8652 472.3389 387.4375 472.6602 c
387.0117 472.9819 386.748 473.4653 386.6523 474.1089 C
387.6611 474.2607 L
387.7129 473.8428 387.8691 473.5308 388.127 473.3228 c
388.3828 473.1167 388.7432 473.0127 389.208 473.0127 c
389.6504 473.0127 389.9912 473.1074 390.2285 473.292 c
390.4648 473.479 390.585 473.7061 390.585 473.9717 c
390.585 474.1528 390.5293 474.2974 390.4209 474.4072 c
390.3115 474.5171 390.1738 474.5977 390.0107 474.6519 c
389.8467 474.7075 389.4795 474.8037 388.9072 474.9424 c
388.0576 475.1465 387.4971 475.3931 387.2236 475.6821 c
386.9502 475.9712 386.8154 476.3179 386.8154 476.7202 c
386.8154 477.2207 387.0137 477.6328 387.4131 477.9565 c
387.8115 478.2803 388.3467 478.4419 389.0205 478.4419 c
389.7354 478.4419 390.292 478.3013 390.6885 478.02 c
391.085 477.7412 391.3223 477.3228 391.4014 476.7666 C
390.4092 476.6294 L
f
*u
398.0381 472.3193 m
396.9707 472.3193 L
396.8721 472.5083 396.8027 472.7544 396.7627 473.0591 C
396.0811 472.4717 395.3447 472.1787 394.5557 472.1787 c
393.9238 472.1787 393.4258 472.3369 393.0605 472.6523 c
392.6953 472.9688 392.5146 473.3862 392.5146 473.9048 c
392.5146 474.4014 392.6895 474.8096 393.04 475.1309 c
393.3926 475.4531 394.0029 475.6665 394.8711 475.7725 c
395.8193 475.9131 l
396.1738 475.9712 396.4639 476.04 396.6934 476.123 C
396.6934 476.4272 396.6855 476.6431 396.666 476.7686 c
396.6475 476.8936 396.5908 477.0244 396.499 477.1611 c
396.4063 477.2959 396.2598 477.4058 396.0557 477.4888 c
395.8535 477.5713 395.5801 477.6118 395.2393 477.6118 c
394.8018 477.6118 394.457 477.5308 394.2031 477.3691 c
393.9492 477.2075 393.7754 476.9072 393.6816 476.4658 C
392.6875 476.5967 L
392.7979 477.209 393.0762 477.6694 393.5293 477.9775 c
393.9795 478.2876 394.6016 478.4419 395.3916 478.4419 c
396.1104 478.4419 396.6377 478.3359 396.9727 478.1221 c
397.3096 477.9102 397.5176 477.6543 397.5947 477.3516 c
397.6719 477.0513 397.71 476.6646 397.71 476.1904 c
397.71 474.8252 l
397.71 473.9932 397.7256 473.4365 397.7578 473.1514 c
397.7891 472.8682 397.8838 472.5908 398.0381 472.3193 C
398.0381 472.3193 L
f
1 D
396.6934 474.9541 m
396.6934 475.3218 L
396.1641 475.1445 395.5146 475.0039 394.748 474.8999 c
393.9795 474.7979 393.5967 474.4727 393.5967 473.9277 c
393.5967 473.6523 393.7002 473.4268 393.9063 473.248 c
394.1143 473.0684 394.4111 472.98 394.7988 472.98 c
395.2988 472.98 395.7402 473.1284 396.1211 473.4287 c
396.5029 473.7275 396.6934 474.2358 396.6934 474.9541 c
f
*U
0 D
407.3857 472.3193 m
406.3711 472.3193 L
406.3711 476.1001 l
406.3711 476.377 406.3516 476.6162 406.3154 476.8145 c
406.2764 477.0112 406.1807 477.186 406.0244 477.3384 c
405.8682 477.4902 405.624 477.5674 405.293 477.5674 c
404.8936 477.5674 404.5508 477.4268 404.2598 477.1499 c
403.9717 476.8706 403.8271 476.4199 403.8271 475.7954 c
403.8271 472.3193 L
402.8096 472.3193 L
402.8096 476.2119 l
402.8096 476.7314 402.7197 477.0879 402.5371 477.2788 c
402.3535 477.4712 402.0957 477.5674 401.7607 477.5674 c
401.3252 477.5674 400.9668 477.415 400.6855 477.1147 c
400.4063 476.8145 400.2656 476.252 400.2656 475.4277 c
400.2656 472.3193 L
399.251 472.3193 L
399.251 478.3052 L
400.1641 478.3052 L
400.1641 477.4712 L
400.1875 477.4712 L
400.5938 478.1182 401.1885 478.4419 401.9756 478.4419 c
402.415 478.4419 402.7773 478.3535 403.0625 478.1782 c
403.3457 478.0044 403.5518 477.7412 403.6787 477.3921 C
404.123 478.0913 404.7383 478.4419 405.5234 478.4419 c
406.1455 478.4419 406.6094 478.2744 406.9219 477.939 c
407.2324 477.604 407.3857 477.1016 407.3857 476.4331 c
407.3857 472.3193 L
f
*u
409.8564 477.5327 m
410.2383 478.1377 410.8086 478.4419 411.5674 478.4419 c
412.3525 478.4419 412.9746 478.1567 413.4297 477.5869 c
413.8838 477.0166 414.1113 476.2754 414.1113 475.3604 c
414.1113 474.3857 413.8604 473.6118 413.3564 473.0396 c
412.8516 472.4658 412.2334 472.1787 411.5 472.1787 c
410.8564 472.1787 410.3398 472.4351 409.9531 472.9453 C
409.9268 472.9453 L
409.9268 470.0181 L
408.9092 470.0181 L
408.9092 478.3052 L
409.8359 478.3052 L
409.8359 477.5327 L
409.8564 477.5327 L
409.8564 477.5327 L
f
1 D
411.4326 473.0127 m
411.9063 473.0127 412.2988 473.209 412.6094 473.604 c
412.9189 473.9971 413.0732 474.582 413.0732 475.3604 c
413.0732 476.0942 412.9248 476.6582 412.624 477.0532 c
412.3262 477.4482 411.9424 477.6465 411.4766 477.6465 c
410.9951 477.6465 410.6006 477.4248 410.29 476.9858 c
409.9785 476.5449 409.8242 475.9746 409.8242 475.2759 c
409.8242 474.5342 409.9727 473.9717 410.2686 473.5884 c
410.5674 473.2051 410.9551 473.0127 411.4326 473.0127 c
f
*U
0 D
416.3418 472.3193 m
415.3242 472.3193 L
415.3242 480.5913 L
416.3418 480.5913 L
416.3418 472.3193 L
f
*u
423.0957 475.0562 m
418.6084 475.0562 L
418.6504 474.3936 418.8389 473.8872 419.1768 473.5386 c
419.5137 473.188 419.9336 473.0127 420.4375 473.0127 c
420.8252 473.0127 421.1504 473.1167 421.4141 473.3208 c
421.6758 473.5249 421.8779 473.835 422.0176 474.2495 C
423.0605 474.1201 L
422.8916 473.4941 422.5811 473.0146 422.1309 472.6816 c
421.6777 472.3462 421.1143 472.1787 420.4375 472.1787 c
419.5381 472.1787 418.8359 472.4546 418.3291 473.0049 c
417.8242 473.5557 417.5703 474.3086 417.5703 475.2642 c
417.5703 476.2095 417.8164 476.9746 418.3076 477.562 c
418.7988 478.147 419.4883 478.4419 420.3799 478.4419 c
420.8174 478.4419 421.2373 478.3457 421.6416 478.1533 c
422.0459 477.9624 422.3887 477.6348 422.6719 477.1748 c
422.9531 476.7144 423.0957 476.0078 423.0957 475.0562 C
423.0957 475.0562 L
f
1 D
422.0518 475.8921 m
422.0098 476.5005 421.8203 476.9395 421.4834 477.209 c
421.1465 477.4771 420.7783 477.6118 420.3799 477.6118 c
419.9023 477.6118 419.5098 477.4517 419.2012 477.1323 c
418.8936 476.8125 418.7139 476.3984 418.666 475.8921 C
422.0518 475.8921 L
f
*U
0 D
429.8652 472.3311 m
429.5645 472.271 429.3105 472.2402 429.1045 472.2402 c
428.6602 472.2402 428.3359 472.3193 428.1338 472.4751 c
427.9297 472.6313 427.8066 472.8296 427.7598 473.0708 c
427.7158 473.3115 427.6924 473.6445 427.6924 474.0737 c
427.6924 477.5215 L
426.9551 477.5215 L
426.9551 478.3052 L
427.6924 478.3052 L
427.6924 479.7959 L
428.71 480.4102 L
428.71 478.3052 L
429.7246 478.3052 L
429.7246 477.5215 L
428.71 477.5215 L
428.71 474.0181 l
428.71 473.7178 428.7402 473.5039 428.8018 473.377 c
428.8633 473.2515 429.0215 473.188 429.2734 473.188 c
429.4199 473.188 429.5703 473.2036 429.7246 473.2344 C
429.8652 472.3311 L
f
*u
435.9434 475.0562 m
431.4561 475.0562 L
431.498 474.3936 431.6875 473.8872 432.0244 473.5386 c
432.3613 473.188 432.7813 473.0127 433.2852 473.0127 c
433.6729 473.0127 433.998 473.1167 434.2617 473.3208 c
434.5244 473.5249 434.7266 473.835 434.8652 474.2495 C
435.9082 474.1201 L
435.7393 473.4941 435.4287 473.0146 434.9785 472.6816 c
434.5264 472.3462 433.9619 472.1787 433.2852 472.1787 c
432.3857 472.1787 431.6836 472.4546 431.1768 473.0049 c
430.6719 473.5557 430.418 474.3086 430.418 475.2642 c
430.418 476.2095 430.6641 476.9746 431.1553 477.562 c
431.6465 478.147 432.3359 478.4419 433.2275 478.4419 c
433.665 478.4419 434.085 478.3457 434.4893 478.1533 c
434.8936 477.9624 435.2363 477.6348 435.5195 477.1748 c
435.8008 476.7144 435.9434 476.0078 435.9434 475.0562 C
435.9434 475.0562 L
f
1 D
434.8994 475.8921 m
434.8574 476.5005 434.6689 476.9395 434.3311 477.209 c
433.9941 477.4771 433.627 477.6118 433.2275 477.6118 c
432.75 477.6118 432.3574 477.4517 432.0488 477.1323 c
431.7412 476.8125 431.5615 476.3984 431.5137 475.8921 C
434.8994 475.8921 L
f
*U
0 D
442.0928 472.3193 m
440.8408 472.3193 L
439.2832 474.6885 L
437.709 472.3193 L
436.4727 472.3193 L
438.6689 475.4395 L
436.6484 478.3052 L
437.9053 478.3052 L
438.7266 477.0684 439.1729 476.377 439.248 476.2349 C
440.7158 478.3052 L
441.9287 478.3052 L
439.8584 475.4956 L
442.0928 472.3193 L
f
445.2803 472.3311 m
444.9795 472.271 444.7256 472.2402 444.5195 472.2402 c
444.0742 472.2402 443.751 472.3193 443.5488 472.4751 c
443.3447 472.6313 443.2207 472.8296 443.1748 473.0708 c
443.1309 473.3115 443.1074 473.6445 443.1074 474.0737 c
443.1074 477.5215 L
442.3701 477.5215 L
442.3701 478.3052 L
443.1074 478.3052 L
443.1074 479.7959 L
444.124 480.4102 L
444.124 478.3052 L
445.1396 478.3052 L
445.1396 477.5215 L
444.124 477.5215 L
444.124 474.0181 l
444.124 473.7178 444.1553 473.5039 444.2168 473.377 c
444.2783 473.2515 444.4365 473.188 444.6885 473.188 c
444.835 473.188 444.9854 473.2036 445.1396 473.2344 C
445.2803 472.3311 L
f
454.2568 472.3193 m
453.2363 472.3193 L
453.2363 476.1001 l
453.2363 476.5894 453.1299 476.9551 452.9199 477.1997 c
452.71 477.4443 452.3965 477.5674 451.9785 477.5674 c
451.5645 477.5674 451.1943 477.4233 450.8691 477.1343 c
450.543 476.8472 450.3818 476.333 450.3818 475.5913 c
450.3818 472.3193 L
449.3652 472.3193 L
449.3652 480.5913 L
450.3818 480.5913 L
450.3818 477.623 L
450.8633 478.1685 451.4639 478.4419 452.1865 478.4419 c
452.5732 478.4419 452.9453 478.3628 453.2979 478.2051 c
453.6523 478.0469 453.9004 477.8047 454.043 477.4771 c
454.1855 477.1499 454.2568 476.6934 454.2568 476.1118 c
454.2568 472.3193 L
f
*u
460.9951 475.0562 m
456.5078 475.0562 L
456.5508 474.3936 456.7393 473.8872 457.0762 473.5386 c
457.4131 473.188 457.833 473.0127 458.3379 473.0127 c
458.7246 473.0127 459.0498 473.1167 459.3145 473.3208 c
459.5762 473.5249 459.7783 473.835 459.917 474.2495 C
460.9609 474.1201 L
460.791 473.4941 460.4814 473.0146 460.0303 472.6816 c
459.5781 472.3462 459.0137 472.1787 458.3379 472.1787 c
457.4385 472.1787 456.7354 472.4546 456.2285 473.0049 c
455.7246 473.5557 455.4697 474.3086 455.4697 475.2642 c
455.4697 476.2095 455.7158 476.9746 456.208 477.562 c
456.6992 478.147 457.3887 478.4419 458.2803 478.4419 c
458.7168 478.4419 459.1367 478.3457 459.541 478.1533 c
459.9453 477.9624 460.2891 477.6348 460.5723 477.1748 c
460.8525 476.7144 460.9951 476.0078 460.9951 475.0562 C
460.9951 475.0562 L
f
1 D
459.9512 475.8921 m
459.9092 476.5005 459.7207 476.9395 459.3838 477.209 c
459.0469 477.4771 458.6787 477.6118 458.2803 477.6118 c
457.8027 477.6118 457.4092 477.4517 457.1016 477.1323 c
456.793 476.8125 456.6143 476.3984 456.5654 475.8921 C
459.9512 475.8921 L
f
*U
0 D
465.4463 478.1201 m
465.0977 477.1821 L
464.8457 477.3306 464.5986 477.4038 464.3584 477.4038 c
463.9766 477.4038 463.6895 477.2324 463.4932 476.8936 c
463.2988 476.5527 463.2002 476.0752 463.2002 475.4624 c
463.2002 472.3193 L
462.1855 472.3193 L
462.1855 478.3052 L
463.1104 478.3052 L
463.1104 477.4038 L
463.1328 477.4038 L
463.457 478.0952 463.8809 478.4419 464.4023 478.4419 c
464.749 478.4419 465.0977 478.334 465.4463 478.1201 C
f
*u
471.2695 475.0562 m
466.7832 475.0562 L
466.8252 474.3936 467.0137 473.8872 467.3506 473.5386 c
467.6875 473.188 468.1074 473.0127 468.6123 473.0127 c
468.999 473.0127 469.3252 473.1167 469.5889 473.3208 c
469.8506 473.5249 470.0527 473.835 470.1914 474.2495 C
471.2354 474.1201 L
471.0664 473.4941 470.7559 473.0146 470.3047 472.6816 c
469.8525 472.3462 469.2881 472.1787 468.6123 472.1787 c
467.7129 472.1787 467.0098 472.4546 466.5039 473.0049 c
465.999 473.5557 465.7451 474.3086 465.7451 475.2642 c
465.7451 476.2095 465.9912 476.9746 466.4824 477.562 c
466.9736 478.147 467.6631 478.4419 468.5547 478.4419 c
468.9922 478.4419 469.4121 478.3457 469.8164 478.1533 c
470.2207 477.9624 470.5635 477.6348 470.8467 477.1748 c
471.1279 476.7144 471.2695 476.0078 471.2695 475.0562 C
471.2695 475.0562 L
f
1 D
470.2266 475.8921 m
470.1836 476.5005 469.9951 476.9395 469.6582 477.209 c
469.3213 477.4771 468.9531 477.6118 468.5547 477.6118 c
468.0771 477.6118 467.6846 477.4517 467.376 477.1323 c
467.0674 476.8125 466.8887 476.3984 466.8408 475.8921 C
470.2266 475.8921 L
f
*U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
