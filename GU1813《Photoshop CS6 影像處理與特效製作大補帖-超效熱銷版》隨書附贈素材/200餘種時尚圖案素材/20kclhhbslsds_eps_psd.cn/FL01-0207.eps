%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 12.0.0
%%For: (\737\755\740) ()
%%Title: (vector ornament with strawberry.eps)
%%CreationDate: 10/18/2007 9:19 PM
%%BoundingBox: -14 156 626 636
%%HiResBoundingBox: -14 156 626 636
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKCustomColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 306.5 395.5 306.5 395.5
%AI3_TileBox: -114.9751 98.4377 726.9449 693.6377
%AI3_DocumentPreview: Header
%AI5_ArtSize: 640 480
%AI5_RulerUnits: 2
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 2
%AI8_OpenToView: -695 1041 0.5 1020 661 18 0 1 2 75 0 0
%AI5_OpenViewLayers: 77
%%PageOrigin:-14 -156
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.6
%AI7_Thumbnail: 128 96 8
%%BeginData: 9967 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD63FFAEAFFD
%7FFFA8AFFD7DFFAEFFAEFD6EFF8281AEC9BAC8FFCECAFD05FFA8A8A8AFA8
%AE84FD6BFFCF5CADC1BA98A7C0C7FD06FFA8AEA8AE84AEFFFFAEFD08FFCB
%CBFFFFFFC4CBCAFD56FF575D82ADA8A6BAC8C9C09FA7CAFFFFFF83AE83A8
%84AE83A883AEFD06FFCAC4C4C4CAFFC4C4A2C4CAFD55FF88335DA7AF83AC
%81ACCFFFA4CEFFFFFFAE84AE598384AE838AAEFD07FFC4CBC4CBFFCBC4CB
%C4FD56FFA8AD578383AD818156ADFFC983FFFFFFA88A8384343483835F8A
%A8AEFD04FFCAC4A2C4C4CA9BC4C4C4CAFFCBCBCAC9C8CEFD51FF83AEFFFF
%ADADFFFFCECDFD04FFA88A83840C5F83845F84FFFFCBFFFFFF9B9CA2C49B
%9C9CCAC4FFCBCAC4C2C0C0C0CEFD51FF83CAA8FFFFAFAFA7A6FFFFFF8484
%5F835F340B837D5F5FFFC4C4A2CBFF9C9B9C9B9B77C4C4C4A2C4C4C1BAC0
%C7C8C8FD50FFA8A8C4CBCBFF848484FD05FF838383A259345FA25984CBCA
%C4C49CCAA29C9B9C779C9BC49BBEC4C8BAC0C7FD52FFCAC4A2C4A2CAA2FF
%A8CFA7FFCACBC4CBA88359A12E347D7D34A8C4C49B9C9B9C779B7171719B
%719B9BC4C0C0BACEFD52FFCAC4C495BEA2CBFFCFCFAECFC4A2CBBDAE835F
%7DA234597D5F59FFC49C9BA29B9C9AC39A7C7B8181829FC0C0C0C9FD52FF
%A8C49BB795C4A2CAAEFFA8CBA2CBCABE7D5F595F597D34593434A8FFA2A2
%A1A299BA98C6808180815C80BAC0C0C7FD52FFCBC4C4BDC4C4FFFFCFFFFF
%CBC4CBCBB7CAFFFF835F5F5F343534AECAC4A2C4A0C18CFCB4C7AEFFCFFF
%ADC7C0C6C0CDFD4BFFA2BE9BCAFFFFCACBA2C4A2A2A2FFCFCFAECF9BBD95
%BEA8A883848484345F59A8A29C9BCBA2C3BAFC8CBAC8C8C0C1C1CFC7C6C0
%C6C0CDFD4AFF958E8E8E9BCAFFFFCBCACBAFAE83AEAEAEA8FFA2A17D8484
%FFFFFFAEFF82A7C4CA9BA2A8CBA1C7BABAC0C1BAFD04C0C7C0FD04C6CEFD
%49FF9B8E6A8E8E8E9BFFFFFFA8A8A7AEA8AE83A8595F34A8CAFFFFFFA782
%8182A0C4C4C49BC4A2A97BA4A6C9BAC098C0C0C6C0C0C0C6C6FEC6FD47FF
%CBC4BD8E8F8E8E9ABCC3FFFFCF7C837CCFCFFF84AF83A2A2FFCFAD82ACFD
%05A7CAC4CB9BCBCBA681FFC8C0BABABAC0C6C6BAC0C6C6C6CCCFFD44FFCA
%948D8E94BC8E8E8E9493BBA7FFFFA77C7C7C8383FF83A89BA2A8CF8282A7
%A77D5858A681CFCA9C9BA27B81AEC9BAC098BA98C0C6C0BAFEC6C6C6FD45
%FFC48EBD94BCBCB68EB694BC513483FFFFCF8383A8FFAEAEFFC4A1AD82AD
%A65E0B3458A7A7FFCFCBA2C4C4A75CADFFC7C0C6BABA98C0FEFD04C6CDFD
%41FFA884345984C49A948D948E8E8DB693580C83A8AE8383A8FF595983FF
%CACF82AD8258335E7DCA81ADFFCBC4C4A2CAA0A47ACFC7C0C0C69EBA92BA
%C6FEC6CCCACBA8AEA8AEFD3BFFC9CEA7CF5F355FA89B8E8E948EB694B699
%A8AFFFAEAECAC399581283FFFFADADA78958ADA6CA8288A7FFA8C4C4C9FD
%05C0C7C0C6C0C6C6BA8CBAC6CEC4BDA1CAFFFF84FD38FFCFCEA5A59EA49E
%C8825E57768E8E94BD8DB193C9FFFFAEA8A1BC99B5757C93CAA8ADA7AD82
%AD82A782ACA7837CA6A2C1BAC0BAFD04C0C6C0BABAC0C0B498C0CA95A1FF
%A2FFFFFF84FD37FFCFA7FFFFFFA7C89EA5A5A69BFD048E949BFD04FFAE9B
%8E8EBC94B693B5BCFFA7AEADADA6ADA6ACA6AE59A558A6BAC0C0C8C8C7C0
%FD06C6FEC0C0BAC18EBDFFBDA8AEA8AEFD3CFF843434345F5EFFCAA1A1CB
%FD05FF849B8E8E8E8D9493B68DB6CAADA7ADA7AD82ADA7CF59589E5F74BA
%C0CFFFFFFFCFC0C6C0FD04C6CEA0C098C3698E9BFF83A8AEFD3BFFAE83FF
%A8AEAEADA6CFA6ADFFCFAEFFFFAEA7B78E8E8EB68EB68EB694CFADCFADAD
%AEADFFFFFF5F7BA5839FC0CFFD06FFC8CCC6C6C6CDFFCFA5A683AECAAEAE
%FD41FFADA7AD82AC828281A68282A7ADA7C46A8E8E8E8DB68E949A94A8AD
%AECFAEFFA8FFFF8459C89EAE57C7FD08FFCAC2C2CFFFFF8081818383FFA7
%AEA7FD3CFFAEFFAECFA7ADA7ADA6A7A1A17CA682825DFFCBBD9BBD9AC2FD
%048E94FD09FF83FFA6A4A85FC9FD07FFCACABEBECBFFCAA1A0FFFFA8AECF
%A7ADA8FFAEFD38FFCFAEA8CFA7ADA7AD825E58827CA158585782FD04FF9A
%94948E6A8E6A9BFD08FFAEFFFFA69EA8A8FD05FFFD04CAA2FF95A8A8C49B
%B79BFFA8ADA7AD83A783ADFD3AFFCFADCFADAD583434341234335E7C8282
%FD04FFB794BD94C48E95CBFD0BFFA5CDFD07FFCBC4C4A2CBC4C4CACACAFF
%9CB7FFFF83ADA7AD83AD83FD3AFFA7ADA7AE828382A67C7D777D7C825D84
%CAFFFFFF948E94CAFFCBCAFD0BFFA7A5CFFD07FFC4FFC4CBA77C82AEA2CB
%CBBE94AEFFAE82AD838382ADA7ADFD39FFAEADA7ADA6ADA6A7A0A7828282
%AEA2C4CAFFFFC494C2ACA7C7FD0CFFCDCFFD08FFA8C4CBFFAE3382ADCB9B
%BE95C482ADAEAD82898389828983FD3AFFA8AEA7AE82A682825DAD82AEA2
%C49BC4A8FFFFAE81CDC9A582CFFD09FFCFA8FD08FFA8A8FD04FFCF56A6FF
%CBA2CBFFFF82838283585E82825EAEFD3DFFCFADADFFA7ADFFAEFFCBBDBE
%C4FFFFFF83FD04FFC6C0CFFD11FFCBC4CBFD04FFAD8181CFAEFD04FFCF82
%89828934838289AEFD38FFCAFD05FFA8AFAFCFCFAFA8FFA2C4A2CACAFFFF
%AE84FF82ADC0C7CFFD11FFCACBC4FD04FFCFA6CFAEADFFFFFFAEA7838282
%8234348282AD83FD36FFC4C4BDCBFFFF84AE848A84FF83FFFFFFCACAFFFF
%A2CBA2CBCF8181CFA0CFFD12FFA8FD05FFAECFAECFCFFFFFFF8382828382
%82345E82825DAEFD32FFCBA2C4C4C49BBE9BC47DFFA8AEA883598383AFFF
%FF83A8A2A29BA2A8CB81819FBABAFD11FFA87EA8FFFFFF83A8A8FFAEFD05
%FF828258A75E1234A75782FD32FFCBBEC4BEC4C4C4BEBDB6BDA1AFA8AFA8
%5F5FAE83FFFFFF7DA29BBD9BA2A2CF82C8BAC1CFFD10FFCB77A8FFFFA8FF
%FFAEAFFD07FF8282A7830B83A782A7FD2CFFA8CFA7FFFFFFC4C49BC4BDBD
%94BDBDBD94BDA1CAA8FF84FF83AE84FFA8A29B958E959BC4A8AD83C9C9FD
%12FFA87DCBFD04FF83FD07FFA78357A75812A1A75782A7FD2AFFCFCFAECF
%AEFFFFCAC3C4BDBDB6BDB6C4BDBDB6BEB7BE84CBC4A8A8AEAFFFA2A29595
%95A27D8484FF8282AEFD12FFCB7DFFFFFF84AFFD06FFAEAD825EA15F34CA
%5E5E83FD2BFFCFCFCFA7CFA7AEA2C49BBD94BD94BD94C4C3BE95BD95BD95
%B795A8A1C4C4A2A2A295A29BA8838282AD5CADFD14FF83AE83AEFD04FFA8
%FD05FF838258597C5D82FD2CFFAEFFFFFFCFAC82CFCABDBDC4BCBDB6BD9B
%BEBEC4B7BEB7BEB7BEBDC4BEC4CBCBA2C4A2CBCBFF5D5D83FD1EFFAE83AE
%FFAF84FFA7A759835DAEA7FD2BFFCFA7FFA2BD94A7A7C3B6BDC3C3B6BD95
%9595BDA1C4BDC49BBDBDBE9BC4CAFFA8CBA8CAFFFFFF833282FD1AFF83AE
%83AE84835F84835F8383575E585D57AEFD2CFFCFA7C4CBC494CFBDBDB6BD
%BDC3BDBD95BD95BD9BBE95C4C3C4BEC4BDC4CAFD08FFAD83FD17FFAEAFAE
%AE83AE838483845F5F355F8383575E57ADFD2FFFA1FFA28ECAC39ABD94B7
%94BE9BFD0895BD9BC49BC495BDBDFD20FFAF84AE84845F8483837DA27D83
%345F83AE575EAEFD22FFAEFD0CFFC49B949BFFC4C4BDBD95BD95CA9BB795
%BD95BE95B7BDC4BEC4C4BEB7BECAFD1FFFAEFFAEAEA8833483838359A19B
%A2595F848983FFAEFD1FFFA87DFD0EFFA17DFFFFFFC4C39B9B95959BBE9B
%BD959B95BD95BEA2C4C4C495BDBDC4FD1DFFAEA8AFA8AEA8AE835F12340B
%340C34347D583483CF825D83FD1EFF7EFD0CFFAEA8FFFF8483FFAEFFBDC4
%95B795B795BDB6BD9BBEA1C4BDBDBDC4BDBDBDC4CAFD1FFFAEFFA8AEA8AE
%8384595F345F34341259348383CFFD1EFFCBA2FD0BFFA8FFA8835983835F
%5F83A2BE9BC49B9595BD9ABD94BD95BD94BD94B794BD95BD9BFD23FF8384
%838483847D837DA17D592E353483A8AD82ADFD1BFFA8FD0BFFA8AE84AE83
%847D8359833584C4C4BEBE9BBEBDC4B6BDBDBDB6BDBDBDB6C3CACBA2FD23
%FFFD04AE848A83847DA27D5F595F343583AD5D5D82FD1BFFCAA2CBFD08FF
%A88483AE83845FA877A1777D597DA1CAC4BE95BDBDC3BCBDBDBD9BBDBCBD
%9BFFA6A683AFFD22FFAFFFFFAE5F835F5F345F5F5F345F345F83FFA7ADAE
%FD1AFFC4CBC4FFFFFFCFFFFFFFA8AEAEAE5F835F5FFD053459345FA8CBBD
%BDB7BEC4C4BDC4BDC4BDCAC3FF84AECFFF82CEFD24FF84AEA8FF5F5F838A
%5F8383FF83FF5E34333483FD19FFC49BCAFFCFA7AEA7FFAFAE84AE848434
%340C34345F597D3459125FA8C49BB795FFA0BD9BC4A1A8A8FFA7A8A8FFA7
%C7C0FD23FFCFA9A2A28383A8FF83A894947D845E5E33330B58FD19FFCAC4
%C4FFAEFFAECFFFFFAEFFAEAEA8AE83845F847DA2595F343534AEA8C4C4FF
%83A67DCBCAFF83FFFFCFAEFFA681A6CEFD23FFCBA29C77A2CBFFADFF9BCA
%95B75FAEFFFF835E83FD18FFCBC4CAC4A2C9C8CFAEFFA8AFA8AE84AE838A
%83837D7D595F595F84A858ADFFFF8483A534A8FFFFA87CC4A8CFFFAD5CC7
%BAC9FD22FF7D9CB7B777A8A8CFCBC4CAC47083AEFD1CFFCFCFBDBEBDCBC1
%C1FD04FFA2FFA8AE84AE848A83835F83AEAEAEFF828281FFFF8458C75934
%FFFFC4948E94FFFFCFAD9FBAC8FD21FFCBA29BB7B79C7EFFCFCFA7C49BCA
%83AD5EFD1AFFA7A49ECA9BA2CACBA7CFCBCAFD04A284FFFFAE5FAEA884A8
%FFFFAD5D82588181FF83587ACE345FFFBD9BFF94A2A8A883A8A6FD23FFA2
%78719C77A28483A8CFA8FFA8AECFAECFFD1AFFC9CFA6CFA2CAC4CBAECFA2
%C4A2A2A2C4A8AE84FF835F84FFFFAEA8AD828381CECFFF34A5A5FF34FFCA
%C4A2C4A8AF83AFA781ADFD22FFCB7DA27ECBFFFFA7CDFFFFFFAEAFFD1EFF
%8281A8C4CBCB95FFA2A29BBE9BA29BFF5F5FA8830B5883AEAFAEA6597D82
%82FFA85FA7A4A684AFFFCACACFAE84AE3484A7CFFD22FFA7837DCF82A6AE
%CFA6FFFFFFAEFD1FFFAC81FF95CABEBDCBCBA2A2B7B79BA2A2AE5F84A8A8
%83AFAEAD81A734A7A782A6AE84FF9EC8AFFFAEFFCFFF845FA8845FFD22FF
%CF575DA7A8828181FFC8C8FD23FFA7FFFFC494B77DAEA8A29BBD95A2A2CB
%A8A877787DFFFFCF8282A15833CA82AEA8FFFFA69EFFA8AEFFCFAE5F3484
%AEAEAFFD21FF835D82ADA7C19FC8C0A6A8FD2AFFAECBA2A29CC4A2A2A8A8
%77A277A2A2CBFFAD82C95834A7ADA6FFFFFFA6CDFFFFAEFFCFFF5F5FAEFD
%26FFCF81C9BAC1A6C6C9FD2AFF838384FF9CA29BA9A8A877A29FC0767EA8
%AD81ADA6820B838282A7FFFFC9A7FFFFFFAEFFFFAE83FD27FFA7ADFFC9C9
%FD2BFFCEA6A7835959A883A1C9FFCBA277C6C0C277A2ADAD82AD825882AD
%ADCFFFFFC9FD5EFFA7C8A5A59EA5A58157A5C1C0C1CF777899C176A2A8FF
%A7A6828358AD82ADFFFFCFFD63FFAE58817CAEC7C0B4C0C1A8A2A278A27E
%FFCFADA7AD83ADA7ADA6FD65FFAE83848484A6C6928C92C6A5A2A2A2A8FF
%FFCFAEAD83ADA7ADA7AECFFD68FFA8CFC0C092C0C1AC81ADA8CFADFFFFFF
%A7ADA7AEA7CFFD69FFA8AEA7A69EC0C2C8838156ADA8CFA8FFA8ADA7AEA7
%ADA7FD6AFFA8AE84CEC8CE5EADAECFCFFFCFCFFFFFFFCFA7CFFD6DFFA8FF
%FFFF333382ADC8CFA8AEFD04FFA7AEFD71FFCF8283AC82C8C9CFFD7BFFA6
%CFFDFCFFFDFCFFFDFCFFFDFCFFFD6FFFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps true put
userdict /_forceToCMYK true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRider
currentpacking true setpacking
setpacking
%AI3_EndRider
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\312\340\353\353\350\343\360\340\364\350\367\345\361\352\340\377 \352\350\361\362\374") (\310\355\361\362\360\363\354\345\355\362 \312\340\353\350\343\360\340\364 \352\350\361\362\374.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (\317\356\361\362\360\356\367\355\373\351 \352\356\354\357\356\355\356\342\371\350\352 Adobe) (\310\355\361\362\360\363\354\345\355\362 \312\350\361\362\374 \360\340\361\361\345\350\342\340\355\350\377.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (\317\356\361\362\360\356\367\355\373\351 \352\356\354\357\356\355\356\342\371\350\352 Adobe) (\310\355\361\362\360\363\354\345\355\362 \312\350\361\362\374 \360\340\361\361\345\350\342\340\355\350\377.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\301\356\360\344\376\360\355\340\377 \352\350\361\362\374") (\310\355\361\362\360\363\354\345\355\362 \325\363\344\356\346 \352\350\361\362\374.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\301\356\360\344\376\360\355\340\377 \352\350\361\362\374") (\310\355\361\362\360\363\354\345\355\362 \325\363\344\356\346 \352\350\361\362\374.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\325\363\344\356\346\345\361\362\342\345\355\355\340\377 \352\350\361\362\374") (\310\355\361\362\360\363\354\345\355\362 \325\363\344\356\346 \352\350\361\362\374.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\325\363\344\356\346\345\361\362\342\345\355\355\340\377 \352\350\361\362\374") (\310\355\361\362\360\363\354\345\355\362 \325\363\344\356\346 \352\350\361\362\374.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\317\345\360\345\365\356\344") (\306\350\342\373\345 \355\340\353\356\346\345\355\350\377.aip)
%AI8_PluginGroupInfo
(Adobe Tracing Object) (\322\360\340\361\361\350\360\356\342\352\340) (\317\340\352\345\362 \362\360\340\361\361\350\360\356\342\356\352.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (\321\356\361\362\340\342\355\373\345 \364\350\343\363\360\373 Adobe) (\316\341\360\340\341\356\362\352\340 \352\356\355\362\363\360\356\342S.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe Envelope) (\316\341\356\353\356\367\352\340 \350 \344\345\364\356\360\354\340\366\350\377.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\301\373\361\362\360\340\377 \347\340\353\350\342\352\340") (\306\350\342\373\345 \352\360\340\361\352\350.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (\310\355\361\362\360\363\354\345\355\362\340\360\350\351 Adobe \357\356 \360\340\341\356\362\345 \361 \361\350\354\342\356\353\340\354\350) (\321\350\361\362\345\354\340 \367\340\361\362\350\366.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (\301\353\350\352.aip)
%AI5_End_NonPrinting--
7 Bn
%AI5_BeginGradient: (Unnamed gradient)
(Unnamed gradient) 0 2 Bd
[
<
000101020203030404050506060707080809090A0A0B0B0C0C0D0D0E0E0F0F101011111212121313
141415151616171717181819191A1A1A1B1B1C1C1D1D1D1E1E1F1F1F202021212122222323232424
24252526262627272728282829292A2A2A2B2B2B2C2C2C2D2D2D2E2E2E2F2F2F3030303031313132
3232333333343434343535353636363637373738383838393939393A3A3A3A3B3B3B3B3C3C3C3C3D
3D3D3D3E3E3E3E3F3F3F3F3F40404040404141414142424242424343434343444444444444454545
4545464646464646474747474747484848484848494949494949494A4A4A4A4A4A4A4B4B4B4B4B4B
4B4C4C4C4C4C4C4C4C4D4D4D4D4D4D4D4D4D4E4E4E4E4E4E4E4E4E4E4F4F4F4F4F4F4F4F4F4F5050
50505050505050505050505151515151515151515151515151525252525252525252525252525252
52525253535353535353535353535353535353535353535353535353535454545454545454545454
54545454545454545454545454545454545454545454545454545454545454545454545454545454
54545454545454545454545454545454545454545454545454545454545454545454
>
<
0001020405060708090A0C0D0E0F1011121314161718191A1B1C1D1E1F202122232425262728292A
2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F40414243444546464748494A4B4C4C4D4E4F
505151525354555556575858595A5B5C5C5D5E5F5F60616262636464656667676869696A6B6B6C6D
6D6E6F6F707171727373747475767677787879797A7B7B7C7C7D7D7E7F7F80808181828283838485
8586868787888889898A8A8B8B8C8C8D8D8D8E8E8F8F909091919292929393949495959596969797
9798989999999A9A9A9B9B9C9C9C9D9D9D9E9E9E9F9F9FA0A0A0A1A1A1A2A2A2A2A3A3A3A4A4A4A5
A5A5A5A6A6A6A6A7A7A7A8A8A8A8A9A9A9A9AAAAAAAAAAABABABABACACACACACADADADADADAEAEAE
AEAEAFAFAFAFAFAFB0B0B0B0B0B0B1B1B1B1B1B1B2B2B2B2B2B2B2B3B3B3B3B3B3B3B3B4B4B4B4B4
B4B4B4B4B5B5B5B5B5B5B5B5B5B5B5B6B6B6B6B6B6B6B6B6B6B6B6B6B7B7B7B7B7B7B7B7B7B7B7B7
B7B7B7B7B7B7B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8
B8B8B8B8B8B8B8B8B8B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9
>
0
0
1 %_Br
[
0.3311 0.7238 0 0 1 50 100 %_BS
%_0.3311 0.7238 0 0 1 50 100 Bs
1 0 22.1591 0 %_BS
%_1 0 22.1591 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 1)
(Unnamed gradient 1) 0 2 Bd
[
<
000102020304050506070808090A0A0B0C0D0D0E0F1010111212131415151617171819191A1B1C1C
1D1E1E1F2020212222232424252626272828292A2A2B2C2C2D2E2E2F303031313233333435353636
37383839393A3B3B3C3C3D3E3E3F3F40414142424344444545464647484849494A4A4B4B4C4D4D4E
4E4F4F505051515252535454555556565757585859595A5A5B5B5C5C5D5D5E5E5F5F606061616162
626363646465656666676767686869696A6A6A6B6B6C6C6D6D6D6E6E6F6F70707071717272727373
747474757575767677777778787879797A7A7A7B7B7B7C7C7C7D7D7D7E7E7E7F7F7F808080818181
828282838383848484848585858686868687878788888888898989898A8A8A8A8B8B8B8B8C8C8C8C
8D8D8D8D8D8E8E8E8E8F8F8F8F8F9090909090919191919192929292929293939393939394949494
94949595959595959595969696969696969697979797979797979797989898989898989898989898
98989899999999999999999999999999999999999999
>
0
<
000102030405060708090A0B0C0D0E0F10111213141415161718191A1B1C1D1E1F20212222232425
262728292A2B2C2C2D2E2F3031323333343536373839393A3B3C3D3E3F3F40414243444445464748
48494A4B4C4C4D4E4F505051525354545556575758595A5A5B5C5D5D5E5F60606162636364656666
676868696A6A6B6C6D6D6E6F6F7071717273737475757677777879797A7B7B7C7D7D7E7E7F808081
82828383848585868687888889898A8A8B8C8C8D8D8E8E8F90909191929293939494959696979798
9899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A1A2A2A3A3A4A4A5A5A6A6A6A7A7A8A8A9A9A9AAAA
ABABACACACADADAEAEAEAFAFAFB0B0B1B1B1B2B2B2B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B8B9
B9B9BABABABBBBBBBBBCBCBCBDBDBDBDBEBEBEBEBFBFBFBFC0C0C0C0C1C1C1C1C1C2C2C2C2C3C3C3
C3C3C4C4C4C4C4C4C5C5C5C5C5C5C6C6C6C6C6C6C6C7C7C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C9
C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9
>
0
1 %_Br
[
0.6 0 0.79 0 1 50 100 %_BS
%_0.6 0 0.79 0 1 50 100 Bs
1 0 30.6818 0 %_BS
%_1 0 30.6818 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 2)
(Unnamed gradient 2) 0 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8
>
0
<
0001010203030405050607070809090A0B0B0C0D0D0E0F0F1010111212131414151616171818191A
1A1B1C1C1D1E1E1F2020212222232424252626272828292A2A2B2C2C2D2E2E2F2F30313132333334
35353637373839393A3B3B3C3D3D3E3F3F4041414243434445454647474849494A4B4B4C4D4D4E4E
4F5050515252535454555656575858595A5A5B5C5C5D5E5E5F606061626263646465666667686869
6A6A6B6B6C6D6D6E6F6F7071717273737475757677777879797A7B7B7C7D7D7E7F7F808181828383
8485858687878889898A8A8B8C8C8D8E8E8F909091929293949495969697989899
>
0
1 %_Br
[
0.91 0 0.6 0 1 50 100 %_BS
%_0.91 0 0.6 0 1 50 100 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 3)
(Unnamed gradient 3) 0 2 Bd
[
<
0001010202030304040505060607080809090A0A0B0B0C0C0D0D0E0E0F0F10101111121213131414
1516161717181819191A1A1A1B1B1C1C1D1D1E1E1F1F202021212222232324242525262627272728
2829292A2A2B2B2C2C2D2D2D2E2E2F2F30303131313232333334343535353636373738383839393A
3A3A3B3B3C3C3D3D3D3E3E3F3F3F4040414141424243434344444545454646464747484848494949
4A4A4B4B4B4C4C4C4D4D4D4E4E4F4F4F505050515151525252535353545454555555565656575757
575858585959595A5A5A5B5B5B5B5C5C5C5D5D5D5D5E5E5E5F5F5F5F606060606161616162626262
6363636364646464656565656566666666676767676768686868686969696969696A6A6A6A6A6A6B
6B6B6B6B6B6B6C6C6C6C6C6C6C6C6D6D6D6D6D6D6D6D6D6D6D6E6E6E6E6E
>
0
<
000102030405060708090A0B0C0D0E0F10111213141516171718191A1B1C1D1E1F20212223242526
272828292A2B2C2D2E2F30313232333435363738393A3B3B3C3D3E3F404142424344454647484949
4A4B4C4D4E4E4F5051525353545556575858595A5B5C5C5D5E5F606061626364646566676868696A
6B6B6C6D6E6E6F707171727374747576777778797A7A7B7C7C7D7E7F7F8081818283848485868687
8888898A8A8B8C8C8D8E8E8F909091929293939495959697979898999A9A9B9B9C9D9D9E9E9FA0A0
A1A1A2A2A3A4A4A5A5A6A6A7A7A8A8A9AAAAABABACACADADAEAEAFAFB0B0B1B1B2B2B2B3B3B4B4B5
B5B6B6B7B7B7B8B8B9B9BABABABBBBBCBCBCBDBDBDBEBEBFBFBFC0C0C0C1C1C1C2C2C2C3C3C3C4C4
C4C4C5C5C5C5C6C6C6C6C7C7C7C7C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9
>
0
1 %_Br
[
0.43 0 0.79 0 1 50 100 %_BS
%_0.43 0 0.79 0 1 50 100 Bs
1 0 36.3636 0 %_BS
%_1 0 36.3636 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 4)
(Unnamed gradient 4) 0 2 Bd
[
0
<
1A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041
42434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263646566676869
6A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182
>
1
0
1 %_Br
[
0 0.51 1 0 1 50 100 %_BS
%_0 0.51 1 0 1 50 100 Bs
0 0.1 1 0 1 50 0 %_BS
%_0 0.1 1 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 5)
(Unnamed gradient 5) 0 2 Bd
[
<
0001010203030405050607070808090A0A0B0B0C0C0D0E0E0F0F1010111112121313141415151516
16171718181919191A1A1A1B1B1C1C1C1D1D1D1E1E1E1F1F1F202020212121222222222323232324
2424242525252526262626272727272728282828282929292929292A2A2A2A2A2A2B2B2B2B2B2B2B
2B2C2C2C2C2C2C2C2C2D2D2D2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F
2F2F2F2F2F2F2F2F2F2F2F2F2F303030303030303030303030303030303030303030303030303030
30303030303030303030303030303030303030303030303030303030303030303030303030303030
303030303030303030303030303030303030303030303030303030303030
>
<
B8B9BABBBCBDBEBEBFC0C1C2C3C4C5C6C7C7C8C9CACBCCCCCDCECFCFD0D1D2D2D3D4D5D5D6D7D7D8
D9D9DADADBDCDCDDDDDEDFDFE0E0E1E1E2E2E3E3E4E4E5E5E6E6E7E7E8E8E9E9E9EAEAEBEBECECEC
EDEDEDEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F3F3F3F3F4F4F4F4F5F5F5F5F6F6F6F6F6F7F7F7F7F7
F8F8F8F8F8F9F9F9F9F9F9FAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
9C9A9897959492908F8D8C8B898886858382817F7E7D7B7A79787675747372706F6E6D6C6B6A6968
67666463626261605F5E5D5C5B5A595858575655545353525150504F4E4D4D4C4B4B4A4949484847
464645454443434242414140403F3F3E3E3D3D3C3C3C3B3B3A3A3939393838383737373636363535
3534343433333333323232323131313130303030302F2F2F2F2F2E2E2E2E2E2E2D2D2D2D2D2D2D2C
2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2929
29292929292929292929292929292929292929292929292929292929292929292929292929292929
292929292929292929292929292929292929292929292929292929292929
>
0
1 %_Br
[
0.19 1 0.16 0 1 50 100 %_BS
%_0.19 1 0.16 0 1 50 100 Bs
0 0.72 0.61 0 1 16.4773 0 %_BS
%_0 0.72 0.61 0 1 16.4773 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 6)
(Unnamed gradient 6) 0 2 Bd
[
<
0000010102020303030404050505060607070708080909090A0A0B0B0B0C0C0D0D0D0E0E0F0F0F10
1010111112121213131314141515151616161717171818181919191A1A1B1B1B1C1C1C1D1D1D1E1E
1E1E1F1F1F2020202121212222222323232324242425252525262626272727272828282829292929
2A2A2A2A2B2B2B2B2B2C2C2C2C2D2D2D2D2D2E2E2E2E2E2E2F2F2F2F2F2F30303030303030303030
>
<
B8B8B9B9BABBBBBCBDBDBEBEBFC0C0C1C1C2C3C3C4C4C5C6C6C7C7C8C8C9CACACBCBCCCCCDCECECF
CFD0D0D1D2D2D3D3D4D4D5D5D6D6D7D7D8D9D9DADADBDBDCDCDDDDDEDEDFDFE0E0E1E1E2E2E3E3E4
E4E5E5E5E6E6E7E7E8E8E9E9EAEAEAEBEBECECEDEDEDEEEEEFEFF0F0F0F1F1F2F2F2F3F3F3F4F4F5
F5F5F6F6F6F7F7F7F8F8F8F9F9F9FAFAFAFAFBFBFBFCFCFCFCFDFDFDFDFDFEFEFEFEFEFFFFFFFFFF
>
<
9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7F7E7D7C7B7A79787776
757574737271706F6E6D6D6C6B6A6968676766656463626261605F5E5E5D5C5B5A5A595857565655
545353525150504F4E4D4D4C4B4B4A4948484746464544444342424140403F3E3E3D3D3C3B3B3A3A
393838373736363535343433333232313130302F2F2E2E2D2D2D2C2C2C2B2B2B2A2A2A2929292929
>
0
1 %_Br
[
0.19 1 0.16 0 1 50 100 %_BS
%_0.19 1 0.16 0 1 50 100 Bs
0 0.72 0.61 0 1 39.2045 0 %_BS
%_0 0.72 0.61 0 1 39.2045 0 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration])
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 1 255 79 79 0 50 Lb
(background) Ln
0 A
1 Ap
0 O
0 0 0 0 k
0 J 0 j 1 w 4 M []0 d0 XR
626 156 m
-14 156 L
-14 636 L
626 636 L
626 156 L
f
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(flowers) Ln
0 A
0 Ap
0 O
0.47 0.01 0.97 0 k
0 J 0 j 1 w 4 M []0 d0 XR
90.7246 276.584 m
93.9102 274.0176 101.7339 271.1943 104.4985 273.9219 C
104.2441 274.2275 L
101.6563 271.6719 93.96 274.4766 90.9443 276.9072 c
86.2007 280.7246 83.5898 285.6553 83.5962 290.793 c
83.5972 293.7373 84.4985 296.1914 86.1938 297.8906 c
87.9463 299.6465 90.481 300.4824 93.3379 300.252 c
96.748 299.9736 99.6387 296.084 99.6138 293.0957 c
99.5991 291.085 98.3286 289.9609 96.0376 289.9365 c
94.9551 289.9229 94.0645 290.5195 93.585 291.5684 c
93.1357 292.5664 93.1626 293.7529 93.6577 294.4014 c
94.0127 294.8633 94.562 294.999 95.2466 294.79 C
95.3403 295.1807 L
94.5122 295.4326 93.8149 295.252 93.3662 294.6621 c
92.7764 293.8906 92.7246 292.5479 93.2485 291.3975 c
93.7974 290.1982 94.8164 289.5146 96.0493 289.5293 c
98.5371 289.5566 99.9727 290.8535 99.9902 293.084 c
100.0166 296.2666 97.0625 300.3545 93.3564 300.6563 c
90.3994 300.8975 87.7637 300.0205 85.9355 298.1934 c
84.165 296.417 83.2261 293.8594 83.2202 290.8037 c
83.2163 285.5303 85.8784 280.4814 90.7246 276.584 c
f
/BBAccumRotation (1.714339) XT
0.89 0 0.6141 0.1335 k
105.7876 228.5967 m
107.9487 230.8301 113.5825 233.6934 115.9229 231.8955 C
115.7593 231.6416 L
113.5688 233.3262 108.0293 230.4893 105.9839 228.373 c
102.7651 225.0498 101.2598 221.0879 101.7466 217.2158 c
102.0234 214.9961 102.9331 213.2305 104.3706 212.1084 c
105.8564 210.9482 107.8457 210.5566 109.9775 210.998 c
112.5229 211.5273 114.3374 214.7314 114.0386 216.9814 c
113.8389 218.4971 112.7754 219.2246 111.0459 219.0273 c
110.2285 218.9375 109.6133 218.4033 109.3501 217.5674 c
109.105 216.7725 109.2363 215.8809 109.6709 215.4395 c
109.9814 215.124 110.4082 215.0732 110.9043 215.2949 C
111.0122 215.0098 L
110.4116 214.7412 109.8691 214.8125 109.4751 215.2148 c
108.9585 215.7412 108.7935 216.748 109.0801 217.665 c
109.3813 218.6211 110.0859 219.2314 111.0166 219.3359 c
112.8945 219.5498 114.0986 218.7061 114.3213 217.0264 c
114.6396 214.6289 112.7959 211.2705 110.0298 210.6953 c
107.8237 210.2363 105.7539 210.6494 104.2041 211.8555 c
102.7026 213.0283 101.7554 214.8691 101.4639 217.1719 c
100.9663 221.1465 102.5 225.2041 105.7876 228.5967 c
f
/BBAccumRotation (4.979719) XT
0 0.11 1 0.21 k
393.7188 433.479 m
393.0537 426.4463 395.1719 421.5845 393.1318 414.3525 c
391.5254 408.6572 388.5547 403.937 385.2246 399.582 C
397.3027 408.9131 402.3604 416.0386 400.3623 430.3755 c
398.5107 443.6631 406.0449 452.7393 416.3145 461.7559 c
395.1465 448.5352 393.7188 433.479 v
f
/BBAccumRotation (2.863438) XT
0.89 0 0.6141 0.1335 k
403.625 438.374 m
404.3184 433.7593 406.4492 430.9795 406.293 426.0181 c
406.1689 422.1123 405.0156 418.6113 403.5732 415.291 C
409.832 423.1943 411.9395 428.5679 408.377 437.4414 c
405.0752 445.665 408.4609 452.6826 413.6113 460.0986 c
402.1445 448.2534 403.625 438.374 v
f
/BBAccumRotation (2.620116) XT
389.2354 441.043 m
387.9395 437.0464 388.5391 433.9502 386.4199 430.0161 c
384.752 426.9189 382.416 424.561 379.9209 422.4658 C
388.1367 426.3193 391.9932 429.8013 392.6895 438.3813 c
393.332 446.334 398.8789 450.6279 406.0059 454.5332 c
392.0098 449.5972 389.2354 441.043 v
f
/BBAccumRotation (3.082637) XT
0 0.11 1 0.21 k
212.5254 441.9116 m
205.5894 443.2529 201.5215 446.6543 194.0068 446.7329 c
188.0898 446.7939 182.7241 445.2729 177.6074 443.3027 C
189.9609 452.2656 198.2227 455.1133 211.4175 449.1597 c
223.6455 443.6421 234.4756 448.3164 246.019 455.6328 c
227.3745 439.043 212.5254 441.9116 v
f
0.89 0 0.6141 0.1335 k
220.0112 450.0396 m
215.7783 452.0029 213.71 454.8301 208.9053 456.0767 c
205.1221 457.0576 201.439 456.937 197.8462 456.4873 C
207.1924 460.2671 212.9419 460.7783 220.4541 454.8618 c
227.415 449.3779 235.1021 450.6514 243.6685 453.5059 c
229.0737 445.8364 220.0112 450.0396 v
f
218.5205 435.4795 m
214.3213 435.3608 211.519 436.8081 207.147 435.8818 c
203.7061 435.1533 200.7856 433.5767 198.0737 431.7715 C
204.084 438.5708 208.5103 441.291 216.939 439.543 c
224.7515 437.9204 230.4331 442.0347 236.1865 447.7749 c
227.5098 435.7334 218.5205 435.4795 v
f
0 0.11 1 0.21 k
94.7456 234.7705 m
89.3706 235.8105 86.2173 238.4463 80.3931 238.5068 c
75.8076 238.5547 71.6484 237.376 67.6831 235.8496 C
77.2578 242.7949 83.6611 245.002 93.8872 240.3887 c
103.3647 236.1113 111.7588 239.7354 120.7051 245.4053 c
106.2549 232.5479 94.7456 234.7705 v
f
0.89 0 0.6141 0.1335 k
100.5479 241.0703 m
97.2671 242.5918 95.6641 244.7822 91.9399 245.75 c
89.0078 246.5098 86.1538 246.416 83.3691 246.0674 C
90.6128 248.9961 95.0684 249.3926 100.8911 244.8076 c
106.2866 240.5576 112.2437 241.5439 118.8833 243.7568 c
107.5718 237.8125 100.5479 241.0703 v
f
99.3926 229.7852 m
96.1377 229.6934 93.9658 230.8145 90.5776 230.0977 c
87.9111 229.5332 85.6475 228.3115 83.5454 226.9111 C
88.2036 232.1816 91.6343 234.2891 98.167 232.9346 c
104.2217 231.6777 108.625 234.8662 113.0845 239.3154 c
106.3599 229.9824 99.3926 229.7852 v
f
0 0.11 1 0.21 k
226.5747 275.1914 m
228.9414 268.5352 232.915 265.0234 234.1201 257.6055 c
235.0684 251.7646 234.3691 246.2314 233.1899 240.877 C
240.1973 254.4355 241.7725 263.0313 233.9063 275.1826 c
226.6162 286.4453 229.6128 297.8545 235.1143 310.3652 c
221.5103 289.4414 226.5747 275.1914 v
f
/BBAccumRotation (3.299438) XT
0.89 0 0.6141 0.1335 k
233.4858 283.8115 m
236.063 279.9209 239.1689 278.3008 241.1226 273.7373 c
242.6602 270.1445 243.0928 266.4854 243.188 262.8662 C
245.5225 272.6729 245.1646 278.4346 238.188 284.9727 c
231.7217 291.0332 231.8276 298.8232 233.3643 307.7207 c
227.9717 292.1406 233.4858 283.8115 v
f
/BBAccumRotation (3.056116) XT
219.3154 280.1533 m
219.8286 275.9834 221.6792 273.4307 221.4209 268.9688 c
221.2163 265.457 220.0952 262.333 218.7178 259.3809 C
224.5381 266.3438 226.5635 271.1279 223.5708 279.2002 c
220.7939 286.6797 224.0093 292.9141 228.8208 299.4648 c
218.2173 289.0791 219.3154 280.1533 v
f
/BBAccumRotation (3.518637) XT
0.47 0.01 0.97 0 k
138.917 230.208 m
140.3721 226.1963 138.8188 221.6309 141.5664 217.748 c
144.8174 213.1445 148.1802 215.4893 152.7378 214.7354 C
151.4863 217.959 152.6572 221.4736 148.5337 223.5625 c
145.9067 224.8906 141.4043 224.1133 140.5903 227.7949 c
138.917 230.208 l
f
/BBAccumRotation (3.228465) XT
137.0854 221.5586 m
135.7378 226.748 136.5146 237.9111 141.1714 240.1572 C
141.397 239.6963 L
137.0361 237.5947 136.3037 226.6025 137.5815 221.6895 c
139.5859 213.9609 144.0156 208.4199 150.0615 206.0859 c
153.5254 204.7451 156.8843 204.7646 159.771 206.1299 c
162.7529 207.543 165.0625 210.3613 166.2891 214.0723 c
167.7476 218.5029 164.689 223.9238 161.1611 225.2549 c
158.79 226.1514 156.8018 225.0596 155.5728 222.1797 c
154.9893 220.8203 155.2231 219.4248 156.2075 218.3418 c
157.146 217.3193 158.5547 216.8115 159.5776 217.1416 c
160.3066 217.3799 160.7534 218.0098 160.8652 218.9707 C
161.374 218.9102 L
161.2363 217.75 160.6597 216.9512 159.7305 216.6553 c
158.5142 216.2627 156.9092 216.8076 155.8306 217.9932 c
154.7056 219.2334 154.4365 220.8301 155.0981 222.3809 c
156.4351 225.5098 158.7124 226.7295 161.3452 225.7344 c
165.1016 224.3184 168.3613 218.7275 166.7754 213.9111 c
165.5088 210.0684 163.0967 207.1396 159.9902 205.666 c
156.9746 204.2412 153.4736 204.2217 149.8779 205.6074 c
143.6743 208.0049 139.1313 213.665 137.0854 221.5586 c
f
/BBAccumRotation (2.616043) XT
0.89 0 0.6141 0.1335 k
331.6836 393.0332 m
327.8867 399.9692 319.6543 405.8965 311.8691 403.2168 c
306.6768 401.4321 303.4126 395.604 303.9634 391.584 c
304.2925 389.1895 305.9277 387.7295 308.4502 387.582 C
308.5156 388.6904 L
305.9883 388.8389 305.2441 390.4277 305.0654 391.7344 c
304.582 395.2549 307.6074 400.5762 312.2305 402.167 c
319.1797 404.5566 327.082 399.1294 330.709 392.5 c
334.6055 385.3779 334.5078 378.1973 330.4375 372.2881 c
325.4795 365.0918 315.291 360.9854 305.6616 362.3066 c
285.7656 365.0313 278.8887 379.7627 275.1216 392.293 c
273.6011 397.3428 270.1396 417.3711 275.6377 425.8608 C
275.3608 426.1099 275.0835 426.3589 274.7974 426.6016 C
268.9692 417.8306 272.498 397.1582 274.0562 391.9707 c
277.9209 379.124 284.9902 364.0156 305.5117 361.2031 c
315.541 359.8301 326.166 364.1289 331.3525 371.6563 c
335.6748 377.9316 335.793 385.5234 331.6836 393.0332 c
f
0.59 0 0.85 0 k
314.666 359.2422 m
319.627 357.9736 324.7354 360.8633 329.7578 357.8301 c
335.7129 354.2373 333.5156 349.293 335.1621 343.2705 C
331.1611 344.3994 327.2246 342.2119 324.085 347.415 c
322.0859 350.7305 322.2471 356.9414 317.7832 357.4023 c
314.666 359.2422 l
f
/BBAccumRotation (4.759375) XT
0.6097 0 0.402 0 k
273.2407 273.3447 m
275.9541 268.7217 281.8662 267.0518 283.311 261.0811 c
285.0269 254.0049 279.7305 251.9971 276.4658 246.3359 C
274.3574 250.1426 269.8301 251.458 271.3857 257.627 c
272.3784 261.5566 277.1162 266.0117 274.1699 269.6709 c
273.2407 273.3447 l
f
/BBAccumRotation (3.969333) XT
0.47 0.01 0.97 0 k
328.334 361.9746 m
331.5225 362.498 333.7422 365.457 337.4092 364.9746 c
341.7559 364.4063 341.7363 360.9941 344.2109 357.9326 C
341.6152 357.5732 339.8945 355.3135 336.7656 357.5254 c
334.7725 358.9355 333.2969 362.5635 330.6016 361.7012 c
328.334 361.9746 l
f
/BBAccumRotation (5.171949) XT
0.41 0.01 0.94 0 k
320.0117 366.0039 m
321.7188 370.8008 326.6152 373.8252 327.0313 379.4854 c
327.5322 386.1914 322.6582 386.583 319.0352 390.7373 C
317.7383 386.8193 313.9961 384.4707 316.207 379.4199 c
317.6162 376.2051 322.3496 373.502 320.3047 369.4961 c
320.0117 366.0039 l
f
/BBAccumRotation (5.680563) XT
0.1656 0.432 0 0 k
293.457 385.8438 m
290.2935 384.3477 294.3296 374.0352 294.248 373.9707 C
291.2441 378.8936 286.8804 384.1172 283.9917 379.0986 c
282.25 376.0693 291.3804 369.7715 291.3311 369.6025 C
285.8047 371.7441 278.4297 373.5664 279.3242 367.5625 c
279.8496 364.0117 286.1328 364.2402 291.1802 365.2373 C
291.1938 365.1748 291.2109 365.1143 291.2256 365.0527 C
285.4351 363.6709 278.1406 360.9463 282.3452 356.4736 c
284.771 353.8955 293.4038 361.0488 293.4707 360.9785 C
289.7813 356.3154 285.7661 349.6992 291.8203 348.7852 c
295.1826 348.2793 297.665 358.5742 297.7852 358.5469 C
297.522 352.7422 298.2056 345.7891 303.4517 348.3848 c
306.3115 349.8047 303.1606 358.9932 303.3267 359.0654 C
306.3647 354.5615 310.3887 350.4727 312.9844 355.1807 c
314.4033 357.749 311.2188 360.6465 307.4795 362.8574 C
307.6387 363.1484 318.2139 361.7109 317.375 366.833 c
316.8984 369.7422 312.5752 370.041 308.2578 369.4609 C
308.2227 369.5859 317.666 373.7148 314.2246 377.5078 c
312.1602 379.7832 304.3848 374.6172 304.21 374.7178 C
307.5527 379.123 310.29 384.4512 304.8916 385.3672 c
301.6021 385.9238 299.0225 375.8906 298.9604 375.8848 C
299.291 381.623 298.6626 388.3047 293.457 385.8438 c
f
/BBAccumRotation (1.664355) XT
1 Ap
0.16 0.84 0 0 k
297.0073 374.4375 m
301.1514 374.8262 304.8257 371.7803 305.2144 367.6377 c
305.6025 363.4941 302.5591 359.8203 298.415 359.4307 c
294.2705 359.042 290.5972 362.0859 290.2085 366.2285 c
289.8198 370.373 292.8623 374.0479 297.0073 374.4375 c
f
/BBAccumRotation (1.664355) XT
0 0.5 1 0 k
334.0586 382.4316 m
337.6602 382.7695 340.8574 380.1221 341.1963 376.5176 c
341.5332 372.916 338.8848 369.7188 335.2822 369.3809 c
331.6787 369.043 328.4824 371.6914 328.1445 375.293 c
327.8066 378.8965 330.4541 382.0938 334.0586 382.4316 c
f
/BBAccumRotation (1.664355) XT
0 0.22 1 0 k
321.8008 405.0391 m
324.1016 405.2554 326.1396 403.5654 326.3555 401.2656 c
326.5723 398.9668 324.8828 396.9272 322.582 396.7109 c
320.2803 396.4951 318.2432 398.1846 318.0264 400.4849 c
317.8115 402.7847 319.5 404.8237 321.8008 405.0391 c
f
/BBAccumRotation (1.664355) XT
0 0.1 1 0 k
311.125 405.1055 m
313.4238 405.3208 315.4648 403.6313 315.6797 401.332 c
315.8955 399.0313 314.2061 396.9922 311.9072 396.7769 c
309.6064 396.5605 307.5674 398.2495 307.3516 400.5503 c
307.1367 402.8501 308.8262 404.8901 311.125 405.1055 c
f
/BBAccumRotation (1.664355) XT
0 0.35 1 0 k
330.5449 397.1245 m
333.6113 397.4131 336.3301 395.1597 336.6182 392.0928 c
336.9063 389.0273 334.6523 386.3086 331.5859 386.0195 c
328.5205 385.7324 325.8008 387.9863 325.5137 391.0508 c
325.2256 394.1172 327.4785 396.8369 330.5449 397.1245 c
f
/BBAccumRotation (1.664355) XT
0 Ap
0.89 0 0.6141 0.1335 k
367.1367 489.082 m
338.8418 486.0728 301.9292 463.4038 283.1016 437.4746 c
269.0435 418.1138 258.8389 395.397 248.9697 373.4287 c
242.8735 359.8574 236.5698 345.8252 229.4175 332.7119 c
211.5586 299.9678 189.3608 277.1084 161.5571 262.8301 c
133.3394 248.3398 110.042 246.7402 90.3325 257.9375 c
75.5957 266.3125 64.6216 289.1484 66.1201 307.8262 c
67.5278 325.375 83.9253 333.4355 Y
70.7236 328.3164 66.1563 316.7607 65.3901 307.8887 c
63.7554 288.9668 75.0117 265.8008 89.9707 257.3008 c
109.9116 245.9717 133.437 247.5664 161.8921 262.1787 c
189.8306 276.5264 212.1289 299.4834 230.061 332.3613 c
237.2266 345.499 243.5361 359.5449 249.6382 373.1279 c
259.4922 395.063 269.6812 417.7446 283.6948 437.0439 c
302.4146 462.8252 339.1006 485.3633 367.2139 488.3535 c
373.4551 489.0176 380.4141 489.5581 387.6172 489.7686 C
387.6289 490.0132 387.6387 490.2578 387.6465 490.5015 C
380.4053 490.292 373.4092 489.7495 367.1367 489.082 c
f
505.5742 430.3198 m
502.0771 435.2949 497.5068 440.4233 492.2861 445.4771 C
492.127 445.292 491.9707 445.1045 491.8174 444.9141 C
496.9854 439.9063 501.5107 434.8262 504.9746 429.8984 c
522.6406 404.7656 558.3604 320.4727 537.8574 270.5879 C
538.5361 270.3086 L
559.1445 320.4551 523.3047 405.0933 505.5742 430.3198 c
f
0.42 0 0.85 0 k
69.5586 275.2285 m
66.2021 273.0518 61.6792 273.6982 58.7271 270.2891 c
55.2251 266.251 58.1133 263.4248 58.4224 258.8447 C
61.1016 260.6729 64.5771 260.2012 65.5825 264.6094 c
66.2222 267.4189 64.5225 271.6523 67.7153 273.1426 c
69.5586 275.2285 l
f
/BBAccumRotation (4.919274) XT
0 0.11 1 0.21 k
64.3584 276.7412 m
61.3887 277.9912 59.7715 281.2959 56.1636 281.7188 c
51.8887 282.2217 51.314 279.0186 48.4043 276.7373 C
50.8359 275.7813 52.0957 273.2539 55.4863 274.5811 c
57.647 275.4268 59.6958 278.4766 62.1343 277.0254 c
64.3584 276.7412 l
f
/BBAccumRotation (3.945753) XT
0.3 0.01 0.55 0 k
174.1738 352.9561 m
169.998 351.8711 166.8813 347.8262 162.1558 347.9521 c
156.5581 348.0977 156.8521 352.4219 153.8828 355.9717 C
157.2808 356.7725 159.6938 359.8633 163.5835 357.4756 c
166.0581 355.9551 167.689 351.5518 171.2544 353.0029 c
174.1738 352.9561 l
f
/BBAccumRotation (6.939831) XT
0.77 0 0.6141 0.1335 k
169.1309 269.7275 m
165.3599 268.8008 162.5068 265.1963 158.2568 265.3662 c
153.2212 265.5635 153.5361 269.4512 150.9058 272.6816 C
153.9736 273.3623 156.1821 276.1143 159.6543 273.9209 c
161.8628 272.5225 163.2783 268.541 166.5039 269.8037 c
169.1309 269.7275 l
f
/BBAccumRotation (0.643486) XT
0.57 0 0.35 0 k
155.3564 261.5869 m
150.7393 262.0801 146.2466 258.9873 141.4619 260.9912 c
135.7915 263.3643 137.4902 267.8711 135.6074 272.8447 C
139.3374 272.3545 142.8027 274.7061 146.0029 270.6133 c
148.0381 268.0068 148.2783 262.6523 152.3892 262.792 c
155.3564 261.5869 l
f
/BBAccumRotation (0.325219) XT
u
0 0.38 1 0 k
137.9956 225.3682 m
137.0752 222.6455 128.8657 225.1738 128.8213 225.0996 C
132.8179 223.0059 137.145 219.8145 133.4985 217.0459 c
131.2974 215.377 125.8027 222.4131 125.6768 222.3604 C
127.7192 217.9707 129.6509 212.0352 124.9746 212.3066 c
122.21 212.4658 121.9321 217.6611 122.3354 221.8984 C
122.2861 221.9053 122.2378 221.9141 122.1895 221.9209 C
121.5459 217.042 119.9795 210.8203 116.2417 213.9404 c
114.0864 215.7393 118.9575 223.4072 118.8999 223.457 C
115.584 220.0547 110.792 216.2344 109.6543 221.1523 c
109.0239 223.8867 116.7505 226.7266 116.7217 226.8242 C
112.2827 226.1582 106.8931 226.1836 108.5088 230.708 c
109.3936 233.1748 116.6768 231.2891 116.7197 231.4307 C
113.0425 233.585 109.6118 236.5859 113.0405 239.0889 c
114.9106 240.457 117.3657 238.0576 119.333 235.1465 C
119.5444 235.2998 117.6787 243.9043 121.6733 243.6094 c
123.9404 243.4414 124.4824 239.9014 124.3477 236.2988 C
124.4468 236.2783 126.936 244.3809 130.0967 241.8379 c
131.9941 240.3125 128.5869 233.5059 128.6768 233.3691 C
131.8188 236.4648 135.7144 239.1328 136.8066 234.7539 c
137.4712 232.0859 129.9521 229.1846 129.9521 229.1338 C
134.335 229.8496 139.5107 229.8477 137.9956 225.3682 c
f
1 Ap
0.11 1 1 0 k
128.0649 227.7383 m
128.0649 230.6416 125.8721 232.9941 123.167 232.9941 c
120.4629 232.9941 118.27 230.6416 118.27 227.7383 c
118.27 224.835 120.4629 222.4834 123.167 222.4834 c
125.8721 222.4834 128.0649 224.835 128.0649 227.7383 c
f
U
0 Ap
0.1656 0.432 0 0 k
135.6177 260.3223 m
134.3901 256.6934 123.4434 260.0645 123.3843 259.9668 C
128.7134 257.1738 134.4829 252.918 129.6211 249.2266 c
126.686 247.001 119.3599 256.3848 119.1919 256.3135 C
121.915 250.4609 124.4897 242.5449 118.2549 242.9082 c
114.5693 243.1191 114.1987 250.0469 114.7363 255.6982 C
114.6704 255.7061 114.6064 255.7178 114.542 255.7275 C
113.6836 249.2217 111.5952 240.9258 106.6108 245.085 c
103.7378 247.4854 110.2324 257.708 110.1558 257.7744 C
105.7344 253.2393 99.3457 248.1455 97.8281 254.7031 c
96.9868 258.3477 107.29 262.1348 107.2505 262.2646 C
101.332 261.376 94.1465 261.4102 96.3008 267.4434 c
97.4805 270.7324 107.1909 268.2178 107.2485 268.4072 C
102.3457 271.2793 97.771 275.2813 102.3428 278.6182 c
104.8364 280.4424 108.1104 277.2422 110.7329 273.3613 C
111.0146 273.5664 108.5269 285.0381 113.853 284.6465 c
116.8765 284.4219 117.5986 279.7012 117.4194 274.8975 C
117.5518 274.8721 120.8706 285.6738 125.085 282.2832 c
127.6152 280.25 123.0713 271.1729 123.1914 270.9922 C
127.3809 275.1191 132.5757 278.6758 134.0322 272.8389 c
134.9185 269.2813 124.8921 265.4131 124.8921 265.3438 C
130.7358 266.2988 137.6372 266.2969 135.6177 260.3223 c
f
u
0.04 0.37 0 0 k
289.4966 392.5293 m
288.7339 390.2715 281.9238 392.3682 281.8862 392.3076 C
285.2012 390.5703 288.791 387.9238 285.7666 385.626 c
283.9404 384.2412 279.3823 390.0791 279.2773 390.0352 C
280.9717 386.3936 282.5742 381.4688 278.6953 381.6953 c
276.4014 381.8262 276.1714 386.1367 276.5059 389.6523 C
276.4644 389.6582 276.4243 389.6641 276.3857 389.6699 C
275.8511 385.623 274.5518 380.4619 271.4507 383.0498 c
269.6631 384.542 273.7041 390.9023 273.6563 390.9443 C
270.9053 388.123 266.9307 384.9531 265.9868 389.0332 c
265.4634 391.2998 271.873 393.6563 271.8486 393.7373 C
268.1675 393.1855 263.6958 393.2051 265.0361 396.9595 c
265.77 399.0054 271.812 397.4409 271.8477 397.5591 C
268.7969 399.3462 265.9517 401.8359 268.7954 403.9121 c
270.3472 405.0464 272.3838 403.0562 274.0156 400.6416 C
274.1904 400.7695 272.6431 407.9058 275.9565 407.6621 c
277.8374 407.5225 278.2866 404.5854 278.1748 401.5967 C
278.2573 401.5811 280.3228 408.3018 282.9443 406.1919 c
284.5186 404.9268 281.6919 399.2803 281.7661 399.167 C
284.3726 401.7349 287.6045 403.9478 288.5103 400.3164 c
289.0615 398.103 282.8237 395.6963 282.8237 395.6533 C
286.46 396.248 290.7539 396.2456 289.4966 392.5293 c
f
1 Ap
0.08 0.72 0 0 k
281.2593 394.4961 m
281.2593 396.9043 279.4404 398.8564 277.1958 398.8564 c
274.9526 398.8564 273.1338 396.9043 273.1338 394.4961 c
273.1338 392.0879 274.9526 390.1367 277.1958 390.1367 c
279.4404 390.1367 281.2593 392.0879 281.2593 394.4961 c
f
U
0 Ap
0.32 0.47 0 0 k
169.6362 241.1748 m
168.5259 237.8916 158.6245 240.9414 158.5708 240.8535 C
163.3911 238.3271 168.6099 234.4775 164.2124 231.1377 c
161.5571 229.125 154.9307 237.6133 154.7778 237.5479 C
157.2417 232.2549 159.5703 225.0938 153.9316 225.4229 c
150.5967 225.6143 150.2617 231.8799 150.748 236.9912 C
150.6885 236.999 150.6299 237.0088 150.5723 237.0186 C
149.7954 231.1328 147.9058 223.6289 143.3984 227.3926 c
140.7988 229.5625 146.6743 238.8096 146.605 238.8701 C
142.605 234.7676 136.8257 230.1602 135.4531 236.0908 c
134.6924 239.3877 144.0122 242.8145 143.9771 242.9316 C
138.623 242.1279 132.123 242.1582 134.0713 247.6162 c
135.1382 250.5908 143.9229 248.3164 143.9751 248.4873 C
139.5396 251.0859 135.4014 254.707 139.5371 257.7236 c
141.793 259.375 144.7544 256.4805 147.127 252.9697 C
147.3813 253.1553 145.1309 263.5322 149.9487 263.1768 c
152.6836 262.9746 153.3369 258.7041 153.1753 254.3584 C
153.2939 254.3359 156.2969 264.1064 160.1094 261.0391 c
162.3975 259.1992 158.2876 250.9902 158.3965 250.8262 C
162.1855 254.5596 166.8843 257.7764 168.2017 252.4961 c
169.0039 249.2773 159.9341 245.7793 159.9341 245.7168 C
165.2207 246.5811 171.4629 246.5791 169.6362 241.1748 c
f
1 Ap
0 0.78 0 0 k
122.4829 262.7217 m
122.4829 266.2227 119.8379 269.0615 116.5752 269.0615 c
113.3135 269.0615 110.6685 266.2227 110.6685 262.7217 c
110.6685 259.2207 113.3135 256.3828 116.5752 256.3828 c
119.8379 256.3828 122.4829 259.2207 122.4829 262.7217 c
f
0 Ap
0.43 0 0.79 0 k
339.7109 498.8896 m
339.2705 498.8525 L
339.6191 494.397 331.7891 488.6563 327.585 487.3647 c
320.9795 485.3359 314.9336 486.2583 310.5586 489.9722 c
308.0498 492.0991 306.5952 494.7822 306.3442 497.7183 c
306.0889 500.7544 307.168 503.9141 309.3828 506.6318 c
312.0303 509.873 317.3877 509.9824 319.917 507.7998 c
321.6211 506.335 321.6816 504.2397 320.083 501.9102 c
319.3281 500.8086 318.1914 500.3389 316.957 500.6147 c
315.7891 500.8818 314.7969 501.7642 314.5947 502.7329 c
314.4512 503.4248 314.7236 504.0767 315.3867 504.6143 C
315.1211 504.9917 L
314.3213 504.3398 313.9805 503.5039 314.166 502.627 c
314.4072 501.4736 315.5156 500.4546 316.8633 500.1514 c
318.2754 499.8379 319.5781 500.373 320.4365 501.6274 c
322.1738 504.1602 322.0811 506.5449 320.1914 508.1724 c
317.5 510.4951 311.9287 510.4653 309.0518 506.9434 c
306.7559 504.1323 305.6396 500.8398 305.9053 497.6753 c
306.1689 494.6094 307.6836 491.8125 310.2832 489.6025 c
314.7744 485.7905 320.957 484.834 327.7051 486.9111 c
332.1426 488.272 340.0801 494.1309 339.7109 498.8896 C
f
0 0.69 0 0 k
346.8232 502.7568 m
343.6074 508.71 336.5039 510.7363 330.9561 507.2852 c
325.4102 503.8345 323.5195 496.2104 326.7363 490.2578 c
329.9541 484.3057 337.0576 482.2773 342.6035 485.7295 c
342.627 485.7441 342.6484 485.7617 342.6719 485.7764 C
342.6172 485.9888 342.5645 486.2012 342.5107 486.4141 c
342.5645 486.2012 342.6172 485.9888 342.6719 485.7764 C
348.1641 489.2471 350.0283 496.8286 346.8232 502.7568 c
f
1 Ap
0 0.13 0 0 k
340.7207 502.7144 m
338.6914 506.4688 334.2129 507.7461 330.7148 505.5684 c
327.2207 503.394 326.0264 498.5879 328.0566 494.835 c
330.084 491.082 334.5625 489.8057 338.0596 491.981 c
341.5566 494.1567 342.7471 498.9629 340.7207 502.7144 c
f
0.31 1 0.05 0 k
331.8818 503.0078 m
331.5498 503.6221 330.8154 503.8315 330.2441 503.4751 c
329.6699 503.1201 329.4746 502.3315 329.8066 501.7173 c
330.1406 501.1025 330.873 500.8931 331.4473 501.25 c
332.0195 501.6074 332.2139 502.3926 331.8818 503.0078 c
f
u
0 Ap
0.89 0 0.6141 0.1335 k
310.6582 481.5605 m
297.8037 484.3354 282.4619 490.2183 277.8804 511.2461 c
275.6616 521.4229 278.8037 532.7437 285.5195 538.7739 c
291.0352 543.7261 298.1895 544.5522 305.6606 541.0947 c
312.6133 537.8779 318.7695 529.9619 317.0352 522.2842 c
315.8809 517.1738 310.8545 513.4004 307.2969 513.563 c
305.978 513.624 304.3223 514.2612 303.9375 516.9521 C
302.8379 516.7715 L
303.2212 514.084 304.8301 512.4805 307.25 512.3691 c
311.3125 512.1831 316.8213 516.2632 318.1172 522.002 c
320.0615 530.6064 313.377 538.8242 306.1001 542.1924 c
298.2231 545.8369 290.6606 544.9482 284.8047 539.6909 c
277.7798 533.3828 274.4849 521.5737 276.7954 510.9746 c
281.522 489.2852 297.2568 483.2349 310.4355 480.3887 c
314.793 479.4482 329.6318 478.1377 339.375 481.5996 C
339.2568 481.9683 339.1445 482.3359 339.0391 482.7046 C
329.6035 479.3105 314.9473 480.6338 310.6582 481.5605 c
f
0.59 0 0.85 0 k
273.98 520.5781 m
272.2515 525.7622 274.6563 531.5225 271.1582 536.5947 c
267.0166 542.6099 262.2896 539.7588 256.127 540.9185 C
257.627 536.7485 255.812 532.314 261.2979 529.4741 c
264.7944 527.6665 270.9756 528.4639 271.8525 523.731 c
273.98 520.5781 l
f
/BBAccumRotation (3.095020) XT
0.47 0.01 0.97 0 k
275.4272 535.4878 m
275.6499 538.9526 278.396 541.6265 277.5708 545.5049 c
276.5952 550.1011 273.1943 549.7373 269.9077 552.0786 C
269.792 549.2642 267.6987 547.1953 270.1978 544.0664 c
271.7915 542.0737 275.5498 540.8594 274.9419 537.8862 c
275.4272 535.4878 l
f
/BBAccumRotation (3.507594) XT
0.41 0.01 0.94 0 k
280.2266 526.981 m
284.8525 529.2905 287.4121 534.8359 293.0195 535.8521 c
299.6631 537.0601 300.5107 531.8813 304.9951 528.4209 C
301.2075 526.6392 299.2148 522.394 293.9678 524.2544 c
290.6279 525.4399 287.4888 530.2368 283.6831 527.645 c
280.2266 526.981 l
f
/BBAccumRotation (4.016208) XT
1 Ap
0 0.5 1 0 k
295.3018 543.6694 m
295.3018 547.561 292.3608 550.7173 288.7334 550.7173 c
285.1069 550.7173 282.166 547.561 282.166 543.6694 c
282.166 539.7769 285.1069 536.6211 288.7334 536.6211 c
292.3608 536.6211 295.3018 539.7769 295.3018 543.6694 c
f
0 0.22 1 0 k
319.0059 532.8179 m
319.0059 535.3018 317.1289 537.3154 314.8145 537.3154 c
312.499 537.3154 310.624 535.3018 310.624 532.8179 c
310.624 530.3325 312.499 528.3203 314.8145 528.3203 c
317.1289 528.3203 319.0059 530.3325 319.0059 532.8179 c
f
0 0.1 1 0 k
320.9668 521.4272 m
320.9668 523.646 319.291 525.4448 317.2246 525.4448 c
315.1543 525.4448 313.4805 523.646 313.4805 521.4272 c
313.4805 519.2095 315.1543 517.4102 317.2246 517.4102 c
319.291 517.4102 320.9668 519.2095 320.9668 521.4272 c
f
0 0.35 1 0 k
310.291 541.3838 m
310.291 544.6963 307.7871 547.3813 304.7012 547.3813 c
301.6162 547.3813 299.1133 544.6963 299.1133 541.3838 c
299.1133 538.0732 301.6162 535.3877 304.7012 535.3877 c
307.7871 535.3877 310.291 538.0732 310.291 541.3838 c
f
U
u
0 Ap
0 R
0.3008 0.0064 0.6208 0 K
403.9912 489.2563 m
398.8594 486.3584 388.7129 485.9956 380.5244 487.5396 C
382.3672 484.9746 384.6836 483.2236 386.8564 480.8613 C
381.3271 479.1255 374.4922 480.9912 368.7676 482.4116 C
369.3486 480.5938 370.5703 478.6074 372.0684 477.0151 C
366.4648 475.2813 359.1074 475.6343 353.3896 474.4175 C
355.5762 472.7417 358.6641 470.9155 360.5869 468.9634 C
355.0039 467.0181 346.8262 465.4673 342.1465 460.9429 C
344.416 459.9102 347.3457 459.562 349.8555 459.4468 C
347.3857 454.708 339.2129 453.165 338.9219 447.3872 C
341.1504 447.0005 343.3477 447.2031 345.4766 447.9888 C
342.9492 441.0283 339.4092 433.0078 340.8477 425.6108 C
346.9258 427.9429 350.1992 434.3408 356.0088 437.3076 C
355.0635 434.3125 353.9316 430.6909 354.4258 427.8989 C
359.9551 431.0762 363.0957 438.3394 367.7773 442.418 C
367.332 438.0962 364.7695 433.2007 368.3984 429.5874 C
371.9297 435.5161 373.9199 441.8052 379.668 446.1797 C
377.3027 442.6709 378.1182 437.7446 381.9199 435.8315 C
383.9014 442.187 386.1172 449.1465 389.3496 455.1309 C
388.5957 451.1162 391.7285 447.0293 395.4873 447.5806 C
391.2266 453.8984 392.7168 464.2109 395.4141 471.0791 C
395.8633 467.4009 398.8867 463.7437 402.5879 466.3413 C
398.2383 473.021 398.4668 484.251 403.4277 488.8984 c
403.9912 489.2563 l
Bb
1 (Unnamed gradient 3) 584.6563 441.4351 -80.3219 165.6486 -0.3192 -0.5032 0.5032 -0.3192 6819.9717 15027.8262 Bg
73.2791 66.1354 33.8425 -37.4981 313.3838 439.918 Xm
3740.0879 3375.4817 33.8425 -37.4981 -3426.7041 -2935.5635 Bc
73.2791 66.1354 33.8425 -37.4981 313.3838 439.918 Bm
3740.0879 3375.4817 33.8425 -37.4981 386.6631 506.0532 Bc
b
2 BB
/BBAccumRotation (2.136052) XT
0.89 0 0.6141 0.1335 k
380.4053 461.5996 m
375.6855 459.7056 371.8955 460.1772 367.3174 457.2935 c
363.7119 455.0234 361.0576 452.0098 358.7305 448.8223 C
362.7109 459.0649 366.6006 464.0103 376.9082 465.5537 c
386.4609 466.9834 391.1924 474.0376 395.3242 482.9683 c
390.5117 465.6548 380.4053 461.5996 v
f
/BBAccumRotation (2.136052) XT
0 0.34 0 0 k
381.7656 469.438 m
378.4375 468.9751 376.084 469.8789 372.6895 468.7603 c
370.0176 467.8784 367.8359 466.3687 365.8359 464.6958 C
370.0186 470.6284 373.2988 473.1802 380.1523 472.5293 c
386.5049 471.9253 390.6602 475.6953 394.7314 480.7632 c
388.8906 470.4292 381.7656 469.438 v
f
/BBAccumRotation (1.892730) XT
386.542 460.0459 m
384.0469 458.335 381.7871 458.1182 379.502 455.8521 c
377.7051 454.0693 376.5527 451.9761 375.6143 449.8252 C
376.5996 456.2847 378.2168 459.6572 384.002 461.8872 c
389.3613 463.9521 391.1953 468.6582 392.4395 474.3765 c
391.8848 463.7046 386.542 460.0459 v
f
/BBAccumRotation (2.355251) XT
U
u
0 R
0.3008 0.0064 0.6208 0 K
200.7402 293.8799 m
201.5083 288.0371 207.3169 279.71 213.4736 274.0938 C
210.3154 274.0254 207.5244 274.8232 204.3301 275.1396 C
206.2666 269.6777 211.8652 265.3369 216.4414 261.6152 C
214.6392 260.9873 212.3179 260.7695 210.145 261.0098 C
212.1265 255.4893 216.8311 249.8213 219.2954 244.5205 C
216.6416 245.2607 213.3267 246.6318 210.6108 246.9941 C
212.4126 241.3623 216.0879 233.8955 215.2847 227.4355 C
213.0947 228.6279 211.0562 230.7598 209.4561 232.6982 C
207.1523 227.876 210.8325 220.416 206.3892 216.7109 C
204.7407 218.2588 203.582 220.1367 202.9292 222.3115 C
198.8867 216.1074 194.604 208.458 187.8286 205.1602 C
186.0376 211.4209 189.1836 217.8828 188.0635 224.3086 C
186.2373 221.752 184.0239 218.6709 181.4941 217.3877 C
180.7104 223.7178 184.6274 230.5918 185.0732 236.7852 C
181.8872 233.832 179.5151 228.8408 174.4463 229.5693 C
177.0615 235.9561 180.8916 241.3262 180.9336 248.5488 C
179.5503 244.5498 175.1235 242.2402 171.3091 244.1299 C
175.1978 249.5332 179.4272 255.4863 182.2676 261.667 C
179.5122 258.6523 174.3628 258.6992 172.5444 262.0342 C
180.1543 262.4268 187.5005 269.8164 191.3682 276.0996 C
188.1587 274.249 183.4189 274.4658 183.27 278.9854 C
191.2231 279.5244 200.0601 286.457 200.793 293.2148 c
200.7402 293.8799 l
Bb
1 (Unnamed gradient 3) 582.8867 441.1333 -80.3219 165.6486 0.5941 -0.0473 -0.0473 -0.5941 3430.1685 13632.5703 Bg
8.82059 98.3284 -50.3107 4.51314 215.7949 192.1631 Xm
450.1316 5017.8833 -50.3107 4.51314 -234.3364 -4825.7207 Bc
8.82059 98.3284 -50.3107 4.51314 215.7949 192.1631 Bm
450.1316 5017.8833 -50.3107 4.51314 224.6157 290.4912 Bc
b
2 BB
/BBAccumRotation (2.649612) XT
0.89 0 0.6141 0.1335 k
192.8135 258.4072 m
194.1372 253.4961 196.7915 250.751 197.2383 245.3584 c
197.5908 241.1133 196.7788 237.1807 195.6304 233.4043 C
201.4238 242.7422 203.0376 248.8232 198.0747 257.9883 c
193.4761 266.4824 196.27 274.5049 200.9238 283.1748 c
189.9805 268.9219 192.8135 258.4072 v
f
/BBAccumRotation (2.649612) XT
0 0.34 0 0 k
198.2603 264.2051 m
199.8906 261.2686 202.0273 259.9307 203.1743 256.5449 c
204.0757 253.8789 204.1802 251.2275 204.0449 248.624 C
206.2725 255.5322 206.3403 259.6895 201.7007 264.7754 c
197.3994 269.4883 197.9146 275.0752 199.5181 281.375 c
194.77 270.4961 198.2603 264.2051 v
f
/BBAccumRotation (2.406290) XT
187.8828 262.3779 m
188.0161 259.3555 189.2007 257.418 188.7632 254.2305 c
188.4189 251.7227 187.438 249.543 186.2832 247.501 C
190.853 252.1699 192.5771 255.4912 190.8818 261.4541 c
189.3105 266.9795 191.9692 271.2725 195.792 275.7051 c
187.5967 268.8477 187.8828 262.3779 v
f
/BBAccumRotation (2.868811) XT
U
0.89 0 0.6141 0.1335 k
466.3857 419.1885 m
453.9609 418.9434 441.1406 410.1602 435.209 397.8291 c
430.2188 387.457 431.1563 376.5537 437.7813 367.918 c
442.2227 362.1279 448.9775 358.2793 454.9873 358.1143 c
459.3652 357.9951 463.2578 359.7695 466.2412 363.248 c
469.8828 367.4941 471.7012 374.0771 467.084 378.4961 c
464.9453 380.543 462.0313 381.0371 459.0918 379.8516 c
456.6201 378.8545 454.7754 376.8633 454.7041 375.1162 c
454.6748 374.3926 454.9297 373.3838 456.3135 372.6895 C
456.6143 373.2891 L
455.7588 373.7168 455.3408 374.3223 455.3721 375.0879 c
455.4326 376.5615 457.1387 378.3418 459.3418 379.2305 c
460.6123 379.7422 463.8652 380.6494 466.6221 378.0117 c
470.9238 373.8965 469.1768 367.6992 465.7324 363.6836 c
462.8848 360.3633 459.1758 358.6699 455.0059 358.7832 c
449.1885 358.9424 442.6357 362.6875 438.3115 368.3252 c
431.8467 376.7539 430.9346 387.4023 435.8115 397.5391 c
441.6387 409.6523 454.2168 418.2788 466.3984 418.519 c
480.1719 418.791 491.2842 415.4141 499.4277 408.4829 C
500.5439 407.5366 L
507.2939 401.8237 519.8574 391.1885 518.7861 382.3428 C
519.4502 382.2617 L
520.5654 391.4668 508.3018 401.8457 500.9756 408.0469 C
499.8613 408.9922 L
491.5898 416.0322 480.3262 419.4629 466.3857 419.1885 c
f
0 R
0.408 0 0.5372 0 K
542.3057 328.0303 m
542.6768 335.2676 548.9824 346.043 555.9795 353.5303 C
552.1025 353.3057 548.7588 352.0537 544.874 351.3525 C
546.7129 358.2363 553.1523 364.1055 558.3984 369.1152 C
556.1279 369.709 553.2607 369.75 550.6201 369.2422 C
552.5098 376.2031 557.7227 383.6104 560.2266 390.3496 C
557.0459 389.1816 553.1152 387.1787 549.8213 386.4678 C
551.4795 393.5469 555.2549 403.0601 553.6396 410.8989 C
551.0713 409.2222 548.7813 406.4102 547.0078 403.8789 C
543.7129 409.5649 547.4951 419.0688 541.6875 423.1753 C
539.8184 421.1162 538.5811 418.7017 537.9941 415.9736 C
532.4307 423.1816 526.4336 432.1406 517.8057 435.52 C
516.2227 427.6709 520.7109 420.0586 519.9658 412.0713 C
517.4785 415.0269 514.4639 418.5869 511.2383 419.9116 C
510.8955 412.0767 516.3701 404.0327 517.5205 396.4844 C
513.3262 399.7935 509.9316 405.6802 503.7881 404.291 C
507.6191 396.7188 512.8389 390.5107 513.5967 381.6602 C
511.5107 386.4277 505.8564 388.8262 501.3662 386.1367 C
506.6611 379.8945 512.4277 373.0098 516.5146 365.7129 C
512.8418 369.1377 506.5332 368.5762 504.6299 364.3105 C
513.998 364.5742 523.7246 356.2334 529.0801 348.9092 C
524.9648 350.8652 519.1758 350.1367 519.4346 344.5811 C
529.2363 344.6982 540.7471 337.0645 542.3057 328.8516 c
542.3057 328.0303 l
Bb
1 (Unnamed gradient 1) 584.5859 441.4233 -80.3219 165.6486 0.7328 0 0 0.7328 2198.7168 2169.0635 Bg
20.4067 -119.6597 -61.2301 -10.4422 550.8447 454.0791 Xm
1041.6202 -6107.7876 -61.2301 -10.4422 -490.7754 6561.8672 Bc
20.4067 -119.6597 -61.2301 -10.4422 550.8447 454.0791 Bm
1041.6202 -6107.7876 -61.2301 -10.4422 571.251 334.4189 Bc
b
2 BB
0.89 0 0.6141 0.1335 k
529.1221 370.7383 m
530.2646 376.8887 533.25 380.5117 533.2715 387.165 c
533.2881 392.4033 531.9072 397.1445 530.1299 401.6621 C
538.1445 390.7813 540.7188 383.4863 535.5313 371.7656 c
530.7246 360.9043 534.9326 351.3447 541.4844 341.1709 c
526.6768 357.5732 529.1221 370.7383 v
f
0 0.34 0 0 k
536.3652 364.1621 m
538.0762 367.9229 540.5664 369.7725 541.6396 374.0342 c
542.4834 377.3887 542.3535 380.6494 541.9326 383.8271 C
545.3389 375.5781 545.8281 370.4902 540.6377 363.8018 c
535.8271 357.6035 537.0039 350.8047 539.5859 343.2402 c
532.7021 356.1123 536.3652 364.1621 v
f
523.4658 365.3887 m
523.333 369.1074 524.5967 371.5977 523.749 375.4619 c
523.082 378.5039 521.667 381.0781 520.0508 383.4688 C
526.1094 378.1914 528.5469 374.2891 527.0518 366.8154 c
525.666 359.8887 529.3447 354.8848 534.4639 349.8271 c
523.7471 357.4326 523.4658 365.3887 v
f
/BBAccumRotation (0.219199) XT
0 R
0.455 0 0.3 0 K
543.5439 301.9863 m
543.4746 311.9258 523.5566 304.3994 519.4639 300.6406 C
519.6719 304.1035 521.8027 307.2969 524.9238 308.8926 C
517.4932 308.9707 505.335 303.6572 500.9141 296.7148 C
499.7881 300.5029 502.417 304.3457 505.877 305.6309 C
495.6875 306.0137 490.4814 305.5127 481.2275 301.3691 C
481.3965 305.5576 484.3174 308.1582 487.6279 310.1885 C
481.3672 314.4727 471.209 314.2236 464.5664 311.4248 C
464.8438 315.1689 468.9014 317.1279 471.8857 319.0371 C
464.5137 324.1123 442.5977 327.624 442.5439 327.6885 C
446.9346 334.1504 456.0127 336.3604 463.4932 336.2891 C
462.1738 340.7988 456.7305 341.1973 452.666 340.8867 C
457.4258 345.7432 467.2363 343.2871 473.5049 342.2051 C
472.4219 345.7705 468.9531 347.6816 465.2637 347.9043 C
472.8369 354.5732 484.0342 347.333 491.7559 345.5771 C
491.2529 349.5439 489.0186 353.4375 486.4492 356.7773 C
496.9424 355.6865 502.3066 349.1543 510.6846 344.2783 C
510.2598 348.1328 509.6953 352.1436 509.3379 356.1172 C
517.0488 351.9316 518.4346 346.0322 522.375 338.6416 C
525.0391 341.041 525.6523 344.709 525.252 348.0068 C
527.8584 343.2197 529.5947 336.1328 529.6182 330.5293 C
532.7871 330.8896 534.7568 334.1182 534.2061 337.3457 C
537.0625 333.5908 538.082 325.6172 537.9678 320.7959 C
540.5391 322.2891 540.5957 321.5176 541.6699 324.6758 C
539.6279 321.3037 543.5439 301.9863 y
Bb
1 (Unnamed gradient 2) 477.6133 274.7852 0 138.9453 0.7328 0 0 0.7328 2198.7168 2169.0635 Bg
101.8191 0 0 -62.9937 441.8398 358.2432 Xm
6129.6177 0 0 -62.9937 -5687.7778 358.2432 Bc
101.8191 0 0 -62.9937 441.8398 358.2432 Bm
6129.6177 0 0 -62.9937 543.6592 358.2432 Bc
b
2 BB
/BBAccumRotation (6.079071) XT
0.89 0 0.6141 0.1335 k
508.1143 331.7324 m
501.4365 332.0146 496.9121 329.6943 489.9971 331.3057 c
484.5518 332.5752 479.9785 335.2266 475.7393 338.249 C
485 326.9531 491.9219 322.3906 505.416 325.0889 c
517.9199 327.5898 526.7764 320.7139 535.6738 311.166 c
522.4102 331.1279 508.1143 331.7324 v
f
/BBAccumRotation (7.621583) XT
0.06 0.494 0 0.1 k
514.3301 319.6025 m
510.6787 318.665 508.6152 316.6719 504.6172 316.4121 c
501.4697 316.208 498.5674 316.8936 495.7842 317.832 C
502.6309 313.2461 507.1143 311.9131 513.959 315.5752 c
520.3037 318.9688 526.209 316.7031 532.5742 313 c
522.1494 321.6123 514.3301 319.6025 v
f
/BBAccumRotation (7.915429) XT
516.8643 335.8477 m
512.7549 336.9951 509.6055 336.2109 505.542 338.2188 c
502.3418 339.8008 499.8857 342.1133 497.6895 344.6094 C
501.8027 336.2402 505.4404 332.3984 514.2207 332.1113 c
522.3564 331.8467 526.8613 326.2852 531.0029 319.0557 c
525.6611 333.3926 516.8643 335.8477 v
f
/BBAccumRotation (7.391662) XT
u
0 R
0.455 0 0.3 0 K
403.3359 491.6475 m
395.042 488.2246 394.3291 507.4297 396.0225 512.1499 C
393.2148 510.7646 391.3047 507.8735 391.0703 504.7188 C
388.4043 510.8726 388.5664 522.8467 392.793 528.9551 C
389.248 528.5664 386.9717 525.0332 387.1152 521.7051 C
383.2285 530.0469 381.8223 534.5532 382.0273 543.7021 C
378.6025 542.0952 377.4619 538.7549 376.9326 535.29 C
371.1758 538.998 367.8271 547.5352 367.8281 554.041 C
364.8115 552.4995 364.6025 548.4375 364.0586 545.2876 C
357.2559 549.6426 346.6602 566.6445 346.5879 566.666 C
342.75 560.751 344.0918 552.4253 346.7695 546.2271 C
342.5547 545.7461 340.3184 550.1348 339.1543 553.624 C
336.7793 547.9639 342.2588 540.6631 345.3535 535.8276 C
342.0078 535.4805 339.2051 537.6963 337.7275 540.688 C
334.8311 532.0527 344.7744 525.2729 348.9395 519.4639 C
345.4639 518.4937 341.4424 518.9888 337.7637 519.957 C
342.3457 511.6104 349.6572 509.4351 356.6484 504.1729 C
353.293 503.1772 349.7578 502.2417 346.3291 501.1475 C
352.5098 496.1992 357.9033 497.1113 365.4297 496.4219 C
364.3672 493.3652 361.5303 491.5703 358.6475 490.7495 C
363.542 490.2573 370.0469 491.2949 374.7148 493.2363 C
375.5254 490.4746 373.5293 487.7061 370.6504 487.0342 C
374.7754 485.9722 381.7656 487.917 385.7363 489.6997 C
385.3945 487.0386 386.0557 487.2612 383.8047 485.2617 C
385.8945 488.1406 403.3359 491.6475 y
Bb
1 (Unnamed gradient 2) 477.6133 274.8828 0 138.9453 0.2566 0.6096 0.6096 -0.2566 1019.2397 5054.5244 Bg
35.6534 -84.7011 52.4025 22.0579 320.9521 556.4868 Xm
2146.3977 -5099.1587 52.4025 22.0579 -1825.4453 5655.6455 Bc
35.6534 -84.7011 52.4025 22.0579 320.9521 556.4868 Bm
2146.3977 -5099.1587 52.4025 22.0579 356.6055 471.7856 Bc
b
2 BB
/BBAccumRotation (8.048288) XT
0.89 0 0.6141 0.1335 k
366.1846 510.7046 m
363.6113 516.1611 363.957 520.7363 360.1953 525.9248 c
357.2324 530.0098 353.4258 532.8857 349.4258 535.3545 C
362.0664 531.606 368.2852 527.4453 370.7656 515.2754 c
373.0635 503.998 381.8848 499.0386 392.9434 494.98 c
371.6934 499.0244 366.1846 510.7046 v
f
/BBAccumRotation (9.590799) XT
0.06 0.494 0 0.1 k
378.4512 509.7808 m
377.9531 513.147 378.8887 515.5605 377.7031 518.9775 c
376.7715 521.668 375.1855 523.8423 373.4316 525.8291 C
379.6426 521.7388 382.3223 518.4761 381.6719 511.5 c
381.0693 505.0337 385.0234 500.9146 390.332 496.916 c
379.5176 502.5723 378.4512 509.7808 v
f
/BBAccumRotation (9.884646) XT
365.8242 501.9844 m
363.4316 505.001 362.9805 507.8955 359.8867 510.5728 c
357.4512 512.6807 354.667 513.9146 351.8223 514.8672 C
360.2246 514.3765 364.6934 512.6958 368.0078 505.4917 c
371.0752 498.8164 377.2793 497.0166 384.7441 496.103 c
370.9473 495.5264 365.8242 501.9844 v
f
/BBAccumRotation (9.360879) XT
U
u
0 R
0.455 0 0.3 0 K
198.707 287.8184 m
196.3667 296.4805 180.7051 285.3447 177.9937 281.126 C
177.3813 284.1953 178.5103 287.4717 180.8687 289.5801 C
174.3643 287.9443 164.9683 280.5205 162.6997 273.4473 C
160.8481 276.4941 162.2632 280.4512 164.9893 282.3662 C
156.0068 280.3662 151.5767 278.7354 144.4468 272.998 C
143.6348 276.6934 145.5889 279.6318 148.0127 282.1631 C
141.5659 284.4678 132.7554 281.9219 127.5977 277.958 C
126.9814 281.2891 130.0752 283.9287 132.2422 286.2803 C
124.6436 289.0205 104.7061 287.0625 104.645 287.1074 C
106.9976 293.7539 114.416 297.7637 120.9614 299.416 C
118.7764 303.0508 113.9331 302.1504 110.4565 300.9482 C
113.4985 306.2793 122.626 306.3828 128.3462 306.875 C
126.584 309.7402 123.1177 310.6133 119.8447 309.9609 C
124.9282 317.5195 136.3623 313.7656 143.5063 314.0039 C
142.1582 317.3496 139.3154 320.2373 136.3057 322.5635 C
145.7163 324.0166 151.8955 319.5439 160.3281 317.208 C
159.0737 320.4746 157.6611 323.8477 156.4399 327.2334 C
164.1289 325.3467 166.6924 320.5146 171.8252 314.9658 C
173.6011 317.6709 173.2954 321.0156 172.1899 323.7998 C
175.562 320.2197 178.7031 314.4297 180.0078 309.5459 C
182.6919 310.5859 183.6714 313.8545 182.4497 316.5459 C
185.8047 313.9229 188.522 307.1953 189.5278 302.9609 C
191.4297 304.8525 191.6558 304.1934 191.8696 307.1973 C
190.8604 303.7852 198.707 287.8184 y
Bb
1 (Unnamed gradient 2) 477.6133 275.7539 0 138.9453 0.6398 -0.168 0.168 0.6398 1243.437 4388.0308 Bg
88.8972 23.3428 14.4396 -54.9909 97.9067 313.8486 Xm
5352.584 1405.4927 14.4396 -54.9909 -5254.6777 -1091.6436 Bc
88.8972 23.3428 14.4396 -54.9909 97.9067 313.8486 Bm
5352.584 1405.4927 14.4396 -54.9909 186.8037 337.1914 Bc
b
2 BB
/BBAccumRotation (16.557452) XT
0.89 0 0.6141 0.1335 k
160.9595 305.665 m
155.0645 304.3809 151.6479 301.3193 145.2417 301.1416 c
140.1968 301.002 135.5967 302.2686 131.2026 303.9355 C
141.877 296.1953 148.9648 293.7998 160.1265 299.2471 c
170.4683 304.2969 179.7764 300.3242 189.7324 294.0293 c
173.5776 308.4141 160.9595 305.665 v
f
/BBAccumRotation (18.099963) XT
0.06 0.494 0 0.1 k
169.166 296.501 m
166.1929 294.8457 164.8496 292.6338 161.418 291.4902 c
158.7173 290.5908 156.0264 290.5234 153.3823 290.7041 C
160.4097 288.2705 164.6299 288.1348 169.7646 292.9014 c
174.5254 297.3184 180.2007 296.6934 186.6055 294.9199 c
175.5313 300.0488 169.166 296.501 v
f
/BBAccumRotation (18.393810) XT
167.6543 311.2637 m
163.8047 311.3242 161.2344 309.917 157.2271 310.7393 c
154.0718 311.3867 151.3965 312.8428 148.9077 314.5166 C
154.416 308.1543 158.4727 305.6348 166.2031 307.3955 c
173.3662 309.0313 178.5737 305.208 183.8462 299.8447 c
175.897 311.1367 167.6543 311.2637 v
f
/BBAccumRotation (17.870043) XT
U
u
0 R
0.3008 0.0064 0.6208 0 K
278.2168 430.0957 m
276.9238 421.8252 261.27 430.5684 258.3286 434.2061 C
258.0713 431.2974 259.4502 428.373 261.8511 426.6563 C
255.6528 427.5146 246.187 433.4492 243.3682 439.7798 C
241.959 436.7656 243.6714 433.2383 246.3931 431.7388 C
237.8599 432.6851 233.5859 433.749 226.3936 438.3486 C
226.0137 434.8398 228.123 432.311 230.6284 430.2095 C
224.8818 427.4185 216.4536 428.8887 211.2681 432.0435 C
211.0347 428.8916 214.1709 426.7554 216.4185 424.7949 C
209.6484 421.4834 190.959 421.2813 190.9072 421.2339 C
193.7612 415.3076 201.0479 412.3403 207.2861 411.4688 C
205.6279 407.8765 201.0449 408.2217 197.6987 408.9844 C
201.0596 404.3486 209.5347 405.1758 214.8901 405.2983 C
213.5449 402.4644 210.4189 401.3032 207.3179 401.5767 C
212.7974 395.0806 223.0225 399.7197 229.6714 400.2227 C
228.7598 396.9824 226.4155 394.0176 223.8604 391.5547 C
232.7354 391.1602 238.0137 395.9336 245.5972 398.9531 C
244.7646 395.7969 243.7964 392.5264 243.0054 389.2617 C
249.9463 391.79 251.8345 396.5313 256.0337 402.1958 C
257.9536 399.8677 258.0088 396.7358 257.2656 394.0391 C
260.0313 397.7021 262.3584 403.3901 263.0732 408.0527 C
265.6685 407.3594 266.9072 404.4263 266.0474 401.8057 C
268.8931 404.5791 270.7319 411.0928 271.2363 415.1221 C
273.1919 413.561 273.335 414.1958 273.8379 411.4312 C
272.5557 414.4927 278.2168 430.0957 y
Bb
1 (Unnamed gradient 3) 132.5049 381.2314 10.305 113.2188 0.6792 0.0783 -0.0783 0.6792 3274.0215 1974.6875 Bg
77.2436 5.03414 3.45477 -53.0099 190.2715 437.6895 Xm
5472.4326 356.6506 3.45477 -53.0099 -5282.1611 81.0391 Bc
77.2436 5.03414 3.45477 -53.0099 190.2715 437.6895 Bm
5472.4326 356.6506 3.45477 -53.0099 267.5151 442.7236 Bc
b
2 BB
/BBAccumRotation (2.789434) XT
0.89 0 0.6141 0.1335 k
245.0146 409.7222 m
239.4175 410.3164 235.9385 412.811 229.9785 412.3271 c
225.2866 411.9468 221.1479 410.3062 217.2412 408.3154 C
226.3579 416.5742 232.689 419.5132 243.5923 415.5898 c
253.6953 411.9536 261.9253 416.5811 270.5225 423.4272 c
256.9951 408.4507 245.0146 409.7222 v
f
/BBAccumRotation (4.331945) XT
0.06 0.494 0 0.1 k
251.6987 419.0522 m
248.7739 420.2866 247.3032 422.2026 244.0049 422.9155 c
241.4092 423.4766 238.9067 423.2666 236.4722 422.8311 C
242.7437 425.7993 246.644 426.353 251.8892 422.4521 c
256.752 418.8374 261.9517 419.9922 267.7124 422.2842 c
257.9609 416.4072 251.6987 419.0522 v
f
/BBAccumRotation (4.625791) XT
251.791 405.208 m
248.2261 404.7622 245.6997 405.8071 242.0669 404.6382 c
239.2056 403.7192 236.8721 402.0986 234.7339 400.292 C
239.1978 406.7515 242.7046 409.4995 250.0532 408.6479 c
256.8623 407.8564 261.3042 411.9292 265.6509 417.4365 c
259.4214 406.1597 251.791 405.208 v
f
/BBAccumRotation (4.102026) XT
U
0.1748 0.4256 0 0 k
345.9961 481.0811 m
343.1504 477.4438 338.0693 476.25 336.083 471.5015 c
333.7266 465.8765 337.8066 464.1382 339.7285 459.5234 C
341.9707 462.5205 345.8652 463.4648 345.415 468.4453 c
345.127 471.6172 341.832 475.3018 344.7422 478.1616 c
345.9961 481.0811 l
f
/BBAccumRotation (2.216603) XT
0.36 0.18 0.46 0 k
317.9883 472.8066 m
312.3438 470.7124 309.3398 464.502 302.4556 464.0752 c
294.2979 463.5654 293.1157 469.8125 287.4961 474.5313 C
292.1177 476.1162 294.4585 480.8643 300.9731 477.9365 c
305.1245 476.0669 309.123 469.958 313.7422 472.4976 c
317.9883 472.8066 l
f
/BBAccumRotation (2.223160) XT
0.41 0.01 0.94 0 k
506.1221 428.2139 m
501.8926 429.5845 499.1318 433.7837 494.1807 434.0088 c
488.3154 434.2788 488.0938 430.0142 484.5566 426.75 C
488.0078 425.7148 490.1514 422.5049 494.5059 424.5605 c
497.2773 425.8701 499.5186 430.0684 503.0674 428.3823 c
506.1221 428.2139 l
f
/BBAccumRotation (0.996475) XT
0.47 0.01 0.97 0 k
474.6934 405.3755 m
472.3594 402.6372 468.3662 401.8735 466.665 398.2417 c
464.6465 393.9414 467.7666 392.4541 469.1123 388.8008 C
470.9531 391.0605 474.0176 391.667 473.8301 395.5596 c
473.708 398.0371 471.2627 401.0127 473.6211 403.1431 c
474.6934 405.3755 l
f
/BBAccumRotation (2.174641) XT
0.89 0 0.6141 0.1335 k
508.1611 444.5732 m
506.0947 439.751 505.207 428.8403 509.3809 425.9829 C
509.666 426.395 L
505.7568 429.0698 506.6641 439.8091 508.623 444.374 c
511.6982 451.5537 516.7959 456.2627 522.9863 457.6309 c
526.5342 458.4194 529.7793 457.9063 532.3721 456.1616 c
535.0469 454.3569 536.8682 451.2915 537.5078 447.522 c
538.2676 443.0215 534.5117 438.228 530.9053 437.4595 c
528.4795 436.9395 526.7168 438.2876 525.9521 441.2544 c
525.5869 442.6558 526.0195 443.9717 527.1289 444.8745 c
528.1875 445.7256 529.625 446.0093 530.5654 445.5396 c
531.2363 445.2021 531.5752 444.5264 531.543 443.5815 C
532.043 443.5645 L
532.0801 444.7065 531.6406 445.5635 530.7861 445.9873 c
529.666 446.5469 528.0342 446.2534 526.8164 445.2661 c
525.5459 444.2324 525.0508 442.7261 525.4639 441.1299 c
526.2969 437.9082 528.3203 436.3931 531.0127 436.9683 c
534.8525 437.7861 538.8281 442.7148 538.002 447.606 c
537.3428 451.5088 535.4395 454.6953 532.6523 456.5781 c
529.9443 458.3994 526.5615 458.9331 522.8789 458.1221 c
516.5264 456.7139 511.3018 451.9067 508.1611 444.5732 c
f
/BBAccumRotation (0.374747) XT
0.47 0.01 0.97 0 k
488.7021 411.9194 m
494.5625 411.0693 505.5928 405.4985 505.8857 399.7969 C
505.3193 399.7646 L
505.0469 405.1035 494.1719 410.5552 488.623 411.3584 c
479.8975 412.6265 472.3604 410.4902 467.3965 405.3354 c
464.5488 402.3833 463.1309 398.9561 463.2842 395.4326 c
463.4453 391.793 465.3252 388.2344 468.5771 385.3984 c
472.4639 382.0156 479.292 382.8086 482.1563 385.8301 c
484.085 387.8594 483.8252 390.3496 481.4189 392.834 c
480.2861 394.0107 478.7646 394.3701 477.2402 393.832 c
475.7979 393.3145 474.6777 392.0977 474.5771 390.915 c
474.5059 390.0713 474.957 389.3457 475.8867 388.8223 C
475.6074 388.3291 L
474.4854 388.9668 473.9199 389.8945 474.0156 390.9668 c
474.1357 392.374 475.3789 393.7734 477.0469 394.3643 c
478.791 394.9785 480.5322 394.5684 481.8271 393.2314 c
484.4395 390.5313 484.7061 387.6914 482.5664 385.4365 c
479.5166 382.2197 472.4297 381.2949 468.207 384.9707 c
464.8369 387.9063 462.8887 391.6152 462.7178 395.4087 c
462.5586 399.0884 464.0371 402.6602 466.9873 405.7275 c
472.084 411.0156 479.792 413.2163 488.7021 411.9194 c
f
/BBAccumRotation (0.647098) XT
0.86 0 0.92 0 k
564.0889 293.8613 m
571.8379 288.085 576.5703 298.9365 574.0869 301.625 c
563.0703 313.5605 544.4502 301.7529 544.5166 286.5791 c
547.2305 306.4297 564.0889 293.8613 v
f
0.58 0 0.74 0 k
554.2393 325.8184 m
558.8633 324.4805 559.1699 330.3682 557.543 331.1875 c
550.3164 334.8242 543.7012 326.0596 546.3896 318.9951 c
544.1787 328.7266 554.2393 325.8184 v
f
551.54 280.6621 m
554.3164 277.6367 557.1514 281.793 556.3281 283.1113 c
552.6719 288.9668 543.9648 285.5098 542.792 279.168 c
545.4951 287.2422 551.54 280.6621 v
f
1 Ap
0 0.53 0 0 k
452.7871 410.1245 m
452.7871 405.7705 449.2568 402.2402 444.9023 402.2402 c
440.5479 402.2402 437.0176 405.7705 437.0176 410.1245 c
437.0176 414.4785 440.5479 418.0088 444.9023 418.0088 c
449.2568 418.0088 452.7871 414.4785 452.7871 410.1245 c
f
0 0.07 0 0 k
449.1875 408.0684 m
449.1875 405.3223 446.9629 403.0967 444.2168 403.0967 c
441.4717 403.0967 439.2461 405.3223 439.2461 408.0684 c
439.2461 410.813 441.4717 413.0381 444.2168 413.0381 c
446.9629 413.0381 449.1875 410.813 449.1875 408.0684 c
f
0.31 1 0.05 0 k
444.0879 404.8965 m
444.0879 404.4473 443.7236 404.082 443.2744 404.082 c
442.8252 404.082 442.46 404.4473 442.46 404.8965 c
442.46 405.3462 442.8252 405.7104 443.2744 405.7104 c
443.7236 405.7104 444.0879 405.3462 444.0879 404.8965 c
f
0 0.4 0 0 k
440.7285 390.1807 m
440.7285 386.5947 437.8213 383.6875 434.2354 383.6875 c
430.6494 383.6875 427.7412 386.5947 427.7412 390.1807 c
427.7412 393.7666 430.6494 396.6738 434.2354 396.6738 c
437.8213 396.6738 440.7285 393.7666 440.7285 390.1807 c
f
0 0.07 0 0 k
437.7646 388.4863 m
437.7646 386.2266 435.9316 384.3926 433.6699 384.3926 c
431.4092 384.3926 429.5771 386.2266 429.5771 388.4863 c
429.5771 390.748 431.4092 392.5801 433.6699 392.5801 c
435.9316 392.5801 437.7646 390.748 437.7646 388.4863 c
f
0.31 1 0.05 0 k
433.5645 385.875 m
433.5645 385.5059 433.2646 385.2051 432.8945 385.2051 c
432.5244 385.2051 432.2236 385.5059 432.2236 385.875 c
432.2236 386.2451 432.5244 386.5459 432.8945 386.5459 c
433.2646 386.5459 433.5645 386.2451 433.5645 385.875 c
f
0.1 0.78 0 0 k
491.0293 399.5684 m
484.6865 398.6855 478.8291 403.1104 477.9453 409.4531 c
477.0615 415.7954 481.4873 421.6538 487.8291 422.5366 c
494.1729 423.4204 500.0303 418.9956 500.9141 412.6523 c
501.7979 406.3101 497.3721 400.4517 491.0293 399.5684 c
f
/BBAccumRotation (4.850797) XT
0 0.17 0 0 k
487.3027 404.3936 m
483.3047 403.8369 479.6113 406.6265 479.0537 410.6255 c
478.4971 414.6245 481.2871 418.3174 485.2861 418.874 c
489.2852 419.4307 492.9775 416.6411 493.5342 412.6421 c
494.0918 408.6436 491.3018 404.9512 487.3027 404.3936 c
f
/BBAccumRotation (4.850797) XT
0.31 1 0.05 0 k
481.6494 411.1777 m
480.9951 411.0869 480.3896 411.5444 480.2988 412.1982 c
480.208 412.8535 480.6641 413.459 481.3193 413.5498 c
481.9736 413.6411 482.5791 413.1841 482.6699 412.5293 c
482.7607 411.874 482.3047 411.2695 481.6494 411.1777 c
f
/BBAccumRotation (4.850797) XT
0 0.69 0 0 k
468.1963 411.4985 m
464.0664 408.6782 458.4326 409.7393 455.6123 413.8696 c
452.791 417.9985 453.8525 423.6323 457.9834 426.4526 c
462.1123 429.2734 467.7471 428.2119 470.5664 424.082 c
473.3867 419.9517 472.3252 414.3188 468.1963 411.4985 c
f
0 0.13 0 0 k
463.9141 413.5806 m
461.3105 411.8018 457.7598 412.4712 455.9824 415.0737 c
454.2041 417.6777 454.8721 421.229 457.4756 423.0073 c
460.0801 424.7856 463.6299 424.1162 465.4082 421.5127 c
467.1875 418.9097 466.5176 415.3589 463.9141 413.5806 c
f
0.31 1 0.05 0 k
457.6055 416.3623 m
457.1777 416.0703 456.5957 416.1802 456.3057 416.606 c
456.0137 417.0332 456.124 417.6147 456.5508 417.9058 c
456.9766 418.1973 457.5576 418.0874 457.8486 417.6606 c
458.1396 417.2349 458.0313 416.6533 457.6055 416.3623 c
f
0 1 0.18 0.18 k
503.3525 451.0474 m
506.2949 455.5947 512.3682 456.895 516.916 453.9517 c
521.4648 451.0083 522.7637 444.936 519.8203 440.3887 c
516.8779 435.8408 510.8057 434.54 506.2568 437.4839 c
501.709 440.4272 500.4092 446.4995 503.3525 451.0474 c
f
/BBAccumRotation (2.567166) XT
0 0.08 0 0 k
508.502 450.7622 m
510.3584 453.6289 514.1855 454.4497 517.0527 452.5938 c
519.9199 450.7378 520.7393 446.9097 518.8838 444.043 c
517.0283 441.1758 513.2002 440.3555 510.333 442.2114 c
507.4658 444.0669 506.6465 447.8955 508.502 450.7622 c
f
/BBAccumRotation (2.567166) XT
0.31 1 0.05 0 k
515.9707 450.6274 m
516.2734 451.0972 516.9023 451.231 517.3711 450.9272 c
517.8408 450.6235 517.9746 449.9966 517.6709 449.5264 c
517.3672 449.0571 516.7402 448.9229 516.2705 449.2266 c
515.8018 449.5303 515.666 450.1577 515.9707 450.6274 c
f
/BBAccumRotation (2.567166) XT
0 Ap
0.47 0.01 0.97 0 k
160.6201 340.8232 m
166.249 342.1602 176.4995 348.5381 176.2905 354.1133 C
175.7383 354.0947 L
175.9351 348.875 165.8242 342.627 160.4937 341.3633 c
152.1128 339.373 144.5923 340.7979 139.314 345.3848 c
136.2866 348.0098 134.6099 351.2227 134.4531 354.665 c
134.2954 358.2197 135.8149 361.8467 138.7354 364.8887 c
142.2236 368.5176 148.9365 368.3379 151.9873 365.6465 c
154.0405 363.8398 154.0034 361.3926 151.8765 358.7666 c
150.8755 357.5225 149.4253 357.042 147.8965 357.4326 c
146.4482 357.8105 145.252 358.8975 145.0503 360.041 c
144.9087 360.8555 145.2847 361.6006 146.1431 362.1914 C
145.8296 362.6465 L
144.7939 361.9287 144.3242 360.9766 144.5098 359.9404 c
144.749 358.5811 146.0801 357.3281 147.7549 356.8975 c
149.5049 356.4502 151.1646 357.002 152.3076 358.416 c
154.6152 361.2686 154.6284 364.0576 152.3511 366.0654 c
149.1045 368.9316 142.1265 369.2158 138.3364 365.2705 c
135.311 362.125 133.7368 358.3457 133.8999 354.6387 c
134.064 351.0439 135.8135 347.6963 138.9507 344.9668 c
144.3696 340.2627 152.0596 338.79 160.6201 340.8232 c
f
/BBAccumRotation (2.583393) XT
u
1 Ap
0 1 0.18 0.18 k
156.4189 329.6504 m
151.0625 329.3096 146.4287 333.5928 146.0713 339.2168 c
145.7144 344.8398 149.769 349.6738 155.1274 350.0127 c
160.4844 350.3545 165.1182 346.0713 165.4756 340.4473 c
165.832 334.8242 161.7793 329.9902 156.4189 329.6504 c
f
/BBAccumRotation (4.775812) XT
0 0.08 0 0 k
154.0942 333.8984 m
150.4888 333.6699 147.3799 336.4072 147.1514 340.0127 c
146.9219 343.6191 149.6597 346.7275 153.2651 346.9561 c
156.8701 347.1865 159.979 344.4492 160.2085 340.8428 c
160.4385 337.2363 157.7002 334.1279 154.0942 333.8984 c
f
/BBAccumRotation (4.775812) XT
0.31 1 0.05 0 k
149.5039 340.332 m
148.9141 340.2939 148.4038 340.7432 148.3667 341.334 c
148.3286 341.9248 148.7773 342.4326 149.3691 342.4697 c
149.959 342.5078 150.4673 342.0615 150.5059 341.4688 c
150.543 340.8799 150.0947 340.3691 149.5039 340.332 c
f
/BBAccumRotation (4.775812) XT
U
0.25 0.36 0 0 k
444.8447 365.5977 m
444.8447 363.5811 443.21 361.9453 441.1934 361.9453 c
439.1748 361.9453 437.54 363.5811 437.54 365.5977 c
437.54 367.6152 439.1748 369.25 441.1934 369.25 c
443.21 369.25 444.8447 367.6152 444.8447 365.5977 c
f
0 Ap
0.89 0 0.6141 0.1335 k
485.2607 279.1973 m
483.374 271.1318 486.0645 262.1455 491.8008 257.3447 c
496.583 253.3438 502.7598 252.667 509.1914 255.4414 c
515.1338 258.0039 520.5928 264.2578 519.0049 270.8057 c
517.9473 275.1729 513.4482 278.2773 510.1309 278.1367 c
508.1543 278.0518 506.8408 276.8311 506.5273 274.7861 C
507.4258 274.6484 L
507.7393 276.6963 509.0918 277.1807 510.1689 277.2275 c
513.0742 277.3516 517.1787 274.4795 518.1211 270.5918 c
519.5371 264.748 514.5107 258.7246 508.832 256.2764 c
502.7314 253.6455 496.8896 254.2734 492.3848 258.042 c
486.9014 262.6309 484.335 271.2461 486.1465 278.9912 c
489.8887 294.9932 502.417 299.4697 512.9131 301.5811 c
517.2363 302.4521 534.4668 303.7852 540.6436 298.252 c
542.1826 296.8711 542.8711 295.1406 542.6914 293.1074 C
543.5957 293.0273 L
543.8047 295.3623 543.0137 297.3486 541.249 298.9297 c
534.8164 304.6934 517.1563 303.3623 512.7324 302.4736 c
501.9697 300.3076 489.1201 295.7031 485.2607 279.1973 c
f
/BBAccumRotation (0.355737) XT
0.59 0 0.85 0 k
482.9619 271.8896 m
481.5498 267.9443 483.5137 263.5605 480.6582 259.7002 c
477.2754 255.123 473.415 257.292 468.3828 256.4102 C
469.6084 259.584 468.126 262.958 472.6064 265.1191 c
475.4609 266.4951 480.5078 265.8877 481.2246 269.4902 c
482.9619 271.8896 l
f
/BBAccumRotation (3.095020) XT
0.47 0.01 0.97 0 k
484.1436 260.543 m
484.3252 257.9063 486.5674 255.8721 485.8945 252.9199 c
485.0977 249.4219 482.3203 249.6992 479.6367 247.917 C
479.542 250.0596 477.832 251.6338 479.873 254.0146 c
481.1748 255.5313 484.2441 256.4561 483.7471 258.7178 c
484.1436 260.543 l
f
/BBAccumRotation (3.507594) XT
0.41 0.01 0.94 0 k
488.0625 267.0166 m
491.8408 265.2588 493.9307 261.0391 498.5098 260.2656 c
503.9355 259.3467 504.627 263.2871 508.2891 265.9209 C
505.1963 267.2773 503.5684 270.5068 499.2842 269.0918 c
496.5566 268.1885 493.9932 264.5391 490.8848 266.5117 c
488.0625 267.0166 l
f
/BBAccumRotation (4.016208) XT
u
0.32 0.47 0 0 k
506.2568 287.1348 m
505.2803 289.8262 496.5703 287.3271 496.5234 287.3994 C
500.7637 289.4697 505.3535 292.626 501.4854 295.3633 c
499.1504 297.0137 493.3213 290.0557 493.1875 290.1084 C
495.3545 294.4482 497.4033 300.3174 492.4424 300.0479 c
489.5098 299.8906 489.2148 294.7549 489.6426 290.5654 C
489.5908 290.5586 489.5391 290.5498 489.4883 290.543 C
488.8047 295.3662 487.1426 301.5176 483.1777 298.4336 c
480.8906 296.6543 486.0596 289.0742 485.998 289.0254 C
482.4795 292.3877 477.3965 296.1641 476.1895 291.3027 c
475.5205 288.6006 483.7178 285.792 483.6865 285.6963 C
478.9775 286.3545 473.2598 286.3281 474.9736 281.8555 c
475.9121 279.418 483.6396 281.2813 483.6846 281.1416 C
479.7842 279.0107 476.1445 276.0439 479.7822 273.5703 c
481.7656 272.2168 484.3711 274.5898 486.457 277.4678 C
486.6816 277.3154 484.7021 268.8096 488.9404 269.1006 c
491.3457 269.2666 491.9199 272.7666 491.7773 276.3291 C
491.8828 276.3477 494.5234 268.3389 497.877 270.8525 c
499.8896 272.3594 496.2744 279.0908 496.3701 279.2246 C
499.7031 276.1641 503.8359 273.5273 504.9951 277.8555 c
505.7002 280.4932 497.7236 283.3613 497.7236 283.4121 C
502.373 282.7041 507.8643 282.7061 506.2568 287.1348 c
f
1 Ap
0 0.78 0 0 k
496.6924 285.1152 m
496.6924 281.709 493.9307 278.9482 490.5244 278.9482 c
487.1191 278.9482 484.3584 281.709 484.3584 285.1152 c
484.3584 288.5215 487.1191 291.2813 490.5244 291.2813 c
493.9307 291.2813 496.6924 288.5215 496.6924 285.1152 c
f
U
0 Ap
0.43 0 0.79 0 k
530.084 296.3271 m
534.0195 295.2021 541.0586 290.3604 540.7314 286.4268 C
540.3398 286.458 L
540.6494 290.1396 533.7061 294.8848 529.9775 295.9521 c
524.1182 297.6289 518.7568 296.8662 514.877 293.7969 c
512.6514 292.0391 511.3613 289.8213 511.1387 287.3945 c
510.9131 284.8857 511.8691 282.2744 513.834 280.0283 c
516.1826 277.3496 520.9336 277.2588 523.1758 279.0635 c
524.6875 280.2734 524.7402 282.0049 523.3232 283.9307 c
522.6543 284.8408 521.6445 285.2285 520.5518 285.001 c
519.5156 284.7803 518.6357 284.0518 518.4561 283.251 c
518.3291 282.6787 518.5713 282.1406 519.1582 281.6953 C
518.9229 281.3838 L
518.2139 281.9229 517.9121 282.6133 518.0762 283.3389 c
518.29 284.291 519.2725 285.1338 520.4678 285.3838 c
521.7217 285.6436 522.876 285.2012 523.6377 284.1641 c
525.1768 282.0713 525.0957 280.1006 523.4199 278.7549 c
521.0332 276.835 516.0918 276.8604 513.541 279.7715 c
511.5049 282.0938 510.5137 284.8145 510.75 287.4307 c
510.9824 289.9648 512.3271 292.2754 514.6328 294.1025 c
518.6162 297.2529 524.0996 298.0439 530.084 296.3271 c
f
/BBAccumRotation (0.512336) XT
1 Ap
0 1 0.18 0.18 k
538.6494 286.9326 m
536.2412 282.7793 530.9229 281.3652 526.7686 283.7734 c
522.6162 286.1807 521.2012 291.5 523.6104 295.6533 c
526.0186 299.8066 531.3369 301.2217 535.4902 298.8135 c
539.6436 296.4053 541.0586 291.0859 538.6494 286.9326 c
f
0 0.13 0 0 k
534.0791 286.9619 m
532.5605 284.3428 529.208 283.4512 526.5889 284.9707 c
523.9717 286.4883 523.0781 289.8408 524.5977 292.46 c
526.1162 295.0781 529.4688 295.9688 532.0869 294.4512 c
534.7051 292.9336 535.5967 289.5801 534.0791 286.9619 c
f
0.31 1 0.05 0 k
527.4619 286.7568 m
527.2129 286.3281 526.6641 286.1826 526.2354 286.4307 c
525.8066 286.6797 525.6592 287.2295 525.9082 287.6572 c
526.1572 288.0869 526.707 288.2324 527.1357 287.9834 c
527.5645 287.7344 527.7109 287.1865 527.4619 286.7568 c
f
0 0.5 1 0 k
500.373 254.3164 m
500.373 251.3555 497.9717 248.9531 495.0098 248.9531 c
492.0479 248.9531 489.6465 251.3555 489.6465 254.3164 c
489.6465 257.2783 492.0479 259.6807 495.0098 259.6807 c
497.9717 259.6807 500.373 257.2783 500.373 254.3164 c
f
0 0.22 1 0 k
519.7295 262.5742 m
519.7295 260.6846 518.1982 259.1523 516.3076 259.1523 c
514.417 259.1523 512.8848 260.6846 512.8848 262.5742 c
512.8848 264.4658 514.417 265.9971 516.3076 265.9971 c
518.1982 265.9971 519.7295 264.4658 519.7295 262.5742 c
f
0 0.1 1 0 k
520.5996 271.2676 m
520.5996 269.3779 519.0674 267.8447 517.1777 267.8447 c
515.2861 267.8447 513.7549 269.3779 513.7549 271.2676 c
513.7549 273.1572 515.2861 274.6904 517.1777 274.6904 c
519.0674 274.6904 520.5996 273.1572 520.5996 271.2676 c
f
0 0.35 1 0 k
512.6133 256.0557 m
512.6133 253.5352 510.5703 251.4922 508.0498 251.4922 c
505.5293 251.4922 503.4854 253.5352 503.4854 256.0557 c
503.4854 258.5752 505.5293 260.6191 508.0498 260.6191 c
510.5703 260.6191 512.6133 258.5752 512.6133 256.0557 c
f
0 Ap
0.43 0 0.79 0 k
265.8496 260.4639 m
266.6733 263.5566 266.2554 270.2539 263.4961 271.6553 C
263.3604 271.3818 L
265.9448 270.0713 266.3354 263.4775 265.5562 260.5469 c
264.3315 255.9414 261.6768 252.6738 258.0732 251.3457 c
256.0088 250.584 254.0107 250.6357 252.3003 251.4863 c
250.5332 252.3682 249.1714 254.084 248.457 256.3213 c
247.6069 258.9932 249.4478 262.2051 251.5508 262.96 c
252.9644 263.4717 254.1431 262.7939 254.8613 261.0537 c
255.2021 260.2324 255.0576 259.3975 254.4678 258.7617 c
253.9063 258.1602 253.0664 257.8721 252.46 258.082 c
252.0269 258.2324 251.7642 258.6152 251.7012 259.1914 C
251.3989 259.1631 L
251.4751 258.4678 251.8164 257.9805 252.3662 257.793 c
253.0879 257.542 254.0444 257.8516 254.6904 258.5479 c
255.3647 259.2773 255.5308 260.2314 255.144 261.168 c
254.3613 263.0586 253.0122 263.8154 251.4429 263.251 c
249.2041 262.4453 247.2441 259.1348 248.168 256.2314 c
248.9043 253.9141 250.3262 252.1309 252.168 251.2109 c
253.9541 250.3232 256.0366 250.2686 258.1802 251.0576 c
261.8794 252.4209 264.6016 255.7588 265.8496 260.4639 c
f
/BBAccumRotation (0.512336) XT
1 Ap
0 0.35 1 0 k
153.3154 205.2588 m
153.3154 203.3691 151.7837 201.8359 149.8931 201.8359 c
148.0024 201.8359 146.4707 203.3691 146.4707 205.2588 c
146.4707 207.1504 148.0024 208.6826 149.8931 208.6826 c
151.7837 208.6826 153.3154 207.1504 153.3154 205.2588 c
f
0 Ap
0.43 0 0.79 0 k
255.8457 288.9482 m
253.3003 291.126 249.7998 297.0498 251.5117 299.7539 C
251.7949 299.5938 L
250.1899 297.0654 253.6543 291.2441 256.0654 289.1797 c
259.8545 285.9355 264.1777 284.6113 268.2451 285.4561 c
270.5757 285.9395 272.374 287.0781 273.4453 288.7383 c
274.5503 290.4561 274.8027 292.6602 274.1587 294.9541 c
273.3882 297.6924 269.8418 299.4141 267.4805 298.9043 c
265.8906 298.5645 265.2056 297.3428 265.5562 295.4697 c
265.7217 294.584 266.3379 293.9541 267.2461 293.7354 c
268.1089 293.5322 269.0435 293.7471 269.4766 294.2588 c
269.7856 294.624 269.8042 295.0928 269.5264 295.6182 C
269.8203 295.7578 L
270.1538 295.125 270.123 294.5254 269.73 294.0625 c
269.2144 293.4551 268.1602 293.1943 267.166 293.4316 c
266.126 293.6826 265.4204 294.4043 265.2329 295.4111 c
264.8521 297.4482 265.6479 298.8311 267.4116 299.21 c
269.9253 299.752 273.6387 298.0107 274.4756 295.0371 c
275.1455 292.6631 274.8774 290.3682 273.7256 288.5771 c
272.606 286.8428 270.7324 285.6572 268.314 285.1523 c
264.1401 284.2852 259.7139 285.6318 255.8457 288.9482 c
f
/BBAccumRotation (3.197654) XT
0.89 0 0.6141 0.1335 k
296.9438 299.5811 m
294.4922 305.5713 288.3418 311.1465 281.7656 309.6807 c
277.3794 308.7051 274.1904 304.2656 274.2695 300.9453 c
274.3169 298.9678 275.5122 297.6328 277.5513 297.2813 C
277.7065 298.1758 L
275.6646 298.5293 275.2051 299.8887 275.1787 300.9668 c
275.1099 303.875 278.0581 307.9248 281.9634 308.7939 c
287.8315 310.0986 293.7607 304.9609 296.1016 299.2373 c
298.6167 293.0889 297.8789 287.2598 294.0273 282.8262 c
289.3364 277.4297 280.6738 275.0264 272.9648 276.9824 c
257.0361 281.0244 252.7949 293.6338 250.8813 304.168 c
250.8086 304.5674 250.7344 305.0771 250.6631 305.6758 C
250.3447 305.792 250.0288 305.9063 249.7114 306.0215 C
249.7988 305.2021 249.8926 304.5127 249.9854 304.0039 c
251.9497 293.2041 256.3115 280.2695 272.7412 276.1016 c
280.771 274.0625 289.8062 276.584 294.7139 282.2295 c
298.8047 286.9355 299.5957 293.0977 296.9438 299.5811 c
f
0.57 0 0.35 0 k
280.0054 273.6641 m
283.9233 272.1787 288.3438 274.0596 292.1484 271.1328 c
296.6621 267.665 294.4209 263.8467 295.2075 258.7988 C
292.0586 260.083 288.6563 258.6631 286.5801 263.1836 c
285.2578 266.0645 285.96 271.0986 282.3716 271.8828 c
280.0054 273.6641 l
f
/BBAccumRotation (4.647044) XT
0.47 0.01 0.97 0 k
291.3726 274.6338 m
294.0112 274.7656 296.0874 276.9697 299.0264 276.2402 c
302.5093 275.3789 302.1792 272.6064 303.9106 269.8896 C
301.7676 269.8359 300.1616 268.1563 297.8193 270.2422 c
296.3281 271.5713 295.4609 274.6572 293.1895 274.2021 c
291.3726 274.6338 l
f
/BBAccumRotation (5.059619) XT
0.41 0.01 0.94 0 k
284.9731 278.6729 m
286.8013 282.418 291.0601 284.4277 291.9189 288.9912 c
292.9395 294.3994 289.0127 295.165 286.4482 298.876 C
285.0347 295.8086 281.7739 294.2432 283.1089 289.9316 c
283.9604 287.1885 287.5615 284.5566 285.5308 281.4854 c
284.9731 278.6729 l
f
/BBAccumRotation (5.568233) XT
1 Ap
0 0.5 1 0 k
297.9023 290.7432 m
300.8628 290.6875 303.2192 288.2412 303.1631 285.2803 c
303.1074 282.3193 300.6611 279.9639 297.7007 280.0195 c
294.7383 280.0742 292.3838 282.5205 292.4385 285.4824 c
292.4937 288.4424 294.9404 290.7988 297.9023 290.7432 c
f
/BBAccumRotation (1.552025) XT
86.3311 289.2109 m
88.7427 289.165 90.6631 287.1719 90.6172 284.7588 c
90.5718 282.3457 88.5786 280.4258 86.1665 280.4717 c
83.7524 280.5166 81.8335 282.5098 81.8779 284.9229 c
81.9233 287.3359 83.917 289.2559 86.3311 289.2109 c
f
/BBAccumRotation (1.552025) XT
0 0.16 1 0 k
281.334 311.2852 m
283.2231 311.25 284.7275 309.6885 284.6919 307.7998 c
284.6563 305.9063 283.0952 304.4043 281.2051 304.4404 c
279.3154 304.4756 277.811 306.0361 277.8467 307.9277 c
277.8828 309.8174 279.4443 311.3203 281.334 311.2852 c
f
/BBAccumRotation (1.552025) XT
0 0.26 1 0 k
296.3931 303.0137 m
298.9136 302.9668 300.918 300.8848 300.8711 298.3652 c
300.8228 295.8457 298.7412 293.8408 296.2222 293.8877 c
293.7017 293.9355 291.6978 296.0166 291.7441 298.5371 c
291.7915 301.0566 293.8735 303.0615 296.3931 303.0137 c
f
/BBAccumRotation (1.552025) XT
0.32 0.47 0 0 k
439.1064 374.4111 m
439.1064 371.7217 436.9258 369.541 434.2363 369.541 c
431.5469 369.541 429.3662 371.7217 429.3662 374.4111 c
429.3662 377.1006 431.5469 379.2813 434.2363 379.2813 c
436.9258 379.2813 439.1064 377.1006 439.1064 374.4111 c
f
0 Ap
0.61 0 0.87 0 k
558.249 310.5352 m
564.3223 307.9043 565.7705 315.8789 563.6934 317.2832 c
554.4746 323.5059 543.9199 312.71 546.3496 302.6064 c
545.0391 316.2637 558.249 310.5352 v
f
0.75 0.05 1 0 k
472.1357 407.7412 m
469.7461 406.2534 468.9512 403.127 465.8369 402.2866 c
462.1475 401.2891 461.0205 404.0405 458.0049 405.6758 C
459.9736 406.8354 460.6006 409.23 463.8604 408.4985 c
465.9365 408.0313 468.3408 405.6064 470.2197 407.2026 c
472.1357 407.7412 l
f
/BBAccumRotation (2.424798) XT
u
1 Ap
0 0.53 0 0 k
61.3267 302.5459 m
61.3413 306.3877 64.4673 309.4912 68.3101 309.4775 c
72.1519 309.4629 75.2554 306.3359 75.2407 302.4941 c
75.2266 298.6523 72.1001 295.5498 68.2583 295.5645 c
64.416 295.5781 61.313 298.7041 61.3267 302.5459 c
f
/BBAccumRotation (3.137891) XT
0 0.07 0 0 k
64.5103 304.3477 m
64.519 306.7715 66.4893 308.7275 68.9121 308.7188 c
71.334 308.71 73.2905 306.7393 73.2817 304.3154 c
73.2725 301.8945 71.3018 299.9385 68.8799 299.9473 c
66.457 299.9561 64.501 301.9268 64.5103 304.3477 c
f
/BBAccumRotation (3.137891) XT
0.31 1 0.05 0 k
69.02 307.1309 m
69.0215 307.5273 69.3438 307.8477 69.7402 307.8457 c
70.1367 307.8447 70.458 307.5215 70.4565 307.125 c
70.4551 306.7285 70.1318 306.4072 69.7354 306.4092 c
69.3389 306.4102 69.0186 306.7344 69.02 307.1309 c
f
/BBAccumRotation (3.137891) XT
U
u
0 0.4 0 0 k
63.0747 318.626 m
63.7734 320.9902 66.2563 322.3408 68.6206 321.6416 c
70.9849 320.9434 72.3359 318.46 71.6372 316.0957 c
70.9385 313.7314 68.4551 312.3818 66.0908 313.0801 c
63.7266 313.7793 62.376 316.2617 63.0747 318.626 c
f
/BBAccumRotation (2.854259) XT
0 0.07 0 0 k
65.3594 319.166 m
65.7998 320.6563 67.3652 321.5068 68.8564 321.0674 c
70.3467 320.627 71.1978 319.0615 70.7568 317.5713 c
70.3164 316.0801 68.7515 315.2285 67.2612 315.6689 c
65.7705 316.1094 64.9189 317.6758 65.3594 319.166 c
f
/BBAccumRotation (2.854259) XT
0.31 1 0.05 0 k
68.6367 320.0684 m
68.709 320.3135 68.9653 320.4521 69.2095 320.3809 c
69.4536 320.3086 69.5928 320.0518 69.5205 319.8086 c
69.4487 319.5635 69.1924 319.4248 68.9482 319.4961 c
68.7041 319.5693 68.5645 319.8252 68.6367 320.0684 c
f
/BBAccumRotation (2.854259) XT
U
u
0.1 0.78 0 0 k
72.0376 260.7109 m
68.9756 265.5156 70.3872 271.8896 75.1909 274.9521 c
79.9937 278.0146 86.3706 276.6035 89.4326 271.7998 c
92.4946 266.9961 91.0835 260.6201 86.2798 257.5566 c
81.4761 254.4961 75.0991 255.9072 72.0376 260.7109 c
f
/BBAccumRotation (3.709118) XT
0 0.17 0 0 k
74.5615 265.5107 m
72.6318 268.5391 73.5215 272.5586 76.5493 274.4893 c
79.5781 276.4199 83.5977 275.5313 85.5283 272.501 c
87.4585 269.4736 86.5688 265.4531 83.54 263.5225 c
80.5117 261.5928 76.4922 262.4834 74.5615 265.5107 c
f
/BBAccumRotation (3.709118) XT
0.31 1 0.05 0 k
77.9565 272.5947 m
77.6411 273.0908 77.7866 273.749 78.2822 274.0654 c
78.7783 274.3809 79.4375 274.2354 79.7529 273.7393 c
80.0693 273.2432 79.9238 272.585 79.4277 272.2695 c
78.9321 271.9531 78.2734 272.0996 77.9565 272.5947 c
f
/BBAccumRotation (3.709118) XT
U
u
0 0.69 0 0 k
63.0479 281.7354 m
60.5122 285.2998 61.3452 290.2451 64.9106 292.7813 c
68.4736 295.3184 73.4189 294.4844 75.9551 290.9199 c
78.4927 287.3564 77.6582 282.4102 74.0947 279.874 c
70.5293 277.3379 65.5845 278.1719 63.0479 281.7354 c
f
0 0.13 0 0 k
64.7969 285.5156 m
63.1973 287.7627 63.7236 290.8799 65.9692 292.4785 c
68.2173 294.0781 71.334 293.5537 72.9336 291.3057 c
74.5332 289.0576 74.0073 285.9424 71.7603 284.3428 c
69.5132 282.7422 66.396 283.2676 64.7969 285.5156 c
f
0.31 1 0.05 0 k
67.1245 291.0801 m
66.8618 291.4492 66.9473 291.9609 67.3154 292.2217 c
67.6836 292.4844 68.1943 292.3984 68.4561 292.0293 c
68.7173 291.6611 68.6318 291.1514 68.2637 290.8896 c
67.896 290.6279 67.3857 290.7129 67.1245 291.0801 c
f
U
0.25 0.36 0 0 k
81.7046 330.1504 m
81.7046 328.8975 80.6885 327.8809 79.4355 327.8809 c
78.1821 327.8809 77.1665 328.8975 77.1665 330.1504 c
77.1665 331.4033 78.1821 332.4199 79.4355 332.4199 c
80.6885 332.4199 81.7046 331.4033 81.7046 330.1504 c
f
0.32 0.47 0 0 k
76.6733 325.3662 m
76.6733 323.6953 75.3188 322.3398 73.6479 322.3398 c
71.9771 322.3398 70.6226 323.6953 70.6226 325.3662 c
70.6226 327.0361 71.9771 328.3916 73.6479 328.3916 c
75.3188 328.3916 76.6733 327.0361 76.6733 325.3662 c
f
0 Ap
0.75 0.05 1 0 k
135.0347 219.3438 m
134.937 215.5039 137.9063 212.251 136.5283 208.0713 c
134.8979 203.1162 130.915 203.8965 126.7886 201.6826 C
126.9434 204.7979 124.6841 207.3105 127.9624 210.4766 c
130.0527 212.4941 134.6206 213.416 134.2104 216.7549 c
135.0347 219.3438 l
f
/BBAccumRotation (3.413619) XT
0.38 0.01 0.87 0 k
139.9043 210.5039 m
140.8052 207.9492 143.5786 206.5527 143.7212 203.4541 c
143.8926 199.7813 141.0732 199.2939 138.9121 196.7988 C
138.2314 198.8896 136.1118 199.9756 137.4751 202.8857 c
138.3447 204.7393 141.1211 206.4951 140.0122 208.5918 c
139.9043 210.5039 l
f
/BBAccumRotation (3.778185) XT
u
0.47 0.01 0.97 0 k
301.9224 413.3354 m
302.3169 414.5034 304.0015 416.5879 305.3672 416.4878 C
305.356 416.3716 L
304.0781 416.4663 302.4258 414.4092 302.0532 413.3042 c
301.4658 411.5664 301.7266 409.9751 302.7891 408.8213 c
303.397 408.1602 304.166 407.7764 305.0083 407.7075 c
305.8779 407.6392 306.7852 407.9209 307.5664 408.5034 c
308.498 409.1978 308.5332 410.6074 307.9092 411.2744 c
307.4902 411.7241 306.8892 411.7397 306.2197 411.3203 c
305.9033 411.123 305.7681 410.8252 305.8457 410.5 c
305.9214 410.1924 306.1738 409.9307 306.4517 409.876 c
306.6504 409.8389 306.8374 409.9092 306.9917 410.085 C
307.1006 410.0137 L
306.9116 409.8032 306.6729 409.7144 306.4209 409.7646 c
306.0908 409.8276 305.7983 410.1196 305.7129 410.4761 c
305.624 410.8467 305.7783 411.1899 306.1387 411.415 c
306.8662 411.8701 307.5508 411.8457 308.0156 411.3477 c
308.6807 410.6377 308.668 409.1719 307.6563 408.416 c
306.8481 407.8135 305.9028 407.5215 304.9951 407.5933 c
304.1152 407.6636 303.3149 408.064 302.6826 408.7495 c
301.5928 409.9336 301.3218 411.561 301.9224 413.3354 c
f
/BBAccumRotation (2.080903) XT
1 Ap
301.7979 431.6987 m
307.8672 446.0522 317.3789 456.2686 323.0371 454.5186 c
328.6953 452.769 328.3604 439.7144 322.2871 425.3623 c
316.2158 411.0098 306.707 400.793 301.0479 402.5449 c
295.3906 404.2939 295.7251 417.3467 301.7979 431.6987 c
Bb
1 (Unnamed gradient 6) 328.6055 252.8799 91.5072 144.3537 -0.3842 -0.1139 0.1332 -0.3285 10247.7256 11817.9648 Bg
-17.7625 -47.8363 -23.652 6.42119 328.9902 439.1123 Xm
-1015.7643 -2735.5583 -23.652 6.42119 1344.7549 3174.6709 Bc
-17.7625 -47.8363 -23.652 6.42119 328.9902 439.1123 Bm
-1015.7643 -2735.5583 -23.652 6.42119 311.2275 391.2764 Bc
f
0 BB
/BBAccumRotation (2.794513) XT
313.9883 432.1431 m
314.0996 444.2495 319.0645 454.0298 325.0742 453.9873 c
331.084 453.9473 335.8623 444.0996 335.75 431.9946 c
335.6367 419.8892 330.6748 410.1094 324.6641 410.1523 c
318.6553 410.1924 313.875 420.0391 313.9883 432.1431 c
Bb
1 (Unnamed gradient 5) 277.999 231.2354 89.3561 112.6653 -0.5022 0.0012 -0.0035 -0.341 12338.6475 10982.4902 Bg
-0.241545 -38.418 -23.8441 0.124974 336.8662 443.9678 Xm
-17.5699 -2794.5083 -23.8441 0.124974 354.4365 3238.4761 Bc
-0.241545 -38.418 -23.8441 0.124974 336.8662 443.9678 Bm
-17.5699 -2794.5083 -23.8441 0.124974 336.625 405.5498 Bc
f
0 BB
/BBAccumRotation (3.133591) XT
296.8784 446.1875 m
307.0313 454.6255 318.6602 458.4751 322.8477 454.7896 c
327.0352 451.105 322.1982 441.2773 312.041 432.8433 c
301.8877 424.4077 290.2607 420.5562 286.0737 424.2432 c
281.8853 427.9272 286.7227 437.7539 296.8784 446.1875 c
Bb
1 (Unnamed gradient 5) 277.4092 231.2412 89.3561 112.6653 -0.3537 -0.3048 0.2813 -0.2417 8736.5996 12646.1445 Bg
-32.1386 -26.8436 -16.6471 14.604 323.3545 441.0425 Xm
-2337.0156 -1951.9796 -16.6471 14.604 2660.3701 2393.022 Bc
-32.1386 -26.8436 -16.6471 14.604 323.3545 441.0425 Bm
-2337.0156 -1951.9796 -16.6471 14.604 291.2158 414.1987 Bc
f
0 BB
/BBAccumRotation (2.341750) XT
0 0 0.4284 0 k
308.0283 410.666 m
308.5098 411.9561 309.4209 412.8589 310.0605 412.6846 c
310.7012 412.5083 310.8281 411.3218 310.3457 410.0322 c
309.8633 408.7427 308.9531 407.8394 308.3125 408.0156 c
307.6729 408.1899 307.5449 409.3779 308.0283 410.666 c
f
/BBAccumRotation (2.831909) XT
305.4468 412.3623 m
305.9297 413.6519 306.8398 414.5552 307.4785 414.3818 c
308.1191 414.2061 308.248 413.0181 307.7646 411.7285 c
307.2813 410.4385 306.3716 409.5371 305.7319 409.7114 c
305.0913 409.8862 304.9639 411.0728 305.4468 412.3623 c
f
/BBAccumRotation (2.831909) XT
330.2109 429.3438 m
330.1553 430.5527 329.624 431.5181 329.0234 431.4976 c
328.4209 431.4766 327.9805 430.48 328.0371 429.27 c
328.0938 428.0601 328.625 427.0957 329.2266 427.1162 c
329.8271 427.1367 330.2676 428.1343 330.2109 429.3438 c
f
/BBAccumRotation (3.229256) XT
327.0547 428.3823 m
326.999 429.5923 326.4648 430.5566 325.8662 430.5361 c
325.2656 430.5161 324.8242 429.5181 324.8809 428.3086 c
324.9355 427.0996 325.4688 426.1343 326.0684 426.1558 c
326.6689 426.1758 327.1123 427.1733 327.0547 428.3823 c
f
/BBAccumRotation (3.229256) XT
308.8242 445.1655 m
309.9375 445.9121 310.541 446.8467 310.1699 447.2505 c
309.8008 447.6553 308.5957 447.377 307.4814 446.6309 c
306.3677 445.8838 305.7637 444.9502 306.1343 444.5459 c
306.5049 444.1411 307.709 444.4189 308.8242 445.1655 c
f
/BBAccumRotation (2.283494) XT
306.0649 446.793 m
307.1797 447.5391 307.7822 448.4731 307.4111 448.877 c
307.041 449.2827 305.8364 449.0044 304.7227 448.2568 c
303.6079 447.5107 303.0044 446.5771 303.3755 446.1729 c
303.7471 445.7686 304.9507 446.0459 306.0649 446.793 c
f
/BBAccumRotation (2.283494) XT
306.7598 422.688 m
307.3154 423.9561 307.2539 425.147 306.6245 425.3491 c
305.9941 425.5498 305.0352 424.6851 304.4805 423.416 c
303.9263 422.1484 303.9868 420.957 304.6172 420.7559 c
305.2456 420.5547 306.2056 421.4194 306.7598 422.688 c
f
/BBAccumRotation (2.831909) XT
310.0156 422.6543 m
310.5703 423.9229 310.5098 425.1143 309.8789 425.3159 c
309.25 425.5171 308.291 424.6514 307.7363 423.3838 c
307.1816 422.1157 307.2422 420.9238 307.8711 420.7231 c
308.501 420.522 309.4609 421.3862 310.0156 422.6543 c
f
/BBAccumRotation (2.831909) XT
0 Ap
0.78 0 0.5382 0.117 k
313.3125 458.4663 m
320.7627 456.2715 L
318.4102 462.7031 L
322.4648 456.9272 L
325.502 463.1445 L
324.2676 456.4912 L
331.2656 459.5864 L
325.3184 455.167 L
333.0049 453.6924 L
325.127 453.5781 L
329.9102 448.2207 L
323.7871 452.4624 L
323.4238 445.7324 L
321.9219 452.3457 L
316.583 447.3892 L
320.4043 453.2827 L
312.5898 452.4185 L
319.9473 454.833 L
313.3125 458.4663 L
f
/BBAccumRotation (2.341758) XT
U
0.89 0 0.6141 0.1335 k
328.0391 466.3496 m
322.4805 457.4956 320.793 449.0718 323.5234 443.8145 C
324.1729 444.1523 L
321.5645 449.1763 323.2422 457.3281 328.6592 465.96 c
334.6504 475.5049 345.5664 485.6475 355.377 485.3608 C
355.3984 486.0938 L
345.3008 486.3882 334.1367 476.0654 328.0391 466.3496 c
f
u
u
0.47 0.01 0.97 0 k
230.2002 467.2822 m
231.4956 467.2725 234.0537 466.3418 234.2891 465.04 C
234.166 465.0146 L
233.9478 466.2344 231.4258 467.1426 230.1992 467.1509 c
228.2695 467.1655 226.6997 466.4341 225.7778 465.0913 c
225.249 464.3208 225.0444 463.4878 225.1826 462.6826 c
225.3271 461.8496 225.8403 461.0908 226.6309 460.542 c
227.5752 459.8877 229.0322 460.2871 229.562 461.0732 c
229.9194 461.6011 229.7886 462.1655 229.1934 462.6606 c
228.9116 462.896 228.5708 462.9292 228.2563 462.7568 c
227.959 462.5928 227.7529 462.2769 227.7666 462.001 c
227.7764 461.8062 227.896 461.6528 228.1138 461.5615 C
228.0674 461.4395 L
227.8047 461.5508 227.6543 461.7466 227.6436 461.9961 c
227.627 462.3232 227.855 462.6851 228.1987 462.874 c
228.5581 463.0713 228.9482 463.0313 229.2686 462.7656 c
229.9165 462.2271 230.0591 461.582 229.6631 460.9956 c
229.0981 460.1592 227.5894 459.7207 226.5635 460.4321 c
225.7446 461.0005 225.2114 461.7915 225.061 462.6587 c
224.916 463.5 225.1299 464.3691 225.6777 465.168 c
226.6235 466.5464 228.229 467.2969 230.2002 467.2822 c
f
1 Ap
249.0298 473.0288 m
265.269 471.7739 278.1123 466.0459 277.7124 460.2378 c
277.3149 454.4297 263.8232 450.7388 247.5835 451.9966 c
231.3433 453.2534 218.501 458.9785 218.9009 464.7881 c
219.2993 470.5952 232.7881 474.2852 249.0298 473.0288 c
Bb
1 (Unnamed gradient 6) 328.1348 252.8672 91.5072 144.3537 0.022 -0.3929 0.3703 0.0234 4881.5557 11156.9404 Bg
-53.5192 1.88492 0.747596 24.0023 263 449.9805 Xm
-3060.7322 107.7973 0.747596 24.0023 3323.7324 342.1836 Bc
-53.5192 1.88492 0.747596 24.0023 263 449.9805 Bm
-3060.7322 107.7973 0.747596 24.0023 209.481 451.8652 Bc
f
0 BB
252.4976 461.8071 m
264.9575 465.415 276.229 463.7891 277.6714 458.1758 c
279.1138 452.5669 270.1816 445.0938 257.7207 441.4888 c
245.2612 437.8823 233.9907 439.5068 232.5483 445.1196 c
231.1055 450.7295 240.0376 458.2017 252.4976 461.8071 c
Bb
1 (Unnamed gradient 5) 276.7529 231.249 89.3561 112.6653 -0.1252 -0.4675 0.3493 -0.1079 6256.2368 12848.7695 Bg
-39.51 -11.5639 -5.75991 22.2614 270.9292 444.3042 Xm
-2872.8691 -840.8393 -5.75991 22.2614 3143.7979 1285.1436 Bc
-39.51 -11.5639 -5.75991 22.2614 270.9292 444.3042 Bm
-2872.8691 -840.8393 -5.75991 22.2614 231.4189 432.7402 Bc
f
0 BB
262.6934 482.0532 m
273.8691 475.1812 280.6948 465.5283 277.9443 460.4966 c
275.1948 455.4663 263.9063 456.96 252.7349 463.8345 c
241.563 470.7095 234.7344 480.3599 237.4858 485.3916 c
240.2358 490.4229 251.5225 488.9292 262.6934 482.0532 c
Bb
1 (Unnamed gradient 5) 277.3145 231.2422 89.3561 112.6653 0.2256 -0.423 0.3178 0.188 3657.6233 10003.0391 Bg
-35.5171 21.7153 10.8832 19.9876 264.0596 455.7441 Xm
-2582.5549 1578.9841 10.8832 19.9876 2846.6143 -1123.2402 Bc
-35.5171 21.7153 10.8832 19.9876 264.0596 455.7441 Bm
-2582.5549 1578.9841 10.8832 19.9876 228.5425 477.4595 Bc
f
0 BB
0 0 0.4284 0 k
228.9668 460.7754 m
230.4106 460.7222 231.5625 460.1504 231.5415 459.5005 c
231.52 458.8496 230.333 458.3677 228.8892 458.4209 c
227.4448 458.4756 226.292 459.0474 226.314 459.6978 c
226.3354 460.3472 227.5234 460.8306 228.9668 460.7754 c
f
230.0718 463.7002 m
231.5151 463.647 232.6675 463.0747 232.6465 462.4268 c
232.6245 461.7759 231.437 461.2925 229.9927 461.3462 c
228.5488 461.4014 227.3975 461.9717 227.4185 462.6221 c
227.4404 463.2725 228.6279 463.7544 230.0718 463.7002 c
f
253.6304 445.834 m
254.8589 446.2588 255.7183 447.0488 255.5483 447.6016 c
255.3794 448.1558 254.2456 448.2607 253.0171 447.8374 c
251.7891 447.4146 250.9297 446.623 251.0991 446.0698 c
251.2686 445.5161 252.4023 445.4111 253.6304 445.834 c
f
251.8628 448.4805 m
253.0918 448.9043 253.9502 449.6963 253.7808 450.2485 c
253.6123 450.8027 252.4785 450.9072 251.25 450.4844 c
250.0225 450.061 249.1626 449.2695 249.3325 448.7168 c
249.502 448.1641 250.6353 448.0571 251.8628 448.4805 c
f
264.5957 470.6113 m
265.6377 469.8027 266.7466 469.5269 267.0698 469.9951 c
267.3936 470.4644 266.8105 471.501 265.7686 472.311 c
264.7256 473.1201 263.6182 473.396 263.2949 472.9272 c
262.9707 472.4575 263.5537 471.4204 264.5957 470.6113 c
f
265.585 473.6807 m
266.6265 472.8711 267.7349 472.5952 268.0591 473.0654 c
268.3828 473.5342 267.7993 474.5708 266.7568 475.3799 c
265.7153 476.1899 264.6074 476.4658 264.2842 475.9961 c
263.9604 475.5254 264.5425 474.4902 265.585 473.6807 c
f
241.0005 465.6431 m
242.4399 465.5137 243.6484 465.9365 243.6997 466.585 c
243.7505 467.2334 242.625 467.8618 241.1846 467.9893 c
239.7461 468.1177 238.5376 467.6953 238.4873 467.0479 c
238.4351 466.3989 239.561 465.77 241.0005 465.6431 c
f
241.7705 462.6001 m
243.209 462.4712 244.4185 462.8936 244.4697 463.5425 c
244.5205 464.1899 243.3945 464.8179 241.9561 464.9463 c
240.5171 465.0742 239.3076 464.6528 239.2563 464.0049 c
239.2061 463.3564 240.3311 462.7271 241.7705 462.6001 c
f
0 Ap
0.78 0 0.5382 0.117 k
279.3643 470.5068 m
278.9507 462.8931 L
284.9756 467.0571 L
280.0459 461.5068 L
287.1807 460.5859 L
280.0425 459.6958 L
284.9507 454.124 L
278.9434 458.3101 L
279.3281 450.6973 L
277.2637 458.0005 L
272.9429 451.9028 L
275.7861 458.9082 L
268.7842 457.1826 L
275.2061 460.6108 L
268.7969 464.0654 L
275.7935 462.311 L
272.9751 469.3271 L
277.2725 463.2119 L
279.3643 470.5068 L
f
U
0.89 0 0.6141 0.1335 k
292.5938 458.8169 m
285.1426 458.7524 279.4258 460.9624 277.2988 464.73 C
276.8389 464.4375 L
279.064 460.4956 284.9546 458.1816 292.5986 458.248 c
297.6538 458.2925 303.5439 459.4712 308.2402 461.8804 C
308.1973 462.0635 308.1445 462.2432 308.0898 462.4214 C
303.4668 460.0288 297.6138 458.8608 292.5938 458.8169 c
f
U
u
0.91 0 0.6 0 k
249.5576 372.4688 m
250.1416 371.7031 L
250.062 372.6641 L
250.0591 372.6807 250.0581 372.6992 250.0571 372.7178 C
249.4668 374.1426 L
249.4624 373.9082 249.4614 373.6689 249.4692 373.4199 C
246.4639 376.9043 242.3042 378.1328 237.9155 376.7383 c
231.9614 374.8457 227.3008 368.793 227.0752 362.6572 C
227.6382 362.6367 L
227.8555 368.5459 232.3472 374.377 238.0864 376.2002 c
242.4946 377.6025 246.6748 376.2422 249.5576 372.4688 C
f
/BBAccumRotation (0.583182) XT
251.3716 371.7549 m
251.7275 371.2881 L
251.6792 371.8721 L
251.6777 371.8838 251.6772 371.8945 251.6758 371.9063 C
251.3164 372.7725 L
251.3145 372.6309 251.3135 372.4844 251.3179 372.333 C
249.4888 374.4541 246.9561 375.2031 244.2847 374.3535 c
240.6606 373.2012 237.8228 369.5156 237.686 365.7813 C
238.0288 365.7676 L
238.1602 369.3672 240.8945 372.916 244.3892 374.0254 c
247.0728 374.8789 249.6167 374.0508 251.3716 371.7549 C
f
/BBAccumRotation (0.583182) XT
u
1 Ap
0 0.53 0 0 k
193.2729 308.0635 m
188.1807 305.5342 182.002 307.6104 179.4722 312.7021 c
176.9424 317.7949 179.0195 323.9736 184.1118 326.5029 c
189.2031 329.0332 195.3818 326.957 197.9121 321.8643 c
200.4419 316.7715 198.3647 310.5938 193.2729 308.0635 c
f
0 Ap
0 0.22 0 0 k
192.5386 309.5176 m
188.4194 307.8623 183.6538 309.627 181.6445 313.6709 c
179.6357 317.7139 181.1084 322.5762 184.9141 324.8613 C
184.7031 324.7754 184.4927 324.6846 184.2847 324.582 c
180.0332 322.4688 178.2988 317.3105 180.4111 313.0576 c
182.5239 308.8057 187.6836 307.0723 191.9346 309.1846 c
192.1426 309.2871 192.3433 309.4004 192.5386 309.5176 C
f
1 Ap
0 0 0.4743 0 k
184.0781 313.3164 m
183.3857 312.9727 182.5454 313.2549 182.2017 313.9473 c
181.8579 314.6387 182.1401 315.4795 182.8325 315.8232 c
183.5249 316.167 184.3643 315.8848 184.7075 315.1924 c
185.0518 314.501 184.7705 313.6602 184.0781 313.3164 c
f
U
u
0 0.69 0 0 k
218.9434 295.7617 m
215.0142 291.0615 208.0186 290.4346 203.3179 294.3643 c
198.6172 298.293 197.9917 305.2881 201.9204 309.9893 c
205.8491 314.6895 212.8447 315.3164 217.5464 311.3867 c
222.2466 307.458 222.8721 300.4639 218.9434 295.7617 c
f
0 Ap
0 0.33 0 0 k
217.5898 296.8789 m
214.2422 293.4629 208.7759 293.1396 205.043 296.2607 c
201.3101 299.3809 200.6577 304.8154 203.4238 308.7158 C
203.2524 308.54 203.084 308.3604 202.9243 308.168 c
199.6436 304.2432 200.166 298.4023 204.0908 295.1221 c
208.0156 291.8408 213.8574 292.3633 217.1377 296.2881 c
217.2988 296.4814 217.4473 296.6787 217.5898 296.8789 C
f
1 Ap
0 0 0.4743 0 k
207.5967 296.9629 m
207.0625 296.3252 206.1113 296.2402 205.4727 296.7744 c
204.833 297.3086 204.749 298.2588 205.2827 298.8984 c
205.8164 299.5371 206.7676 299.6221 207.4063 299.0879 c
208.0454 298.5537 208.1309 297.6035 207.5967 296.9629 c
f
U
u
0 0.53 0 0 k
249.4731 302.874 m
250.6372 297.6436 247.3408 292.4609 242.1123 291.2969 c
236.8818 290.1338 231.6992 293.4297 230.5356 298.6592 c
229.3716 303.8887 232.6675 309.0703 237.8975 310.2354 c
243.127 311.3994 248.3096 308.1025 249.4731 302.874 c
f
/BBAccumRotation (0.218961) XT
0 Ap
0 0.22 0 0 k
247.9771 302.5313 m
248.5601 298.3887 245.8706 294.4277 241.7168 293.5029 c
237.564 292.5791 233.4482 295.0254 232.2192 299.0225 C
232.25 298.8105 232.2856 298.5967 232.3325 298.3828 c
233.3047 294.0166 237.6323 291.2656 241.9985 292.2373 c
246.3662 293.208 249.1172 297.5361 248.146 301.9023 c
248.0977 302.1162 248.0396 302.3252 247.9771 302.5313 C
f
/BBAccumRotation (0.218961) XT
1 Ap
0 0 0.4743 0 k
242.5903 295.6494 m
242.749 294.9385 242.2998 294.2334 241.5889 294.0752 c
240.8789 293.917 240.1743 294.3643 240.0161 295.0771 c
239.8579 295.7871 240.3057 296.4912 241.0166 296.6494 c
241.728 296.8076 242.4326 296.3604 242.5903 295.6494 c
f
/BBAccumRotation (0.218961) XT
U
u
0 0.53 0 0 k
178.7974 352.2373 m
171.1577 353.1162 165.6777 360.0215 166.5562 367.6602 c
167.4355 375.3008 174.3418 380.7813 181.9819 379.9023 c
189.6206 379.0234 195.1006 372.1172 194.2222 364.4766 c
193.3423 356.8379 186.4365 351.3574 178.7974 352.2373 c
f
/BBAccumRotation (4.597816) XT
0 Ap
0 0.22 0 0 k
179.0356 354.4277 m
173.1431 355.582 169.0361 361.0918 169.7344 367.1602 c
170.4316 373.2266 175.6831 377.6582 181.6821 377.4473 C
181.3799 377.5059 181.0742 377.5566 180.7622 377.5928 c
174.3843 378.3271 168.6177 373.752 167.8838 367.373 c
167.1494 360.9941 171.7256 355.2275 178.105 354.4941 c
178.416 354.457 178.7266 354.4385 179.0356 354.4277 C
f
/BBAccumRotation (4.597816) XT
1 Ap
0 0 0.4743 0 k
172.2334 364.9658 m
171.1943 365.085 170.4507 366.0254 170.5693 367.0635 c
170.689 368.1016 171.6279 368.8457 172.6665 368.7266 c
173.7051 368.6074 174.4497 367.668 174.3296 366.6309 c
174.21 365.5918 173.272 364.8467 172.2334 364.9658 c
f
/BBAccumRotation (4.597816) XT
U
u
0 0.69 0.2 0 k
195.8193 329.4375 m
189.5317 324.0596 180.0737 324.7969 174.6958 331.083 c
169.3174 337.373 170.0547 346.8281 176.3423 352.207 c
182.6289 357.5859 192.0859 356.8486 197.4653 350.5605 c
202.8428 344.2734 202.106 334.8154 195.8193 329.4375 c
f
0 Ap
0 0.33 0 0 k
194.2666 331.2295 m
189.0405 327.4316 181.6909 328.2275 177.4185 333.2227 c
173.1475 338.2158 173.4985 345.5986 178.0591 350.1738 C
177.79 349.9785 177.5259 349.7744 177.2705 349.5557 c
172.02 345.0654 171.4053 337.1689 175.8955 331.9199 c
180.3862 326.6689 188.2817 326.0547 193.5322 330.5449 c
193.7891 330.7646 194.0308 330.9951 194.2666 331.2295 C
f
1 Ap
0 0 0.4743 0 k
180.9775 333.5859 m
180.123 332.8555 178.8359 332.9561 178.106 333.8105 c
177.3745 334.665 177.4756 335.9502 178.3296 336.6807 c
179.1841 337.4121 180.4692 337.3115 181.2002 336.458 c
181.9312 335.6035 181.8315 334.3174 180.9775 333.5859 c
f
U
u
0.11 0.76 0 0 k
211.8965 312.2227 m
205.6064 306.8438 196.1475 307.5811 190.7676 313.8701 c
185.3877 320.1602 186.1255 329.6182 192.415 334.999 c
198.7046 340.3779 208.1631 339.6416 213.5439 333.3516 c
218.9229 327.0635 218.186 317.6025 211.8965 312.2227 c
f
0 Ap
0 0.33 0 0 k
210.3447 314.0156 m
205.1167 310.2168 197.7642 311.0127 193.4912 316.0088 c
189.2183 321.0039 189.5703 328.3887 194.1323 332.9639 C
193.8633 332.7695 193.5986 332.5664 193.3433 332.3477 c
188.0908 327.8555 187.4766 319.9561 191.9683 314.7061 c
196.46 309.4541 204.3569 308.8389 209.6089 313.3311 c
209.8652 313.5508 210.1079 313.7803 210.3447 314.0156 C
f
1 Ap
0 0 0.4743 0 k
197.0508 316.3721 m
196.1963 315.6416 194.9097 315.7422 194.1777 316.5967 c
193.4473 317.4512 193.5479 318.7373 194.4028 319.4688 c
195.2578 320.2002 196.5435 320.1006 197.2744 319.2451 c
198.0059 318.3896 197.9058 317.1035 197.0508 316.3721 c
f
U
u
0 0.69 0 0 k
284.5864 342.0752 m
292.1509 339.0508 295.8325 330.4678 292.8081 322.9063 c
289.7827 315.3398 281.2002 311.6611 273.6372 314.6855 c
266.0728 317.71 262.3916 326.292 265.4165 333.8564 c
268.4395 341.4199 277.0229 345.0996 284.5864 342.0752 c
f
/BBAccumRotation (1.190457) XT
0 Ap
0 0.33 0 0 k
283.7344 339.9023 m
289.4351 337.083 292.0996 330.3086 289.6987 324.3018 c
287.2974 318.2949 280.6982 315.2256 274.625 317.1104 C
274.918 316.9668 275.2153 316.8301 275.5234 316.7061 c
281.8394 314.1807 289.0044 317.2529 291.5303 323.5684 c
294.0552 329.8828 290.9829 337.0518 284.6675 339.5771 c
284.3579 339.7002 284.0464 339.8066 283.7344 339.9023 C
f
/BBAccumRotation (1.190457) XT
1 Ap
0 0 0.4743 0 k
287.7554 327.2393 m
288.7827 326.8271 289.2832 325.6602 288.8721 324.6328 c
288.4609 323.6045 287.2944 323.1035 286.2656 323.5156 c
285.2383 323.9258 284.7368 325.0938 285.1489 326.1201 c
285.5586 327.1484 286.7266 327.6494 287.7554 327.2393 c
f
/BBAccumRotation (1.190457) XT
U
u
0 0.69 0.2 0 k
270.543 316.5928 m
272.2017 309.1387 267.5034 301.751 260.0498 300.0928 c
252.5957 298.4336 245.209 303.1318 243.5498 310.5859 c
241.8916 318.0391 246.5889 325.4258 254.0435 327.0869 c
261.4971 328.7441 268.8843 324.0459 270.543 316.5928 c
f
/BBAccumRotation (0.218961) XT
0 Ap
0 0.33 0 0 k
268.4102 316.1045 m
269.2407 310.2002 265.4072 304.5557 259.4873 303.2373 c
253.5688 301.9209 247.7026 305.4053 245.9512 311.1035 C
245.9932 310.8008 246.0449 310.4971 246.1123 310.1934 c
247.4971 303.9697 253.6665 300.0488 259.8882 301.4336 c
266.1128 302.8174 270.0342 308.9844 268.6494 315.209 c
268.582 315.5127 268.4995 315.8105 268.4102 316.1045 C
f
/BBAccumRotation (0.218961) XT
1 Ap
0 0 0.4743 0 k
260.7324 306.2949 m
260.9585 305.2822 260.3193 304.2783 259.3066 304.0527 c
258.2925 303.8271 257.2886 304.4658 257.0635 305.4785 c
256.8379 306.4922 257.4756 307.4951 258.4893 307.7207 c
259.5029 307.9463 260.5073 307.3076 260.7324 306.2949 c
f
/BBAccumRotation (0.218961) XT
U
u
0 0.69 0.2 0 k
244.8608 309.2539 m
241.3931 301.3438 232.1699 297.7422 224.2607 301.209 c
216.3506 304.6768 212.749 313.8994 216.2158 321.8086 c
219.6831 329.7178 228.9053 333.3193 236.8169 329.8535 c
244.7266 326.3867 248.3276 317.1631 244.8608 309.2539 c
f
0 Ap
0 0.33 0 0 k
242.5879 310.2324 m
239.4004 304.29 232.1313 301.7012 225.8481 304.4541 c
219.5674 307.208 216.5444 314.3066 218.7534 320.6768 C
218.5889 320.3721 218.4336 320.0605 218.292 319.7393 c
215.397 313.1348 218.4063 305.4346 225.0093 302.54 c
231.6133 299.6436 239.3125 302.6504 242.2085 309.2559 c
242.3496 309.5791 242.4736 309.9053 242.5879 310.2324 C
f
1 Ap
0 0 0.4743 0 k
229.0283 306.4131 m
228.5576 305.3379 227.3032 304.8486 226.2295 305.3203 c
225.1519 305.791 224.6626 307.0439 225.1348 308.1191 c
225.606 309.1943 226.8589 309.6836 227.9336 309.2129 c
229.0093 308.7402 229.499 307.4873 229.0283 306.4131 c
f
U
u
0 0.53 0 0 k
275.9702 359.8184 m
280.6646 357.9004 282.9141 352.541 280.9961 347.8486 c
279.0767 343.1543 273.7173 340.9043 269.0234 342.8223 c
264.3301 344.7402 262.0806 350.0996 263.9995 354.7949 c
265.9175 359.4883 271.2778 361.7383 275.9702 359.8184 c
f
/BBAccumRotation (1.182770) XT
0 Ap
0 0.22 0 0 k
275.4297 358.4707 m
278.9639 356.6885 280.5918 352.459 279.0679 348.7314 c
277.5439 345.0039 273.4214 343.125 269.6509 344.3271 C
269.8311 344.2363 270.0171 344.1494 270.209 344.0703 c
274.1274 342.4688 278.603 344.3477 280.2046 348.2666 c
281.8071 352.1855 279.9282 356.6611 276.0093 358.2627 c
275.8169 358.3408 275.6235 358.4082 275.4297 358.4707 C
f
/BBAccumRotation (1.182770) XT
1 Ap
0 0 0.4743 0 k
277.8716 350.5693 m
278.5098 350.3076 278.8149 349.5791 278.5542 348.9414 c
278.2939 348.3037 277.5654 347.9971 276.9268 348.2588 c
276.2891 348.5186 275.9839 349.2471 276.2437 349.8848 c
276.5059 350.5234 277.2329 350.8301 277.8716 350.5693 c
f
/BBAccumRotation (1.182770) XT
U
u
0 0.53 0 0 k
205.332 367.4316 m
200.2397 364.9014 194.061 366.9775 191.5313 372.0703 c
189.0015 377.1631 191.0786 383.3418 196.1709 385.8711 c
201.2622 388.4004 207.4414 386.3242 209.9712 381.2324 c
212.5015 376.1396 210.4238 369.9619 205.332 367.4316 c
f
0 Ap
0 0.22 0 0 k
204.5977 368.8857 m
200.4785 367.2305 195.7129 368.9941 193.7041 373.0391 c
191.6948 377.082 193.1675 381.9443 196.9731 384.2295 C
196.7622 384.1436 196.5518 384.0527 196.3438 383.9492 c
192.0923 381.8359 190.3584 376.6777 192.4702 372.4258 c
194.583 368.1738 199.7427 366.4404 203.9937 368.5527 c
204.2017 368.6553 204.4023 368.7676 204.5977 368.8857 C
f
1 Ap
0 0 0.4743 0 k
196.1372 372.6846 m
195.4448 372.3398 194.6045 372.623 194.2612 373.3145 c
193.917 374.0068 194.1992 374.8477 194.8916 375.1904 c
195.584 375.5352 196.4233 375.2529 196.7671 374.5605 c
197.1113 373.8691 196.8296 373.0273 196.1372 372.6846 c
f
U
u
0 0.69 0.2 0 k
207.0283 345.2744 m
201.0366 340.1484 192.0234 340.8516 186.8989 346.8428 c
181.7734 352.8359 182.4761 361.8467 188.4678 366.9727 c
194.459 372.0977 203.4707 371.3955 208.5972 365.4033 c
213.7212 359.4121 213.0195 350.3984 207.0283 345.2744 c
f
0 Ap
0 0.33 0 0 k
205.5488 346.9814 m
200.5684 343.3623 193.5645 344.1211 189.4932 348.8809 c
185.4233 353.6396 185.7578 360.6748 190.1035 365.0342 C
189.8477 364.8477 189.5957 364.6543 189.3525 364.4453 c
184.3486 360.166 183.7637 352.6416 188.042 347.6396 c
192.3218 342.6357 199.8457 342.0498 204.8491 346.3301 c
205.0933 346.5391 205.3242 346.7588 205.5488 346.9814 C
f
1 Ap
0 0 0.4743 0 k
192.8853 349.2275 m
192.0708 348.5313 190.8442 348.627 190.1484 349.4414 c
189.4517 350.2559 189.5479 351.4805 190.3618 352.1768 c
191.1763 352.874 192.4009 352.7773 193.0972 351.9639 c
193.7939 351.1494 193.6987 349.9248 192.8853 349.2275 c
f
U
u
0.11 0.76 0 0 k
255.5361 335.4668 m
257.1709 328.1211 252.5415 320.8418 245.1963 319.208 c
237.8501 317.5723 230.5718 322.2021 228.937 329.5469 c
227.3022 336.8926 231.9307 344.1709 239.2769 345.8066 c
246.6221 347.4404 253.9019 342.8115 255.5361 335.4668 c
f
/BBAccumRotation (0.218961) XT
0 Ap
0 0.33 0 0 k
253.4346 334.9863 m
254.2529 329.168 250.4756 323.6055 244.6411 322.3066 c
238.8081 321.0088 233.0283 324.4424 231.3037 330.0576 C
231.3447 329.7588 231.395 329.459 231.4619 329.1611 c
232.8257 323.0273 238.9048 319.1631 245.0366 320.5273 c
251.1704 321.8926 255.0352 327.9688 253.6704 334.1025 c
253.6035 334.4033 253.5229 334.6963 253.4346 334.9863 C
f
/BBAccumRotation (0.218961) XT
1 Ap
0 0 0.4743 0 k
245.8696 325.3193 m
246.0908 324.3213 245.4619 323.332 244.4639 323.1094 c
243.4644 322.8867 242.4751 323.5156 242.2534 324.5146 c
242.0313 325.5137 242.6597 326.5029 243.6592 326.7246 c
244.6572 326.9473 245.6465 326.3174 245.8696 325.3193 c
f
/BBAccumRotation (0.218961) XT
U
u
0.11 0.76 0 0 k
227.2578 328.8682 m
220.9082 323.4355 211.3564 324.1807 205.9258 330.5313 c
200.4937 336.8818 201.2383 346.4307 207.5884 351.8623 c
213.9385 357.2949 223.4883 356.5518 228.9209 350.2002 c
234.3516 343.8506 233.6079 334.2998 227.2578 328.8682 c
f
0 Ap
0 0.33 0 0 k
225.6909 330.6777 m
220.4126 326.8428 212.9897 327.6465 208.6753 332.6904 c
204.3618 337.7334 204.7163 345.1904 209.3218 349.8096 C
209.0513 349.6123 208.7837 349.4072 208.5254 349.1865 c
203.2231 344.6504 202.6025 336.6758 207.1372 331.375 c
211.6724 326.0723 219.6455 325.4512 224.9482 329.9863 c
225.2075 330.207 225.4521 330.4404 225.6909 330.6777 C
f
1 Ap
0 0 0.4743 0 k
212.2695 333.0576 m
211.4067 332.3193 210.1074 332.4209 209.3691 333.2842 c
208.6304 334.1475 208.7324 335.4443 209.5957 336.1836 c
210.459 336.9219 211.7568 336.8203 212.4951 335.958 c
213.2329 335.0947 213.1318 333.7959 212.2695 333.0576 c
f
U
u
0 0.69 0 0 k
241.0493 348.9951 m
237.1826 344.3691 230.2969 343.7529 225.6709 347.6191 c
221.0439 351.4863 220.4287 358.3711 224.2954 362.998 c
228.1621 367.625 235.0474 368.2422 239.6748 364.373 c
244.3008 360.5068 244.9165 353.6221 241.0493 348.9951 c
f
0 Ap
0 0.33 0 0 k
239.7178 350.0947 m
236.4224 346.7324 231.043 346.415 227.3687 349.4863 c
223.6943 352.5566 223.0522 357.9063 225.7754 361.7451 C
225.6064 361.5723 225.4404 361.3945 225.2832 361.2061 c
222.0547 357.3428 222.5688 351.5938 226.4316 348.3652 c
230.2944 345.1367 236.0439 345.6504 239.2725 349.5137 c
239.4307 349.7031 239.5771 349.8975 239.7178 350.0947 C
f
1 Ap
0 0 0.4743 0 k
229.8823 350.1777 m
229.3564 349.5498 228.4199 349.4668 227.791 349.9912 c
227.1616 350.5166 227.0791 351.4531 227.6045 352.082 c
228.1299 352.7109 229.0659 352.7949 229.6948 352.2686 c
230.3237 351.7432 230.4077 350.8076 229.8823 350.1777 c
f
U
u
0 0.53 0 0 k
276.5327 338.1074 m
277.9927 331.5488 273.8594 325.0488 267.3018 323.5889 c
260.7422 322.1299 254.2427 326.2637 252.7832 332.8213 c
251.3232 339.3799 255.4561 345.8799 262.0161 347.3398 c
268.5742 348.7998 275.0737 344.665 276.5327 338.1074 c
f
/BBAccumRotation (0.218961) XT
0 Ap
0 0.22 0 0 k
274.6563 337.6777 m
275.3877 332.4824 272.0151 327.5156 266.8057 326.3555 c
261.5972 325.1973 256.436 328.2646 254.8945 333.2773 C
254.9331 333.0117 254.9775 332.7441 255.0366 332.4756 c
256.2554 327 261.6831 323.5488 267.1592 324.7676 c
272.6362 325.9854 276.0864 331.4131 274.8682 336.8887 c
274.8081 337.1572 274.7354 337.4189 274.6563 337.6777 C
f
/BBAccumRotation (0.218961) XT
1 Ap
0 0 0.4743 0 k
267.9014 329.0469 m
268.1006 328.1553 267.5371 327.2715 266.6455 327.0732 c
265.7544 326.875 264.8711 327.4365 264.6733 328.3291 c
264.4741 329.2197 265.0361 330.1025 265.9277 330.3018 c
266.8193 330.499 267.7031 329.9395 267.9014 329.0469 c
f
/BBAccumRotation (0.218961) XT
U
u
0 0.69 0 0 k
264.1953 350.5693 m
263.1978 344.6494 257.5903 340.6582 251.6704 341.6553 c
245.749 342.6523 241.7588 348.2617 242.7563 354.1816 c
243.7539 360.1035 249.3618 364.0938 255.2832 363.0957 c
261.2031 362.0986 265.1929 356.4902 264.1953 350.5693 c
f
0 Ap
0 0.33 0 0 k
262.4971 350.8447 m
261.3564 346.2979 256.8921 343.3213 252.1909 344.1123 c
247.4893 344.9053 244.2485 349.1797 244.6572 353.8486 C
244.6001 353.6152 244.5474 353.3789 244.5068 353.1377 c
243.6738 348.1943 247.0054 343.5117 251.9492 342.6787 c
256.8916 341.8457 261.5752 345.1777 262.4082 350.1221 c
262.4487 350.3643 262.4761 350.6055 262.4971 350.8447 C
f
1 Ap
0 0 0.4743 0 k
254.0034 345.9717 m
253.8677 345.167 253.104 344.625 252.3003 344.7598 c
251.4951 344.8965 250.9531 345.6582 251.0889 346.4629 c
251.2246 347.2676 251.9863 347.8105 252.7905 347.6748 c
253.5957 347.5391 254.1387 346.7773 254.0034 345.9717 c
f
U
u
0 0.69 0.2 0 k
222.7563 360.0977 m
218.4736 356.4336 212.0317 356.9375 208.3687 361.2197 c
204.7051 365.502 205.2075 371.9434 209.4902 375.6074 c
213.7725 379.2695 220.2139 378.7676 223.8774 374.4844 c
227.5405 370.2031 227.0386 363.7607 222.7563 360.0977 c
f
0 Ap
0 0.33 0 0 k
221.6992 361.3174 m
218.1396 358.7324 213.1333 359.2734 210.2231 362.6758 c
207.314 366.0762 207.5532 371.1064 210.6597 374.2217 C
210.4766 374.0898 210.2969 373.9502 210.1221 373.8008 c
206.5459 370.7422 206.1274 365.3633 209.1855 361.7891 c
212.2446 358.2129 217.6226 357.793 221.1987 360.8516 c
221.3735 361.002 221.5386 361.1582 221.6992 361.3174 C
f
1 Ap
0 0 0.4743 0 k
212.6475 362.9238 m
212.0649 362.4258 211.1885 362.4941 210.6914 363.0762 c
210.1934 363.6582 210.2617 364.5332 210.8442 365.0313 c
211.4258 365.5293 212.3013 365.4609 212.7988 364.8789 c
213.2969 364.2969 213.2295 363.4209 212.6475 362.9238 c
f
U
0 Ap
0.91 0 0.6 0 k
216.8716 378.5293 m
217.4673 378.1035 L
221.9395 384.3672 230.9985 387.4824 238.5391 385.3506 c
244.3311 383.7129 247.8975 379.2393 248.3232 373.0752 C
248.4097 371.8242 L
249.0107 372.9248 L
251.4985 377.4814 254.6846 379.3564 258.2236 378.3477 c
264.5537 376.5449 270.0435 366.3613 269.6787 359.7842 C
270.4102 359.7441 L
270.7925 366.6406 265.2261 377.1152 258.4248 379.0527 c
255.8438 379.7881 252.1616 379.4551 248.9111 374.1709 C
248.1426 380.1094 244.5059 384.4258 238.7383 386.0557 c
230.9146 388.2676 221.5137 385.0322 216.8716 378.5293 C
f
247.3032 375.7578 m
247.647 374.9043 L
247.8169 375.8086 L
247.8203 375.8262 247.8237 375.8438 247.8271 375.8604 C
247.6465 377.3213 L
247.583 377.1074 247.522 376.8867 247.4658 376.6553 C
245.5854 380.6289 242.0708 382.8193 237.6748 382.6543 c
231.7109 382.4297 225.8784 378.0439 224.1074 372.4531 C
224.6201 372.29 L
226.3262 377.6758 231.9468 381.9004 237.6943 382.1152 c
242.1094 382.2832 245.6118 379.9648 247.3032 375.7578 C
f
/BBAccumRotation (0.313197) XT
257.8301 375.3174 m
256.0132 376.4707 253.1899 377.0947 249.6113 374.3555 C
249.2998 373.3057 L
252.207 375.833 255.022 376.3457 257.4878 374.7793 c
262.3154 371.7139 264.373 361.877 262.4443 356.4873 C
263.0439 356.2734 L
265.0664 361.9238 263.0166 372.0234 257.8301 375.3174 c
f
/BBAccumRotation (5.994927) XT
254.0366 372.8672 m
252.7749 373.6689 250.8135 374.1016 248.3267 372.1992 C
248.1108 371.4697 L
250.1309 373.2256 252.0859 373.582 253.7993 372.4932 c
256.8003 370.5879 258.2539 364.9219 257.5679 361.0664 C
257.7168 361.0547 257.8647 361.043 258.0142 361.0313 C
258.7212 365.0449 257.2466 370.8301 254.0366 372.8672 c
f
U
1 Ap
0 1 0.18 0.18 k
271.3037 280.5234 m
272.0903 275.7881 268.8882 271.3115 264.1519 270.5254 c
259.415 269.7393 254.939 272.9414 254.1538 277.6787 c
253.3667 282.4141 256.5698 286.8906 261.3047 287.6777 c
266.0425 288.4629 270.5181 285.2617 271.3037 280.5234 c
f
/BBAccumRotation (0.164428) XT
0 0.13 0 0 k
267.7598 277.6387 m
268.2559 274.6514 266.2368 271.8301 263.25 271.335 c
260.2656 270.8398 257.4419 272.8574 256.9482 275.8438 c
256.4531 278.8311 258.4717 281.6514 261.4561 282.1465 c
264.4429 282.6416 267.2651 280.623 267.7598 277.6387 c
f
/BBAccumRotation (0.164428) XT
0.31 1 0.05 0 k
262.7871 273.2686 m
262.8672 272.7793 262.5356 272.3174 262.0479 272.2363 c
261.5591 272.1533 261.0967 272.4854 261.0156 272.9736 c
260.9351 273.4648 261.2651 273.9258 261.7539 274.0068 c
262.2446 274.0889 262.7056 273.7578 262.7871 273.2686 c
f
/BBAccumRotation (0.164428) XT
u
u
0 Ap
0 0.34 0 0 k
432.5342 489.6938 m
441.4697 504.6045 461.2217 509.3921 477.8164 501.1758 C
491.6299 508.8511 503.1963 519.0913 490.4277 528.125 c
481.582 534.3755 459.5049 508.0229 458.998 508.2236 C
467.2051 524.6606 474.9658 546.8936 456.1758 545.8691 c
445.0664 545.2783 443.9502 525.8208 445.5684 509.9531 C
445.373 509.9312 445.1787 509.8989 444.9854 509.8716 C
442.3975 528.1416 436.1025 551.4365 421.082 539.7593 c
412.4219 533.021 431.999 504.3086 431.7656 504.1191 C
418.4404 516.8594 399.1865 531.1616 394.6133 512.7451 c
392.0781 502.5142 423.1289 491.8721 423.0107 491.5088 C
405.1738 494.0029 383.5176 493.9053 390.0098 476.9629 c
393.5645 467.731 422.832 474.7896 423.0049 474.2578 C
408.2295 466.1909 394.4414 454.9521 408.2207 445.5786 c
415.2246 440.8037 424.2695 448.2881 431.8672 458.1499 C
426.8477 468.1519 426.6904 479.9424 432.5342 489.6938 c
f
U
u
0.1705 0.55 0.0275 0 k
432.2607 491.0283 m
439.5762 501.3501 453.1348 505.2671 467.1973 502.5273 C
472.5703 507.041 474.793 512.0747 468.29 516.6787 c
463.333 520.1821 456.7822 515.0396 451.1982 508.126 C
455.3848 518.2832 457.1689 528.7715 446.3076 528.1851 c
440.6748 527.8799 438.7109 520.6445 438.4854 512.4531 C
436.1016 522.2866 431.7275 530.5205 423.7539 524.3193 c
419.1982 520.771 422.125 513.3589 426.9053 506.3755 C
418.5166 513.1338 409.3213 517.4888 406.7402 507.1011 c
405.3965 501.6958 411.5049 497.7207 419.1113 495.085 C
408.6016 495.7319 398.9814 493.9473 402.7363 484.1567 c
404.8027 478.7681 412.582 479.2476 420.6426 481.6846 C
412.1211 476.3306 405.9756 469.6621 414.3281 463.9814 c
418.2568 461.3091 423.0947 464.1265 427.5938 468.8906 C
426.3223 476.8438 427.7432 484.6553 432.2607 491.0283 c
f
U
U
u
438.252 490.6797 m
444.1611 497.7847 450.5156 499.001 462.3398 499.439 C
466.6797 502.5449 467.1572 506.0083 464.5293 508.1982 c
458.251 513.4307 455.1387 506.3755 450.6289 501.6167 C
454.0098 508.6084 455.4512 515.8271 446.6787 515.4238 c
442.1289 515.2134 440.543 510.2339 440.3604 504.5952 C
438.4355 511.3643 434.9023 517.0313 428.4619 512.7627 c
424.7822 510.3203 427.1465 505.2188 431.0068 500.4121 C
424.2314 505.064 416.8057 508.0615 414.7207 500.9116 c
413.6348 497.1909 418.5693 494.4546 424.7119 492.6411 C
416.2246 493.0859 408.4541 491.8579 411.4854 485.1191 c
413.1553 481.4097 419.4385 481.7402 425.9492 483.417 C
419.0664 479.7324 414.1025 475.1426 420.8486 471.2319 c
424.0215 469.3926 427.9297 471.332 431.5645 474.6113 C
431.6826 479.731 434.6035 486.2935 438.252 490.6797 c
Bb
1 (Unnamed gradient) 437.6602 486.04 34.5085 87.3742 0.7328 0 0 0.7328 2198.7168 2169.0635 Bg
52.7616 36.2736 22.3778 -32.5496 400.7188 498.7803 Xm
5029.4644 3457.7539 22.3778 -32.5496 -4628.7461 -2958.9736 Bc
52.7616 36.2736 22.3778 -32.5496 400.7188 498.7803 Bm
5029.4644 3457.7539 22.3778 -32.5496 453.4805 535.0537 Bc
f
0 BB
U
0.41 0.01 0.94 0 k
480.2139 492.5381 m
479.5791 495.8936 479.0029 499.2329 478.7715 502.5415 C
466.6172 506.1489 447.1992 508.6938 434.3018 495.0513 c
422.3066 482.3628 427.209 464.9663 433.1025 453.1045 C
436.1816 453.9414 439.3779 454.334 442.4697 454.2324 C
437.6602 462.7441 432.2617 477.106 440.8467 488.4121 c
450.25 500.7969 471.541 495.5444 480.2139 492.5381 C
f
0 R
0 0.29 1 0 K
480.6162 456.9707 m
492.9961 441.6099 517.9395 464.6084 508.7002 481.2954 c
504.5332 488.8218 494.0293 494.7192 491.9541 502.6309 c
489.7617 510.9932 498.6611 526.8711 507.3535 517.5918 C
508.1895 537.458 486.0586 524.1025 480.3584 515.6689 c
471.6025 502.7119 476.2246 492.8926 482.7451 480.3018 C
483.0703 479.9521 483.0869 479.9619 482.7959 480.3311 C
474.374 488.3242 461.166 493.356 450.9355 486.6548 c
438.5273 478.5273 446.2822 463.6748 451.6689 453.8638 C
452.0625 453.5728 452.0801 453.5889 451.7197 453.9116 C
431.752 463.5225 392.0117 448.7188 414.5879 423.2588 C
411.5791 429.3657 418.8145 440.1948 426.0898 442.8525 c
437.4688 447.0098 444.4531 439.9531 453.4824 434.4775 c
462.1299 429.2334 470.3154 426.8662 479.0127 434.4775 c
487.9277 442.2808 480.6162 456.9707 y
Bb
1 (Unnamed gradient 4) 532.2109 448.4053 136.6854 60.8917 0.7328 0 0 0.7328 2198.7168 2169.0635 Bg
-32.4665 30.6105 103.0606 109.3095 433.8594 403.0747 Xm
-4503.3188 4245.8799 103.0606 109.3095 4937.1787 -3842.8047 Bc
-32.4665 30.6105 103.0606 109.3095 433.8594 403.0747 Bm
-4503.3188 4245.8799 103.0606 109.3095 401.3926 433.6851 Bc
b
2 BB
u
0 0.29 1 0 k
500.1016 467.2441 m
499.6914 464.1436 497.3447 461.7773 494.4404 461.1958 C
495.3057 460.6294 496.3086 460.2441 497.4023 460.0996 c
501.2998 459.585 504.8779 462.3281 505.3926 466.2256 c
505.9082 470.124 503.166 473.7017 499.2666 474.2168 c
498.4688 474.3218 497.6846 474.2891 496.9365 474.1392 C
499.1553 472.687 500.4717 470.0488 500.1016 467.2441 c
f
466.9072 438.0176 m
463.3662 438.0176 460.3594 440.3013 459.2754 443.4771 C
458.7686 442.4214 458.4844 441.2383 458.4844 439.9888 c
458.4844 435.5347 462.0947 431.9238 466.5498 431.9238 c
471.0039 431.9238 474.6152 435.5347 474.6152 439.9888 c
474.6152 440.9014 474.4609 441.7773 474.1816 442.5947 C
472.8809 439.8872 470.1123 438.0176 466.9072 438.0176 c
f
1 Ap
0.06 0.57 1 0 k
471.0684 471.3848 m
478.5879 465.5322 483.0684 458.7144 481.0781 456.1587 c
479.0889 453.6021 471.3799 456.2744 463.8623 462.1279 c
456.3438 467.9805 451.8613 474.7974 453.8525 477.3535 c
455.8418 479.9102 463.5498 477.2373 471.0684 471.3848 c
f
/BBAccumRotation (0.909327) XT
0 Ap
0 0.57 1 0 k
467.2002 452.6123 m
463.4883 457.1206 459.1436 451.4365 460.2119 449.5 c
464.9531 440.9053 477.584 445.1445 479.7363 454.0576 c
475.2764 442.8022 467.2002 452.6123 v
f
482.5791 470.3682 m
477.3311 472.9312 481.8496 478.478 483.9824 477.8882 c
493.4434 475.2759 492.2568 462.0049 484.0879 457.8394 c
493.998 464.7939 482.5791 470.3682 v
f
/BBAccumRotation (3.078176) XT
0.06 0.49 1 0 k
501.625 434.8311 m
495.7578 435.6987 490.6621 435.689 486.2285 439.9204 c
481.9385 444.0146 480.5127 449.2959 479.9902 454.8921 C
485.8984 453.9131 490.9277 453.6431 495.2725 449.7969 c
499.7393 445.8442 501.625 434.8311 y
f
/BBAccumRotation (0.835289) XT
1 Ap
0.11 1 1 0 k
488.0381 453.2598 m
488.0381 450.6982 485.9619 448.6216 483.4004 448.6216 c
480.8379 448.6216 478.7617 450.6982 478.7617 453.2598 c
478.7617 455.8213 480.8379 457.8979 483.4004 457.8979 c
485.9619 457.8979 488.0381 455.8213 488.0381 453.2598 c
f
U
0 0.38 1 0 k
158.6514 243.6973 m
158.6514 247.5684 155.7266 250.7051 152.1201 250.7051 c
148.5142 250.7051 145.5903 247.5684 145.5903 243.6973 c
145.5903 239.8271 148.5142 236.6904 152.1201 236.6904 c
155.7266 236.6904 158.6514 239.8271 158.6514 243.6973 c
f
u
0 Ap
0.04 0.37 0 0 k
302.6875 497.1772 m
301.5474 493.8047 291.3735 496.937 291.3179 496.8462 C
296.271 494.251 301.6333 490.2964 297.1147 486.8643 c
294.3872 484.7954 287.5771 493.5166 287.4204 493.4512 C
289.9526 488.0107 292.3457 480.6538 286.5508 480.9912 c
283.124 481.1885 282.7798 487.6265 283.2798 492.8784 C
283.2188 492.8872 283.1587 492.8979 283.0996 492.9058 C
282.3022 486.8599 280.3604 479.1494 275.728 483.0151 c
273.0566 485.2446 279.0942 494.7471 279.0225 494.8091 C
274.9131 490.5938 268.9751 485.8594 267.5645 491.9546 c
266.7827 495.3408 276.3589 498.8613 276.3228 498.9824 C
270.8218 498.1567 264.1426 498.188 266.145 503.7959 c
267.2407 506.8525 276.2676 504.5151 276.3213 504.6914 C
271.7637 507.3613 267.5117 511.0806 271.7607 514.1826 c
274.0791 515.8774 277.1216 512.9038 279.5596 509.2964 C
279.8208 509.4878 277.5088 520.1489 282.4595 519.7847 c
285.2686 519.5762 285.9404 515.1885 285.7744 510.7236 C
285.8965 510.7002 288.9819 520.7407 292.8989 517.5889 c
295.2505 515.6982 291.0283 507.2627 291.1387 507.0938 C
295.0327 510.9302 299.8608 514.2358 301.2144 508.811 c
302.0376 505.5039 292.7192 501.9087 292.7192 501.8442 C
298.1509 502.7324 304.5664 502.7295 302.6875 497.1772 c
f
1 Ap
0.08 0.72 0 0 k
290.3813 500.1167 m
290.3813 503.7129 287.6636 506.6299 284.3105 506.6299 c
280.959 506.6299 278.2417 503.7129 278.2417 500.1167 c
278.2417 496.5181 280.959 493.6035 284.3105 493.6035 c
287.6636 493.6035 290.3813 496.5181 290.3813 500.1167 c
f
U
0 Ap
0 0.43 1 0 k
433.0234 504.4277 m
430.7529 503.354 433.6504 495.9517 433.5918 495.9058 C
431.4355 499.439 428.3027 503.1885 426.2295 499.5864 c
424.9795 497.4121 431.5332 492.8916 431.498 492.77 C
427.5313 494.3076 422.2373 495.6152 422.8789 491.3057 c
423.2559 488.7573 427.7666 488.9214 431.3887 489.6367 C
431.3984 489.5918 431.4111 489.5488 431.4219 489.5044 C
427.2656 488.5127 422.0293 486.5566 425.0479 483.3467 c
426.7891 481.4961 432.9854 486.6304 433.0332 486.5801 C
430.3848 483.2329 427.5029 478.4839 431.8486 477.8276 c
434.2617 477.4648 436.0439 484.8545 436.1309 484.8345 C
435.9414 480.668 436.4316 475.6772 440.1973 477.5405 c
442.25 478.5596 439.9883 485.1548 440.1074 485.207 C
442.2891 481.9741 445.1768 479.0391 447.04 482.4185 c
448.0586 484.2617 445.7725 486.3418 443.0879 487.9287 C
443.2031 488.1377 450.793 487.1055 450.1914 490.7822 c
449.8496 492.8706 446.7461 493.085 443.6475 492.6685 C
443.6221 492.7583 450.4004 495.7217 447.9297 498.4443 c
446.4482 500.0776 440.8672 496.3696 440.7422 496.4419 C
443.1406 499.604 445.1055 503.4282 441.2305 504.0859 c
438.8701 504.4854 437.0186 497.2837 436.9736 497.2793 C
437.2109 501.3984 436.7598 506.1943 433.0234 504.4277 c
f
/BBAccumRotation (1.664355) XT
1 Ap
0.11 1 1 0 k
443.4258 490.9668 m
443.4258 487.561 440.6631 484.8003 437.2578 484.8003 c
433.8525 484.8003 431.0918 487.561 431.0918 490.9668 c
431.0918 494.3735 433.8525 497.1338 437.2578 497.1338 c
440.6631 497.1338 443.4258 494.3735 443.4258 490.9668 c
f
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
